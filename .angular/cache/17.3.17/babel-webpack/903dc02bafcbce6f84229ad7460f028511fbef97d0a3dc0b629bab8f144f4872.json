{"ast":null,"code":"// import { Component } from '@angular/core';\n// import { HttpClient, HttpEventType } from '@angular/common/http';\n// import { environment } from 'src/environments/environment';\n// @Component({\n//   selector: 'app-compress-pdf',\n//   templateUrl: './compress-pdf.component.html',\n//   styleUrls: ['./compress-pdf.component.css']\n// })\n// export class CompressPdfComponent {\n//   selectedFile: File | null = null;\n//   originalSize: number | null = null;\n//   compressedSize: number | null = null;\n//   downloadUrl: string | null = null;\n//   isUploading = false;\n//   uploadProgress = 0;\n//   constructor(private http: HttpClient) {}\n//   onFileSelected(event: any) {\n//     const file = event.target.files[0];\n//     if (file && file.type === 'application/pdf') {\n//       this.selectedFile = file;\n//       this.originalSize = file.size;\n//       this.downloadUrl = null;\n//       this.compressedSize = null;\n//     } else {\n//       alert(\"Please select a valid PDF file.\");\n//     }\n//   }\n//   compressPDF() {\n//     if (!this.selectedFile) return;\n//     const formData = new FormData();\n//     formData.append('file', this.selectedFile);\n//     this.isUploading = true;\n//     this.uploadProgress = 0;\n//     this.http.post(\n//       `${environment.apiUrl}/compress-pdf`,\n//       formData,\n//       {\n//         responseType: 'blob',\n//         reportProgress: true,\n//         observe: 'events'\n//       }\n//     ).subscribe(event => {\n//       if (event.type === HttpEventType.UploadProgress && event.total) {\n//         this.uploadProgress = Math.round(100 * (event.loaded / event.total));\n//       }\n//       if (event.type === HttpEventType.Response) {\n//         const blob = new Blob([event.body!], { type: 'application/pdf' });\n//         this.compressedSize = blob.size;\n//         this.downloadUrl = window.URL.createObjectURL(blob);\n//         this.isUploading = false;\n//       }\n//     }, err => {\n//       console.error('Compression failed', err);\n//       alert(\"Compression failed. Try again.\");\n//       this.isUploading = false;\n//     });\n//   }\n// }","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}