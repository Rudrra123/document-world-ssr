{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"fileInput\"];\nfunction CompressImageComponent_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\uD83D\\uDCC1 Click to upload or drag & drop image\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CompressImageComponent_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"\\u2705 Selected: \", ctx_r2.selectedFile.name, \"\");\n  }\n}\nfunction CompressImageComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"div\", 11);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"width\", ctx_r2.progress, \"%\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.progress, \"% Uploading...\");\n  }\n}\nfunction CompressImageComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"p\");\n    i0.ɵɵtext(2, \"\\u2705 Compressed!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"a\", 13);\n    i0.ɵɵtext(6, \"\\u2B07 Download Image\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate2(\"Original: \", (ctx_r2.originalSize / 1024).toFixed(2), \" KB \\u2192 Compressed: \", (ctx_r2.compressedSize / 1024).toFixed(2), \" KB\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"href\", ctx_r2.downloadUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nexport let CompressImageComponent = /*#__PURE__*/(() => {\n  class CompressImageComponent {\n    http;\n    fileInput;\n    selectedFile = null;\n    progress = 0;\n    originalSize = 0;\n    compressedSize = 0;\n    constructor(http) {\n      this.http = http;\n    }\n    onFileSelected(event) {\n      const input = event.target;\n      if (input.files?.length) {\n        this.selectedFile = input.files[0];\n        this.originalSize = this.selectedFile.size;\n      }\n    }\n    upload() {\n      if (!this.selectedFile) return;\n      const formData = new FormData();\n      formData.append('file', this.selectedFile);\n      this.http.post('http://127.0.0.1:8000/api/compress-image', formData, {\n        observe: 'events',\n        responseType: 'blob',\n        reportProgress: true\n      }).subscribe(event => {\n        if (event.type === HttpEventType.UploadProgress && event.total) {\n          this.progress = Math.round(event.loaded / event.total * 100);\n        }\n        if (event.type === HttpEventType.Response) {\n          const compressedBlob = new Blob([event.body], {\n            type: event.body?.type || 'image/jpeg'\n          });\n          this.compressedSize = compressedBlob.size;\n          const url = URL.createObjectURL(compressedBlob);\n          const a = document.createElement('a');\n          a.href = url;\n          a.download = 'compressed-image' + this.getExtension(this.selectedFile.name);\n          a.click();\n          URL.revokeObjectURL(url);\n          this.reset();\n        }\n      });\n    }\n    getExtension(filename) {\n      const ext = filename.slice(filename.lastIndexOf('.'));\n      return ext || '.jpg';\n    }\n    reset() {\n      this.progress = 0;\n      this.compressedSize = 0;\n      this.originalSize = 0;\n      this.selectedFile = null;\n      if (this.fileInput) this.fileInput.nativeElement.value = '';\n    }\n    static ɵfac = function CompressImageComponent_Factory(t) {\n      return new (t || CompressImageComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CompressImageComponent,\n      selectors: [[\"app-compress-image\"]],\n      viewQuery: function CompressImageComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInput = _t.first);\n        }\n      },\n      decls: 15,\n      vars: 5,\n      consts: [[\"fileInput\", \"\"], [1, \"tool-card\"], [1, \"sub\"], [1, \"upload-box\"], [\"type\", \"file\", \"accept\", \"image/*\", \"hidden\", \"\", 3, \"change\"], [1, \"upload-text\", 3, \"click\"], [4, \"ngIf\"], [1, \"convert-btn\", 3, \"click\", \"disabled\"], [\"class\", \"progress-container\", 4, \"ngIf\"], [\"class\", \"download-section\", 4, \"ngIf\"], [1, \"progress-container\"], [1, \"progress-bar\"], [1, \"download-section\"], [\"download\", \"compressed.jpg\", 1, \"download-link\", 3, \"href\"]],\n      template: function CompressImageComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"h2\");\n          i0.ɵɵtext(2, \"\\uD83D\\uDDDC\\uFE0F Compress Image\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"p\", 2);\n          i0.ɵɵtext(4, \"Reduce image file size without losing much quality\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"label\", 3)(6, \"input\", 4, 0);\n          i0.ɵɵlistener(\"change\", function CompressImageComponent_Template_input_change_6_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onFileSelected($event));\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 5);\n          i0.ɵɵlistener(\"click\", function CompressImageComponent_Template_div_click_8_listener() {\n            i0.ɵɵrestoreView(_r1);\n            const fileInput_r2 = i0.ɵɵreference(7);\n            return i0.ɵɵresetView(fileInput_r2.click());\n          });\n          i0.ɵɵtemplate(9, CompressImageComponent_span_9_Template, 2, 0, \"span\", 6)(10, CompressImageComponent_span_10_Template, 2, 1, \"span\", 6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"button\", 7);\n          i0.ɵɵlistener(\"click\", function CompressImageComponent_Template_button_click_11_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.upload());\n          });\n          i0.ɵɵtext(12, \"\\u26A1 Compress\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(13, CompressImageComponent_div_13_Template, 4, 3, \"div\", 8)(14, CompressImageComponent_div_14_Template, 7, 3, \"div\", 9);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngIf\", !ctx.selectedFile);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedFile);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", !ctx.selectedFile);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.progress > 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.compressedSize > 0);\n        }\n      },\n      dependencies: [i2.NgIf],\n      styles: [\".tool-card[_ngcontent-%COMP%]{max-width:500px;margin:30px auto;padding:24px;border:1px solid #ddd;border-radius:12px;background:#fafafa;text-align:center;box-shadow:0 2px 10px #0000000d}.upload-box[_ngcontent-%COMP%]{display:block;border:2px dashed #ccc;padding:20px;margin:20px 0;border-radius:8px;cursor:pointer;background-color:#fff}.upload-text[_ngcontent-%COMP%]{font-weight:500;color:#555}.convert-btn[_ngcontent-%COMP%]{background-color:#007bff;color:#fff;padding:8px 20px;border:none;border-radius:6px;font-weight:700;margin-top:10px;cursor:pointer}.convert-btn[_ngcontent-%COMP%]:disabled{background-color:#999;cursor:not-allowed}.progress-container[_ngcontent-%COMP%]{margin-top:15px}.progress-bar[_ngcontent-%COMP%]{height:8px;background-color:#28a745;width:0;transition:width .3s;border-radius:4px}.download-section[_ngcontent-%COMP%]{margin-top:15px;color:#2c662d}.download-link[_ngcontent-%COMP%]{font-weight:700;color:#007bff;text-decoration:underline}\"]\n    });\n  }\n  return CompressImageComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}