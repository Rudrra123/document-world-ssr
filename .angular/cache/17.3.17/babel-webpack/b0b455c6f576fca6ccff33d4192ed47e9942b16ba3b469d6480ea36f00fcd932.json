{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = [\"fileInput\"];\nfunction CompressImageComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"div\", 7)(2, \"label\");\n    i0.ɵɵtext(3, \"X\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 8);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_div_18_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.cropX, $event) || (ctx_r1.cropX = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 7)(6, \"label\");\n    i0.ɵɵtext(7, \"Y\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 8);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_div_18_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.cropY, $event) || (ctx_r1.cropY = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 7)(10, \"label\");\n    i0.ɵɵtext(11, \"Width\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 9);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_div_18_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.cropWidth, $event) || (ctx_r1.cropWidth = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 7)(14, \"label\");\n    i0.ɵɵtext(15, \"Height\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"input\", 9);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_div_18_Template_input_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.cropHeight, $event) || (ctx_r1.cropHeight = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.cropX);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.cropY);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.cropWidth);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.cropHeight);\n  }\n}\nexport let CompressImageComponent = /*#__PURE__*/(() => {\n  class CompressImageComponent {\n    http;\n    fileInput;\n    selectedFile = null;\n    previewUrl = '';\n    progress = 0;\n    compressedUrl = '';\n    originalSize = 0;\n    compressedSize = 0;\n    // Modes: compress, resize, convert\n    mode = 'compress';\n    // Resize\n    resizeWidth = null;\n    resizeHeight = null;\n    // Convert\n    convertFormat = '';\n    downloadedFileName = '';\n    constructor(http) {\n      this.http = http;\n    }\n    triggerFileInput() {\n      this.fileInput.nativeElement.click();\n    }\n    preventDefaults(event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    onFileSelected(event) {\n      const input = event.target;\n      const file = input.files?.[0];\n      if (file) this.setFile(file);\n    }\n    onFilesDropped(event) {\n      this.preventDefaults(event);\n      const file = event.dataTransfer?.files?.[0];\n      if (file) this.setFile(file);\n    }\n    setFile(file) {\n      this.selectedFile = file;\n      this.previewUrl = URL.createObjectURL(file);\n      this.originalSize = file.size;\n      this.compressedUrl = '';\n      this.compressedSize = 0;\n      this.progress = 0;\n    }\n    getButtonLabel() {\n      switch (this.mode) {\n        case 'resize':\n          return '📐 Resize Image';\n        case 'convert':\n          return '🔄 Convert Image';\n        default:\n          return '⚡ Compress Image';\n      }\n    }\n    upload() {\n      if (!this.selectedFile) return;\n      const formData = new FormData();\n      formData.append('file', this.selectedFile);\n      let endpoint = '';\n      if (this.mode === 'resize') {\n        if (!this.resizeWidth || !this.resizeHeight) return;\n        endpoint = 'http://127.0.0.1:8000/api/resize-image';\n        formData.append('width', this.resizeWidth.toString());\n        formData.append('height', this.resizeHeight.toString());\n      } else if (this.mode === 'convert') {\n        if (!this.convertFormat) return;\n        endpoint = 'http://127.0.0.1:8000/api/convert-image';\n        formData.append('target_format', this.convertFormat);\n      } else {\n        endpoint = 'http://127.0.0.1:8000/api/compress-image';\n      }\n      this.http.post(endpoint, formData, {\n        reportProgress: true,\n        observe: 'events',\n        responseType: 'blob'\n      }).subscribe(event => {\n        if (event.type === HttpEventType.UploadProgress && event.total) {\n          this.progress = Math.round(event.loaded / event.total * 100);\n        }\n        if (event.type === HttpEventType.Response) {\n          const blob = new Blob([event.body], {\n            type: event.body?.type || 'image/jpeg'\n          });\n          this.compressedSize = blob.size;\n          this.compressedUrl = URL.createObjectURL(blob);\n          this.downloadedFileName = this.getDownloadName();\n          this.progress = 0;\n          // Auto download\n          const a = document.createElement('a');\n          a.href = this.compressedUrl;\n          a.download = this.downloadedFileName;\n          a.click();\n        }\n      });\n    }\n    getDownloadName() {\n      const name = this.selectedFile?.name || 'image';\n      const ext = this.mode === 'convert' ? this.convertFormat : 'jpg';\n      return `${name.split('.')[0]}_${this.mode}.${ext}`;\n    }\n    static ɵfac = function CompressImageComponent_Factory(t) {\n      return new (t || CompressImageComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CompressImageComponent,\n      selectors: [[\"app-compress-image\"]],\n      viewQuery: function CompressImageComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInput = _t.first);\n        }\n      },\n      decls: 19,\n      vars: 3,\n      consts: [[\"id\", \"modeSelect\", 1, \"form-select\", 3, \"ngModelChange\", \"ngModel\"], [\"value\", \"compress\"], [\"value\", \"resize\"], [\"value\", \"convert\"], [\"value\", \"crop\"], [\"class\", \"resize-inputs\", 4, \"ngIf\"], [1, \"resize-inputs\"], [1, \"input-group\"], [\"type\", \"number\", \"placeholder\", \"e.g. 100\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"number\", \"placeholder\", \"e.g. 300\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"]],\n      template: function CompressImageComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"select\", 0);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_Template_select_ngModelChange_0_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.mode, $event) || (ctx.mode = $event);\n            return $event;\n          });\n          i0.ɵɵelementStart(1, \"option\", 1);\n          i0.ɵɵtext(2, \"\\u26A1 Compress\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"option\", 2);\n          i0.ɵɵtext(4, \"\\uD83D\\uDCD0 Resize\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"option\", 3);\n          i0.ɵɵtext(6, \"\\uD83D\\uDD04 Convert\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtext(7, \" With: \");\n          i0.ɵɵelementStart(8, \"select\", 0);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_Template_select_ngModelChange_8_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.mode, $event) || (ctx.mode = $event);\n            return $event;\n          });\n          i0.ɵɵelementStart(9, \"option\", 1);\n          i0.ɵɵtext(10, \"\\u26A1 Compress\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"option\", 2);\n          i0.ɵɵtext(12, \"\\uD83D\\uDCD0 Resize\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"option\", 3);\n          i0.ɵɵtext(14, \"\\uD83D\\uDD04 Convert\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"option\", 4);\n          i0.ɵɵtext(16, \"\\u2702\\uFE0F Crop\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtext(17, \" Then, below the Convert Format section, add: \");\n          i0.ɵɵtemplate(18, CompressImageComponent_div_18_Template, 17, 4, \"div\", 5);\n        }\n        if (rf & 2) {\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.mode);\n          i0.ɵɵadvance(8);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.mode);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngIf\", ctx.mode === \"crop\");\n        }\n      },\n      dependencies: [i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n      styles: [\".tool-container[_ngcontent-%COMP%]{max-width:1100px;margin:0 auto;padding:30px;font-family:Poppins,sans-serif;color:#333}.main-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:2.5rem;font-weight:600;color:#444}.main-header[_ngcontent-%COMP%]   .tagline[_ngcontent-%COMP%]{font-size:1rem;color:#777}.workspace[_ngcontent-%COMP%]{display:flex;gap:30px;align-items:flex-start;margin-top:25px}.tool-card[_ngcontent-%COMP%]{flex:1 1 60%;background:#fff;padding:25px;border-radius:12px;box-shadow:0 5px 18px #0000000f}.card-preview[_ngcontent-%COMP%]{flex:1 1 35%;background:#f8f8f8;padding:20px;border-radius:12px;text-align:center;box-shadow:inset 0 0 8px #0000000d}.card-preview[_ngcontent-%COMP%]   .preview-img[_ngcontent-%COMP%]{max-width:100%;border-radius:10px;margin-bottom:10px}.upload-box[_ngcontent-%COMP%]{background:#f3f3f3;border:2px dashed #bbb;padding:30px;text-align:center;cursor:pointer;margin:20px 0;border-radius:10px}.upload-text[_ngcontent-%COMP%]{font-size:1rem;color:#555}.form-group[_ngcontent-%COMP%], .resize-inputs[_ngcontent-%COMP%]{margin-bottom:20px}.form-select[_ngcontent-%COMP%], .form-control[_ngcontent-%COMP%]{width:100%;padding:10px 12px;font-size:1rem;border:1px solid #ccc;border-radius:6px}.input-group[_ngcontent-%COMP%]{margin-bottom:10px}.action-btn[_ngcontent-%COMP%]{background-color:#6c63ff;color:#fff;border:none;padding:12px 25px;font-size:1rem;font-weight:500;border-radius:8px;cursor:pointer;transition:background .2s ease}.action-btn[_ngcontent-%COMP%]:hover{background-color:#574fe5}.progress[_ngcontent-%COMP%]{background:#eee;border-radius:6px;overflow:hidden;margin-top:20px}.bar[_ngcontent-%COMP%]{background:#28a745;height:8px;transition:width .3s ease}.result[_ngcontent-%COMP%]{margin-top:20px;text-align:center}.download-link[_ngcontent-%COMP%]{display:inline-block;margin-top:10px;background:#6c63ff;color:#fff;padding:10px 20px;border-radius:6px;text-decoration:none}\"]\n    });\n  }\n  return CompressImageComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}