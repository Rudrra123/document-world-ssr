{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nexport let ProtectPdfPasswordComponent = /*#__PURE__*/(() => {\n  class ProtectPdfPasswordComponent {\n    http;\n    selectedFile = null;\n    password = '';\n    isLoading = false;\n    message = '';\n    constructor(http) {\n      this.http = http;\n    }\n    onDragOver(event) {\n      event.preventDefault();\n      event.currentTarget.classList.add('drag-over');\n    }\n    onDragLeave(event) {\n      event.preventDefault();\n      event.currentTarget.classList.remove('drag-over');\n    }\n    onDrop(event) {\n      event.preventDefault();\n      event.currentTarget.classList.remove('drag-over');\n      const files = event.dataTransfer?.files;\n      if (files && files.length > 0) {\n        this.handleFile(files[0]);\n      }\n    }\n    onFileSelected(event) {\n      const input = event.target;\n      if (input.files?.length) {\n        this.handleFile(input.files[0]);\n      }\n    }\n    handleFile(file) {\n      if (file.type !== 'application/pdf') {\n        // You can implement a toast notification system for a better UX\n        alert('❌ Please select a valid PDF file.');\n        return;\n      }\n      this.selectedFile = file;\n    }\n    // The rest of your onSubmit, resetForm, etc. logic remains the same.\n    onSubmit() {\n      if (!this.selectedFile || !this.password) {\n        alert('❗ Please select a file and enter a password.');\n        return;\n      }\n      const formData = new FormData();\n      formData.append('file', this.selectedFile);\n      formData.append('password', this.password);\n      this.isLoading = true;\n      this.message = '';\n      this.http.post(`${environment.apiUrl}/protect-pdf-password`, formData, {\n        responseType: 'blob',\n        observe: 'response'\n      }).subscribe({\n        next: response => {\n          const blob = new Blob([response.body], {\n            type: 'application/pdf'\n          });\n          const url = window.URL.createObjectURL(blob);\n          const a = document.createElement('a');\n          a.href = url;\n          const header = response.headers.get('Content-Disposition');\n          const match = header?.match(/filename=\"?([^\"]+)\"?/);\n          const filename = match ? match[1] : 'protected.pdf';\n          a.download = filename;\n          document.body.appendChild(a);\n          a.click();\n          document.body.removeChild(a);\n          window.URL.revokeObjectURL(url);\n          alert('✅ PDF protected and downloaded successfully!');\n          this.resetForm();\n        },\n        error: err => {\n          console.error('❌ Error:', err);\n          alert(err.error?.detail || '❌ Failed to protect PDF. Please try again.');\n          this.isLoading = false;\n        },\n        complete: () => {\n          this.isLoading = false;\n        }\n      });\n    }\n    resetForm() {\n      this.selectedFile = null;\n      this.password = '';\n      const fileInput = document.getElementById('file');\n      if (fileInput) {\n        fileInput.value = '';\n      }\n    }\n    static ɵfac = function ProtectPdfPasswordComponent_Factory(t) {\n      return new (t || ProtectPdfPasswordComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ProtectPdfPasswordComponent,\n      selectors: [[\"app-protect-pdf-password\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 18,\n      vars: 3,\n      consts: [[\"form\", \"ngForm\"], [1, \"pdf-protect-container\"], [1, \"pdf-protect-card\", 3, \"ngSubmit\"], [1, \"pdf-protect-header\"], [1, \"pdf-icon\"], [1, \"form-group\"], [\"for\", \"file\"], [\"type\", \"file\", \"id\", \"file\", \"accept\", \".pdf\", \"required\", \"\", 3, \"change\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"placeholder\", \"Your secure password\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\", 3, \"disabled\"]],\n      template: function ProtectPdfPasswordComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"form\", 2, 0);\n          i0.ɵɵlistener(\"ngSubmit\", function ProtectPdfPasswordComponent_Template_form_ngSubmit_1_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onSubmit());\n          });\n          i0.ɵɵelementStart(3, \"div\", 3)(4, \"span\", 4);\n          i0.ɵɵtext(5, \"\\uD83D\\uDD12\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"h2\");\n          i0.ɵɵtext(7, \"Protect PDF with Password\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"div\", 5)(9, \"label\", 6);\n          i0.ɵɵtext(10, \"Select PDF File\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"input\", 7);\n          i0.ɵɵlistener(\"change\", function ProtectPdfPasswordComponent_Template_input_change_11_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onFileSelected($event));\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"div\", 5)(13, \"label\", 8);\n          i0.ɵɵtext(14, \"Enter Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"input\", 9);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ProtectPdfPasswordComponent_Template_input_ngModelChange_15_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"button\", 10);\n          i0.ɵɵtext(17);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(15);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.password);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", !ctx.selectedFile || !ctx.password || ctx.isLoading);\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", ctx.isLoading ? \"Encrypting...\" : \"Protect PDF\", \" \");\n        }\n      },\n      dependencies: [FormsModule, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm, CommonModule],\n      styles: [\"@import\\\"https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap\\\";body[_ngcontent-%COMP%]{margin:0;padding:0;font-family:Inter,sans-serif;background-color:#f6f7fb;display:flex;align-items:center;justify-content:center;min-height:100vh}.pdf-protect-container[_ngcontent-%COMP%]{padding:16px;margin-left:20%;margin-right:20%}.pdf-protect-card[_ngcontent-%COMP%]{background:#fff;border-radius:16px;padding:32px 24px;box-shadow:0 4px 20px #00000014;display:flex;flex-direction:column;gap:20px}.pdf-protect-header[_ngcontent-%COMP%]{text-align:center}.pdf-icon[_ngcontent-%COMP%]{font-size:2rem;display:block}.pdf-protect-header[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:700;margin:8px 0 0;color:#111827}.form-group[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:6px}.form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-size:.95rem;font-weight:500;color:#374151}input[type=file][_ngcontent-%COMP%], input[type=password][_ngcontent-%COMP%]{padding:12px 14px;border:1px solid #d1d5db;border-radius:8px;font-size:1rem;color:#111827;background-color:#f9fafb;outline:none;transition:border-color .3s}input[type=password][_ngcontent-%COMP%]:focus, input[type=file][_ngcontent-%COMP%]:focus{border-color:#2563eb}button[type=submit][_ngcontent-%COMP%]{padding:14px;font-size:1rem;font-weight:600;border:none;border-radius:10px;background-color:#3b82f6;color:#fff;cursor:pointer;transition:background .3s}button[type=submit][_ngcontent-%COMP%]:hover:not(:disabled){background-color:#2563eb}button[type=submit][_ngcontent-%COMP%]:disabled{background-color:#cbd5e1;cursor:not-allowed}\"]\n    });\n  }\n  return ProtectPdfPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}