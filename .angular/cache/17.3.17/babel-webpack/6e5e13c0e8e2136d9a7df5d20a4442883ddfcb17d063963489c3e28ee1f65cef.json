{"ast":null,"code":"// import { Component } from '@angular/core';\n// import { HttpClient, HttpEventType } from '@angular/common/http';\n// import { environment } from 'src/environments/environment';\n// @Component({\n// selector: 'app-word-to-pdf',\n// templateUrl: './word-to-pdf.component.html',\n// styleUrls: ['./word-to-pdf.component.css']\n// })\n// export class WordToPdfComponent {\n// selectedFile: File | null = null;\n// progress = 0;\n// downloadUrl: string = '';\n// constructor(private http: HttpClient) {}\n// onFileSelected(event: any): void {\n// this.selectedFile = event.target.files[0];\n// }\n// upload(): void {\n// if (!this.selectedFile) return;\n// const formData = new FormData();\n// formData.append('file', this.selectedFile);\n// this.http.post(`${environment.apiUrl}/word-to-pdf`, formData, {\n//   responseType: 'blob',\n//   reportProgress: true,\n//   observe: 'events'\n// }).subscribe(event => {\n//   if (event.type === HttpEventType.UploadProgress && event.total) {\n//     this.progress = Math.round((event.loaded / event.total) * 100);\n//   }\n//   if (event.type === HttpEventType.Response) {\n//     const blob = new Blob([event.body!], { type: 'application/pdf' });\n//     const url = URL.createObjectURL(blob);\n//     // auto-download and reset\n//     const anchor = document.createElement('a');\n//     anchor.href = url;\n//     anchor.download = 'converted.pdf';\n//     anchor.click();\n//     URL.revokeObjectURL(url);\n//     this.reset();\n//   }\n// });\n// }\n// reset(): void {\n// this.selectedFile = null;\n// this.progress = 0;\n// this.downloadUrl = '';\n// }\n// }","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}