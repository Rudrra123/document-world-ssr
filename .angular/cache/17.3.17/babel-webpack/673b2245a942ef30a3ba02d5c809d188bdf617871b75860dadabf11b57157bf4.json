{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/platform-browser\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = [\"fileInputSingle\"];\nfunction CompressImageComponent_ng_container_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 34);\n    i0.ɵɵtext(2, \" Select Image File \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 35)(4, \"button\", 36);\n    i0.ɵɵelement(5, \"i\", 37);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 36);\n    i0.ɵɵelement(7, \"i\", 38);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"span\", 39);\n    i0.ɵɵtext(9, \"or drop image here\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction CompressImageComponent_ng_container_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 40)(2, \"div\", 41);\n    i0.ɵɵelement(3, \"i\", 42);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 43);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 44);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"button\", 45);\n    i0.ɵɵlistener(\"click\", function CompressImageComponent_ng_container_28_Template_button_click_8_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r3 = i0.ɵɵnextContext();\n      $event.stopPropagation();\n      return i0.ɵɵresetView(ctx_r3.resetSingleFile());\n    });\n    i0.ɵɵelement(9, \"i\", 46);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r3.selectedFile.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"(\", (ctx_r3.selectedFile.size / 1024).toFixed(1), \" KB)\");\n  }\n}\nfunction CompressImageComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 47)(1, \"div\", 48)(2, \"label\");\n    i0.ɵɵtext(3, \"Width (px)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 49);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_div_30_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r3 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r3.resizeWidth, $event) || (ctx_r3.resizeWidth = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 48)(6, \"label\");\n    i0.ɵɵtext(7, \"Height (px)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 50);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_div_30_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r3 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r3.resizeHeight, $event) || (ctx_r3.resizeHeight = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r3.resizeWidth);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r3.resizeHeight);\n  }\n}\nfunction CompressImageComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"label\", 51);\n    i0.ɵɵelement(2, \"i\", 52);\n    i0.ɵɵtext(3, \" Target Format\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"select\", 53);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_div_31_Template_select_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r3 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r3.convertFormat, $event) || (ctx_r3.convertFormat = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementStart(5, \"option\", 54);\n    i0.ɵɵtext(6, \"Choose Format\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"option\", 55);\n    i0.ɵɵtext(8, \"JPEG (.jpg)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"option\", 56);\n    i0.ɵɵtext(10, \"PNG (.png)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"option\", 57);\n    i0.ɵɵtext(12, \"WebP (.webp)\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r3.convertFormat);\n  }\n}\nfunction CompressImageComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 58)(1, \"div\", 48)(2, \"label\");\n    i0.ɵɵtext(3, \"X Start (px)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 59);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_div_32_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r3 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r3.cropX, $event) || (ctx_r3.cropX = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 48)(6, \"label\");\n    i0.ɵɵtext(7, \"Y Start (px)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 59);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_div_32_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r3 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r3.cropY, $event) || (ctx_r3.cropY = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 48)(10, \"label\");\n    i0.ɵɵtext(11, \"Crop Width (px)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 60);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_div_32_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r3 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r3.cropWidth, $event) || (ctx_r3.cropWidth = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 48)(14, \"label\");\n    i0.ɵɵtext(15, \"Crop Height (px)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"input\", 61);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_div_32_Template_input_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r3 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r3.cropHeight, $event) || (ctx_r3.cropHeight = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r3.cropX);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r3.cropY);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r3.cropWidth);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r3.cropHeight);\n  }\n}\nfunction CompressImageComponent_ng_container_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 62);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.getButtonLabel(), \" \");\n  }\n}\nfunction CompressImageComponent_ng_container_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 63);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Processing... \", ctx_r3.progress, \"% \");\n  }\n}\nfunction CompressImageComponent_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 64);\n    i0.ɵɵelement(1, \"img\", 65);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"src\", ctx_r3.previewUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction CompressImageComponent_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 66);\n    i0.ɵɵelement(1, \"i\", 67);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3, \"Your uploaded image will appear here.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CompressImageComponent_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 68)(1, \"h3\", 27);\n    i0.ɵɵelement(2, \"i\", 69);\n    i0.ɵɵtext(3, \" Result\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 70)(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementStart(7, \"span\", 71);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"p\", 72);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"a\", 73);\n    i0.ɵɵelement(12, \"i\", 74);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 75);\n    i0.ɵɵlistener(\"click\", function CompressImageComponent_div_42_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.resetSingleFile());\n    });\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r3.getResultLabel(), \": \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", (ctx_r3.compressedSize / 1024).toFixed(1), \" KB\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Original Size: \", (ctx_r3.originalSize / 1024).toFixed(1), \" KB\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"href\", ctx_r3.blobUrl, i0.ɵɵsanitizeUrl)(\"download\", ctx_r3.downloadedFileName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Download \", ctx_r3.getResultLabel().replace(\" Size\", \"\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r3.getResultLabel().replace(\" Size\", \"\"), \" Another\");\n  }\n}\nfunction CompressImageComponent_div_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 76)(1, \"div\", 77)(2, \"p\", 78);\n    i0.ɵɵtext(3, \"Uploading file 1 of 1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 79);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 80);\n    i0.ɵɵtext(7, \"Time left 0 SECONDS - Upload speed 519 KB/S\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 81);\n    i0.ɵɵelement(9, \"div\", 82);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\", 83);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"p\", 84);\n    i0.ɵɵtext(13, \"UPLOADED\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r3.selectedFile == null ? null : ctx_r3.selectedFile.name, \" (\", ((ctx_r3.selectedFile == null ? null : ctx_r3.selectedFile.size) / 1024).toFixed(1), \" KB)\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵstyleProp(\"width\", ctx_r3.progress, \"%\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r3.progress, \"%\");\n  }\n}\nfunction CompressImageComponent_div_44_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 85)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 75);\n    i0.ɵɵlistener(\"click\", function CompressImageComponent_div_44_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.resetSingleFile());\n    });\n    i0.ɵɵtext(4, \"Try Again\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\u274C Error: \", ctx_r3.errorMessage, \"\");\n  }\n}\nexport let CompressImageComponent = /*#__PURE__*/(() => {\n  class CompressImageComponent {\n    http;\n    sanitizer;\n    // Changed ViewChild target to match the HTML's #fileInputSingle\n    fileInput;\n    // Properties for file handling and status\n    selectedFile = null; // This is the main selected file\n    previewUrl = ''; // URL for the initial image preview\n    blobUrl = ''; // Holds the raw blob URL for the processed image download\n    compressedUrl = ''; // This will hold the URL for the processed image preview (if different from blobUrl)\n    downloadUrl = ''; // Added: This property will hold the URL for the successful download link,\n    // and its presence will control the visibility of the result area.\n    originalSize = 0;\n    compressedSize = 0;\n    progress = 0;\n    errorMessage = null;\n    // Property to control drag-over visual feedback\n    isDragging = false;\n    // Mode selection for image optimization\n    mode = 'compress';\n    // Mode-specific settings\n    resizeWidth = null;\n    resizeHeight = null;\n    convertFormat = '';\n    cropX = null;\n    cropY = null;\n    cropWidth = null;\n    cropHeight = null;\n    downloadedFileName = '';\n    constructor(http, sanitizer) {\n      this.http = http;\n      this.sanitizer = sanitizer;\n    }\n    /**\n     * Triggers the hidden file input element click.\n     * This method is called by the upload-zone in the HTML.\n     */\n    triggerFileInput() {\n      this.fileInput.nativeElement.click();\n    }\n    /**\n     * Prevents default browser behaviors for drag events.\n     * This method is used by dragover and dragleave events.\n     * @param event The DOM event.\n     */\n    preventDefaults(event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    /**\n     * Handles the 'dragover' event for the single file upload area.\n     * Sets isDragging to true to apply visual feedback.\n     * @param event The DragEvent.\n     */\n    onDragOverSingle(event) {\n      this.preventDefaults(event);\n      this.isDragging = true;\n    }\n    /**\n     * Handles the 'dragleave' event for the single file upload area.\n     * Sets isDragging to false to remove visual feedback.\n     * @param event The DragEvent.\n     */\n    onDragLeaveSingle(event) {\n      this.preventDefaults(event);\n      this.isDragging = false;\n    }\n    /**\n     * Handles files dropped onto the single file drag-and-drop area.\n     * @param event The DragEvent.\n     */\n    onDropSingle(event) {\n      this.preventDefaults(event);\n      this.isDragging = false; // Reset drag state\n      const file = event.dataTransfer?.files?.[0];\n      if (file) {\n        if (file.type.startsWith('image/')) {\n          this.setFile(file);\n        } else {\n          this.errorMessage = 'Please drop an image file (JPG, PNG, WebP, GIF, BMP).';\n          this.resetSingleFile(); // Use resetSingleFile for consistency\n        }\n      }\n    }\n    /**\n     * Handles file selection from the single file input element.\n     * @param event The change event from the file input.\n     */\n    onFileSelectedSingle(event) {\n      const input = event.target;\n      const file = input.files?.[0];\n      if (file) this.setFile(file);\n    }\n    /**\n     * Sets the selected file and prepares for upload, resetting other states.\n     * This is the core logic for setting a file, used by both direct selection and drag/drop.\n     * @param file The File object to set.\n     */\n    setFile(file) {\n      this.revokeObjectUrls(); // Revoke previous object URLs to free up memory\n      this.selectedFile = file;\n      this.previewUrl = this.sanitizer.bypassSecurityTrustUrl(URL.createObjectURL(file));\n      this.originalSize = file.size;\n      // Reset all processed/downloaded states and error messages\n      this.compressedUrl = '';\n      this.blobUrl = '';\n      this.downloadUrl = ''; // Clear downloadUrl on new file selection\n      this.compressedSize = 0;\n      this.progress = 0;\n      this.downloadedFileName = '';\n      this.errorMessage = null;\n      // Reset all mode-specific input fields\n      this.resizeWidth = null;\n      this.resizeHeight = null;\n      this.convertFormat = '';\n      this.cropX = null;\n      this.cropY = null;\n      this.cropWidth = null;\n      this.cropHeight = null;\n    }\n    /**\n     * Gets the appropriate label for the action button based on the current mode.\n     * @returns The button label string.\n     */\n    getButtonLabel() {\n      switch (this.mode) {\n        case 'resize':\n          return '📐 Resize Image';\n        case 'convert':\n          return '🔄 Convert Image';\n        case 'crop':\n          return '✂️ Crop Image';\n        default:\n          return '⚡ Compress Image';\n      }\n    }\n    /**\n     * Gets the appropriate label for the result size display based on the current mode.\n     * @returns The result label string.\n     */\n    getResultLabel() {\n      switch (this.mode) {\n        case 'compress':\n          return 'Optimized Size';\n        case 'resize':\n          return 'Resized Size';\n        case 'convert':\n          return 'Converted Size';\n        case 'crop':\n          return 'Cropped Size';\n        default:\n          return 'Processed Size';\n      }\n    }\n    /**\n     * Initiates the upload and processing of the selected image based on the current mode.\n     * This method is called by the main action button (e.g., \"Convert to WORD\" or \"Compress Image\").\n     */\n    uploadSingleFile() {\n      if (!this.selectedFile) {\n        this.errorMessage = 'Please select an image first.';\n        return;\n      }\n      this.errorMessage = null; // Clear previous error messages\n      this.compressedUrl = '';\n      this.compressedSize = 0;\n      this.blobUrl = '';\n      this.downloadUrl = ''; // Clear downloadUrl before new upload\n      this.downloadedFileName = '';\n      this.progress = 0;\n      const formData = new FormData();\n      formData.append('file', this.selectedFile);\n      let endpoint = '';\n      if (this.mode === 'resize') {\n        if (this.resizeWidth === null || this.resizeHeight === null || this.resizeWidth <= 0 || this.resizeHeight <= 0) {\n          this.errorMessage = 'Resize Error: Please enter valid positive width and height.';\n          return;\n        }\n        formData.append('width', this.resizeWidth.toString());\n        formData.append('height', this.resizeHeight.toString());\n        endpoint = `${environment.apiUrl}/resize-image`;\n      } else if (this.mode === 'convert') {\n        if (!this.convertFormat) {\n          this.errorMessage = 'Convert Error: Please select a target format.';\n          return;\n        }\n        formData.append('target_format', this.convertFormat);\n        endpoint = `${environment.apiUrl}/convert-image`;\n      } else if (this.mode === 'crop') {\n        if (this.cropX === null || this.cropY === null || this.cropWidth === null || this.cropHeight === null || this.cropWidth <= 0 || this.cropHeight <= 0) {\n          this.errorMessage = 'Crop Error: Please enter valid positive crop dimensions (width, height) and coordinates (x, y).';\n          return;\n        }\n        formData.append('x', this.cropX.toString());\n        formData.append('y', this.cropY.toString());\n        formData.append('width', this.cropWidth.toString());\n        formData.append('height', this.cropHeight.toString());\n        endpoint = `${environment.apiUrl}/crop-image`;\n      } else {\n        endpoint = `${environment.apiUrl}/compress-image`;\n      }\n      this.http.post(endpoint, formData, {\n        reportProgress: true,\n        observe: 'events',\n        responseType: 'blob'\n      }).subscribe(event => {\n        if (event.type === HttpEventType.UploadProgress && event.total) {\n          this.progress = Math.round(event.loaded / event.total * 100);\n        }\n        if (event.type === HttpEventType.Response) {\n          const blob = new Blob([event.body], {\n            type: event.body?.type || 'image/jpeg'\n          });\n          this.compressedSize = blob.size;\n          this.revokeObjectUrls(true); // Revoke only compressedUrl/blobUrl\n          this.blobUrl = URL.createObjectURL(blob);\n          this.compressedUrl = this.sanitizer.bypassSecurityTrustUrl(this.blobUrl);\n          this.downloadUrl = this.blobUrl; // Set downloadUrl on success\n          // Pass the actual blob type to getDownloadName for accurate extension\n          this.downloadedFileName = this.getDownloadName(blob.type);\n          this.progress = 100;\n          // Auto download\n          const a = document.createElement('a');\n          a.href = this.blobUrl;\n          a.download = this.downloadedFileName;\n          document.body.appendChild(a);\n          a.click();\n          document.body.removeChild(a);\n        }\n      }, error => {\n        console.error('Image processing failed:', error);\n        this.progress = 0;\n        this.errorMessage = `Processing failed: ${error.message || 'An unknown error occurred.'}`;\n      });\n    }\n    /**\n     * Generates a suitable download file name based on the mode and actual output MIME type.\n     * @param outputMimeType The actual MIME type of the processed image blob from the backend.\n     * @returns The download file name.\n     */\n    getDownloadName(outputMimeType) {\n      const originalName = this.selectedFile?.name || 'image';\n      const lastDotIndex = originalName.lastIndexOf('.');\n      let baseName = originalName.substring(0, lastDotIndex > -1 ? lastDotIndex : originalName.length);\n      let suffix = '';\n      let outputExtension = '';\n      // Determine suffix based on mode\n      switch (this.mode) {\n        case 'compress':\n          suffix = 'compressed';\n          break;\n        case 'resize':\n          suffix = 'resized';\n          break;\n        case 'convert':\n          suffix = 'converted';\n          break;\n        case 'crop':\n          suffix = 'cropped';\n          break;\n        default:\n          suffix = 'processed';\n      }\n      // Determine output extension based on MIME type first\n      if (outputMimeType.includes('jpeg') || outputMimeType.includes('jpg')) {\n        outputExtension = 'jpeg';\n      } else if (outputMimeType.includes('png')) {\n        outputExtension = 'png';\n      } else if (outputMimeType.includes('webp')) {\n        outputExtension = 'webp';\n      } else if (outputMimeType.includes('gif')) {\n        outputExtension = 'gif';\n      } else if (outputMimeType.includes('bmp')) {\n        outputExtension = 'bmp';\n      } else {\n        // Fallback: If MIME type is not specific, try to use the original extension\n        outputExtension = originalName.substring(lastDotIndex + 1).toLowerCase() || 'jpeg';\n      }\n      // Special handling for 'convert' mode: prioritize the user's selected format for the filename\n      // This ensures that if a user explicitly chose to convert to PNG, the downloaded file\n      // is named with a .png extension, even if the backend's MIME type might be generic or\n      // if there's a slight mismatch. This prioritizes user intent for the filename.\n      if (this.mode === 'convert' && this.convertFormat) {\n        outputExtension = this.convertFormat.toLowerCase();\n      }\n      return `${baseName}_${suffix}.${outputExtension}`;\n    }\n    /**\n     * Clears the current file selection and resets all related states.\n     * This method is called by the \"Clear\" button and \"Start New\" / \"Try Again\" buttons.\n     */\n    resetSingleFile() {\n      this.revokeObjectUrls();\n      this.selectedFile = null;\n      this.previewUrl = '';\n      this.blobUrl = '';\n      this.compressedUrl = '';\n      this.downloadUrl = ''; // Clear downloadUrl on reset\n      this.progress = 0;\n      this.compressedSize = 0;\n      this.originalSize = 0;\n      this.downloadedFileName = '';\n      this.errorMessage = null;\n      this.resizeWidth = null;\n      this.resizeHeight = null;\n      this.convertFormat = '';\n      this.cropX = null;\n      this.cropY = null;\n      this.cropWidth = null;\n      this.cropHeight = null;\n      if (this.fileInput && this.fileInput.nativeElement) {\n        this.fileInput.nativeElement.value = '';\n      }\n    }\n    /**\n     * Helper to revoke Object URLs to prevent memory leaks.\n     * @param onlyCompressed If true, only revokes compressedUrl/blobUrl. Otherwise, revokes all.\n     */\n    revokeObjectUrls(onlyCompressed = false) {\n      if (!onlyCompressed && this.previewUrl) {\n        const urlString = this.previewUrl.changingThisBreaksApplicationSecurity;\n        if (urlString && urlString.startsWith('blob:')) {\n          URL.revokeObjectURL(urlString);\n        }\n      }\n      if (this.blobUrl && this.blobUrl.startsWith('blob:')) {\n        URL.revokeObjectURL(this.blobUrl);\n      }\n    }\n    // Lifecycle hook to clean up object URLs when component is destroyed\n    ngOnDestroy() {\n      this.revokeObjectUrls();\n    }\n    static ɵfac = function CompressImageComponent_Factory(t) {\n      return new (t || CompressImageComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.DomSanitizer));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CompressImageComponent,\n      selectors: [[\"app-compress-image\"]],\n      viewQuery: function CompressImageComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInput = _t.first);\n        }\n      },\n      decls: 45,\n      vars: 16,\n      consts: [[\"fileInputSingle\", \"\"], [\"id\", \"image-optimizer-section\", 1, \"tool-section\"], [1, \"tool-section-title\"], [1, \"fas\", \"fa-magic\"], [1, \"tool-description-section\"], [1, \"image-optimizer-layout\"], [1, \"left-panel\"], [1, \"setting-group\"], [\"for\", \"modeSelect\", 1, \"setting-label\"], [1, \"fas\", \"fa-tools\"], [\"id\", \"modeSelect\", 1, \"app-select\", 3, \"ngModelChange\", \"ngModel\"], [\"value\", \"compress\"], [\"value\", \"resize\"], [\"value\", \"convert\"], [\"value\", \"crop\"], [1, \"main-upload-content\"], [1, \"upload-area-container\"], [1, \"upload-box\", \"main-select-button\", 3, \"dragover\", \"dragleave\", \"drop\"], [\"type\", \"file\", \"accept\", \"image/*\", \"hidden\", \"\", 3, \"change\"], [1, \"upload-content\", 3, \"click\"], [4, \"ngIf\"], [1, \"dynamic-settings\"], [\"class\", \"setting-group-grid\", 4, \"ngIf\"], [\"class\", \"setting-group\", 4, \"ngIf\"], [\"class\", \"setting-group-grid two-columns\", 4, \"ngIf\"], [1, \"convert-action-btn\", 3, \"click\", \"disabled\"], [1, \"right-panel\"], [1, \"panel-title\"], [1, \"fas\", \"fa-eye\"], [\"class\", \"image-display-area\", 4, \"ngIf\"], [\"class\", \"placeholder-text\", 4, \"ngIf\"], [\"class\", \"result-area\", 4, \"ngIf\"], [\"class\", \"global-status-area\", 4, \"ngIf\"], [\"class\", \"result-message-box error\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"select-pdf-file-btn\"], [1, \"select-pdf-file-btn-alt-icons\"], [1, \"small-icon-btn\"], [1, \"fas\", \"fa-cloud-upload-alt\"], [1, \"fas\", \"fa-exchange-alt\"], [1, \"or-drop-text\"], [1, \"file-preview-area\"], [1, \"file-thumbnail\"], [1, \"fas\", \"fa-file-image\", \"file-image-icon\"], [1, \"file-name-display\"], [1, \"file-size-display\"], [\"type\", \"button\", 1, \"remove-file-preview-btn\", 3, \"click\"], [1, \"fas\", \"fa-times-circle\"], [1, \"setting-group-grid\"], [1, \"input-field\"], [\"type\", \"number\", \"placeholder\", \"e.g. 1280\", 1, \"app-input\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"number\", \"placeholder\", \"e.g. 720\", 1, \"app-input\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"convertFormat\", 1, \"setting-label\"], [1, \"fas\", \"fa-file-image\"], [\"id\", \"convertFormat\", 1, \"app-select\", 3, \"ngModelChange\", \"ngModel\"], [\"value\", \"\"], [\"value\", \"jpeg\"], [\"value\", \"png\"], [\"value\", \"webp\"], [1, \"setting-group-grid\", \"two-columns\"], [\"type\", \"number\", \"placeholder\", \"0\", 1, \"app-input\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"number\", \"placeholder\", \"e.g. 300\", 1, \"app-input\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"number\", \"placeholder\", \"e.g. 200\", 1, \"app-input\", 3, \"ngModelChange\", \"ngModel\"], [1, \"fas\", \"fa-play-circle\"], [1, \"fas\", \"fa-spinner\", \"fa-spin\"], [1, \"image-display-area\"], [\"alt\", \"Image Preview\", 1, \"preview-image\", 3, \"src\"], [1, \"placeholder-text\"], [1, \"fas\", \"fa-images\"], [1, \"result-area\"], [1, \"fas\", \"fa-check-circle\"], [1, \"result-summary\"], [1, \"highlight-text\"], [1, \"original-size-info\"], [1, \"download-btn\", 3, \"href\", \"download\"], [1, \"fas\", \"fa-download\"], [\"type\", \"button\", 1, \"reset-conversion-btn\", 3, \"click\"], [1, \"global-status-area\"], [1, \"progress-info-block\"], [1, \"upload-progress-text\"], [1, \"upload-file-details\"], [1, \"upload-speed-time-left\"], [1, \"progress-indicator\", \"upload-progress-bar\"], [1, \"progress-bar-fill\"], [1, \"upload-percentage-text\"], [1, \"upload-status-text\"], [1, \"result-message-box\", \"error\"]],\n      template: function CompressImageComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"section\", 1)(1, \"h2\", 2);\n          i0.ɵɵelement(2, \"i\", 3);\n          i0.ɵɵtext(3, \" Image AI Optimizer\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"p\", 4);\n          i0.ɵɵtext(5, \"Smartly compress, resize, convert, or crop your images with AI precision.\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"div\", 7)(9, \"label\", 8);\n          i0.ɵɵelement(10, \"i\", 9);\n          i0.ɵɵtext(11, \" Choose Mode\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"select\", 10);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_Template_select_ngModelChange_12_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.mode, $event) || (ctx.mode = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementStart(13, \"option\", 11);\n          i0.ɵɵtext(14, \"\\u26A1 Compress Image\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"option\", 12);\n          i0.ɵɵtext(16, \"\\uD83D\\uDCD0 Resize Image\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"option\", 13);\n          i0.ɵɵtext(18, \"\\uD83D\\uDD04 Convert Format\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"option\", 14);\n          i0.ɵɵtext(20, \"\\u2702\\uFE0F Crop Image\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(21, \"div\", 15)(22, \"div\", 16)(23, \"label\", 17);\n          i0.ɵɵlistener(\"dragover\", function CompressImageComponent_Template_label_dragover_23_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onDragOverSingle($event));\n          })(\"dragleave\", function CompressImageComponent_Template_label_dragleave_23_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onDragLeaveSingle($event));\n          })(\"drop\", function CompressImageComponent_Template_label_drop_23_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onDropSingle($event));\n          });\n          i0.ɵɵelementStart(24, \"input\", 18, 0);\n          i0.ɵɵlistener(\"change\", function CompressImageComponent_Template_input_change_24_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onFileSelectedSingle($event));\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"div\", 19);\n          i0.ɵɵlistener(\"click\", function CompressImageComponent_Template_div_click_26_listener() {\n            i0.ɵɵrestoreView(_r1);\n            const fileInputSingle_r2 = i0.ɵɵreference(25);\n            return i0.ɵɵresetView(fileInputSingle_r2.click());\n          });\n          i0.ɵɵtemplate(27, CompressImageComponent_ng_container_27_Template, 10, 0, \"ng-container\", 20)(28, CompressImageComponent_ng_container_28_Template, 10, 2, \"ng-container\", 20);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(29, \"div\", 21);\n          i0.ɵɵtemplate(30, CompressImageComponent_div_30_Template, 9, 2, \"div\", 22)(31, CompressImageComponent_div_31_Template, 13, 1, \"div\", 23)(32, CompressImageComponent_div_32_Template, 17, 4, \"div\", 24);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(33, \"button\", 25);\n          i0.ɵɵlistener(\"click\", function CompressImageComponent_Template_button_click_33_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.uploadSingleFile());\n          });\n          i0.ɵɵtemplate(34, CompressImageComponent_ng_container_34_Template, 3, 1, \"ng-container\", 20)(35, CompressImageComponent_ng_container_35_Template, 3, 1, \"ng-container\", 20);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(36, \"div\", 26)(37, \"h3\", 27);\n          i0.ɵɵelement(38, \"i\", 28);\n          i0.ɵɵtext(39, \" Image Preview\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(40, CompressImageComponent_div_40_Template, 2, 1, \"div\", 29)(41, CompressImageComponent_div_41_Template, 4, 0, \"div\", 30)(42, CompressImageComponent_div_42_Template, 16, 7, \"div\", 31)(43, CompressImageComponent_div_43_Template, 14, 5, \"div\", 32)(44, CompressImageComponent_div_44_Template, 5, 1, \"div\", 33);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(12);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.mode);\n          i0.ɵɵadvance(11);\n          i0.ɵɵclassProp(\"drag-over\", ctx.isDragging);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", !ctx.selectedFile);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedFile);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.mode === \"resize\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.mode === \"convert\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.mode === \"crop\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", !ctx.selectedFile || ctx.mode === \"resize\" && (!ctx.resizeWidth || !ctx.resizeHeight) || ctx.mode === \"convert\" && !ctx.convertFormat || ctx.mode === \"crop\" && (ctx.cropX === null || ctx.cropY === null || !ctx.cropWidth || !ctx.cropHeight) || ctx.progress > 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.progress === 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.progress > 0);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.previewUrl);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.previewUrl);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.downloadUrl && !ctx.errorMessage);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.progress > 0 && ctx.progress < 100 && !ctx.errorMessage && !ctx.downloadUrl);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage && !ctx.downloadUrl);\n        }\n      },\n      dependencies: [i3.NgIf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgModel],\n      styles: [\"@import\\\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap\\\";body[_ngcontent-%COMP%]{font-family:Roboto,sans-serif;background-color:#f4f7f9;color:#333;margin:0;padding:2rem;overflow-x:hidden}.docuflow-container[_ngcontent-%COMP%]{max-width:1100px;margin:0 auto;position:relative}.main-header[_ngcontent-%COMP%]{text-align:center;margin-bottom:3rem;animation:_ngcontent-%COMP%_fadeInScale .8s ease-out}.main-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:2.8rem;font-weight:700;color:#1e2a3b;background:linear-gradient(45deg,#1e2a3b,#457b9d);-webkit-background-clip:text;-webkit-text-fill-color:transparent}.main-header[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:1.2rem;color:#6a737d;position:relative;display:inline-block}.main-header[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]:after{content:\\\"\\\";position:absolute;left:50%;bottom:-5px;width:0;height:2px;background-color:#457b9d;transition:width .3s ease,left .3s ease;transform:translate(-50%)}.main-header[_ngcontent-%COMP%]:hover   p[_ngcontent-%COMP%]:after{width:100%;left:0;transform:translate(0)}.tool-grid-container[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fill,minmax(260px,1fr));gap:1.5rem}.tool-card[_ngcontent-%COMP%]{background:#fff;border:1px solid #e0e6ed;border-radius:12px;padding:1.5rem;text-align:left;cursor:pointer;transition:all .3s cubic-bezier(.25,.8,.25,1);display:flex;flex-direction:column;position:relative;overflow:hidden}.tool-card[_ngcontent-%COMP%]:before{content:\\\"\\\";position:absolute;top:-50%;left:-50%;width:200%;height:200%;background:radial-gradient(circle,#fff3,#fff0 70%);opacity:0;transition:opacity .3s ease;pointer-events:none}.tool-card[_ngcontent-%COMP%]:hover:before{opacity:1;animation:_ngcontent-%COMP%_toolCardShine 1.5s infinite}.tool-card[_ngcontent-%COMP%]:hover{transform:translateY(-8px) scale(1.02);box-shadow:0 15px 30px #0000001a;border-color:#a8dadc}.tool-icon-wrapper[_ngcontent-%COMP%]{width:60px;height:60px;border-radius:50%;display:flex;justify-content:center;align-items:center;margin-bottom:1rem;box-shadow:0 4px 8px #0000001a;transition:transform .2s ease}.tool-card[_ngcontent-%COMP%]:hover   .tool-icon-wrapper[_ngcontent-%COMP%]{transform:rotate(5deg) scale(1.1)}.tool-icon-wrapper[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{color:#fff;font-size:1.8rem;transition:transform .2s ease}.tool-card[_ngcontent-%COMP%]:hover   .tool-icon-wrapper[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{transform:scale(1.05)}.tool-title[_ngcontent-%COMP%]{font-size:1.4rem;font-weight:700;color:#1e2a3b;margin:0 0 .5rem}.tool-description[_ngcontent-%COMP%]{font-size:1rem;color:#6a737d;line-height:1.5;margin:0;flex-grow:1}.bg-red[_ngcontent-%COMP%]{background-color:#e63946}.bg-blue[_ngcontent-%COMP%]{background-color:#457b9d}.bg-green[_ngcontent-%COMP%]{background-color:#52b788}.bg-orange[_ngcontent-%COMP%]{background-color:#f77f00}.tool-workspace-wrapper[_ngcontent-%COMP%]{background:#fff;padding:2rem;border-radius:12px;border:1px solid #e0e6ed;margin-top:2rem;box-shadow:0 8px 20px #00000014}.back-to-grid-btn[_ngcontent-%COMP%]{background-color:#f4f7f9;color:#333;border:1px solid #d1d9e2;padding:.7rem 1.5rem;font-size:1rem;font-weight:500;border-radius:30px;cursor:pointer;margin-bottom:2rem;display:inline-flex;align-items:center;gap:.5rem;transition:all .2s ease;float:right;box-shadow:0 2px 4px #0000000d}.back-to-grid-btn[_ngcontent-%COMP%]:hover{background-color:#e9eef3;transform:translateY(-2px);box-shadow:0 4px 8px #0000001a}.back-to-grid-btn[_ngcontent-%COMP%]:active{transform:translateY(0);box-shadow:0 1px 2px #0000000d}.tool-section[_ngcontent-%COMP%]{display:none;padding-top:1rem}.tool-section.active[_ngcontent-%COMP%]{display:block;animation:_ngcontent-%COMP%_slideInFromRight .6s ease-out}@keyframes _ngcontent-%COMP%_fadeIn{0%{opacity:0;transform:translateY(10px)}to{opacity:1;transform:translateY(0)}}@keyframes _ngcontent-%COMP%_fadeInScale{0%{opacity:0;transform:scale(.95)}to{opacity:1;transform:scale(1)}}@keyframes _ngcontent-%COMP%_slideInFromRight{0%{opacity:0;transform:translate(50px)}to{opacity:1;transform:translate(0)}}@keyframes _ngcontent-%COMP%_toolCardShine{0%{transform:translate(-100%,-100%) rotate(45deg);opacity:0}30%{opacity:1}70%{opacity:1}to{transform:translate(100%,100%) rotate(45deg);opacity:0}}.upload-area-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;gap:1.5rem;width:100%;max-width:600px;margin:0 auto;padding:1.5rem;border-radius:12px;background-color:#fbfdff;border:2px dashed #9bc5f4;box-shadow:0 4px 15px #00000014;transition:all .3s cubic-bezier(.25,.8,.25,1)}.upload-area-container[_ngcontent-%COMP%]:hover{border-color:#6da2e7;box-shadow:0 6px 20px #0000001f}.upload-box[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;width:100%;padding:3rem 1.5rem;text-align:center;cursor:pointer;border:none;border-radius:8px;position:relative;overflow:hidden}.upload-box.drag-over[_ngcontent-%COMP%]{background-color:#e0f2f7;border-color:#2196f3;transform:translateY(-5px);box-shadow:0 10px 20px #0000001a}.upload-content[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;gap:.8rem;padding:1rem}.select-pdf-file-btn[_ngcontent-%COMP%]{background-color:#457b9d;color:#fff;border:none;padding:1rem 2rem;font-size:1.1rem;font-weight:600;border-radius:8px;cursor:pointer;transition:all .3s ease;box-shadow:0 4px 10px #0000001a;position:relative;overflow:hidden}.select-pdf-file-btn[_ngcontent-%COMP%]:hover{background-color:#3d6f8f;transform:translateY(-2px);box-shadow:0 6px 12px #00000026}.select-pdf-file-btn[_ngcontent-%COMP%]:active{transform:translateY(0);box-shadow:0 2px 5px #0000001a}.select-pdf-file-btn-alt-icons[_ngcontent-%COMP%]{display:flex;gap:10px;margin-top:15px}.small-icon-btn[_ngcontent-%COMP%]{background-color:#f0f4f7;border:1px solid #d1d9e2;color:#6a737d;width:40px;height:40px;border-radius:50%;display:flex;justify-content:center;align-items:center;cursor:pointer;font-size:1rem;transition:all .2s ease;box-shadow:0 2px 5px #0000000d}.small-icon-btn[_ngcontent-%COMP%]:hover{background-color:#e2e8ed;color:#333;transform:translateY(-2px);box-shadow:0 4px 8px #0000001a}.or-drop-text[_ngcontent-%COMP%]{font-size:1rem;color:#888;margin-top:1rem}.file-preview-area[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;gap:.5rem;padding:1rem;animation:_ngcontent-%COMP%_fadeIn .5s ease}.file-thumbnail[_ngcontent-%COMP%]{width:70px;height:70px;border-radius:8px;background-color:#f0f4f7;display:flex;justify-content:center;align-items:center;margin-bottom:.5rem;box-shadow:0 2px 5px #0000001a}.file-pdf-icon[_ngcontent-%COMP%]{font-size:3rem;color:#e63946}#jpg-to-pdf-section[_ngcontent-%COMP%]   .file-pdf-icon[_ngcontent-%COMP%], #merge-images-to-pdf-section[_ngcontent-%COMP%]   .file-pdf-icon[_ngcontent-%COMP%]{color:#f77f00}#word-to-pdf-section[_ngcontent-%COMP%]   .file-pdf-icon[_ngcontent-%COMP%]{color:#457b9d}.file-name-display[_ngcontent-%COMP%]{font-size:1.1rem;font-weight:500;color:#1e2a3b;word-break:break-all;text-align:center}.file-size-display[_ngcontent-%COMP%]{font-size:.9rem;color:#6a737d;margin-top:.2rem}.remove-file-preview-btn[_ngcontent-%COMP%]{position:absolute;top:10px;right:10px;background-color:#e63946cc;color:#fff;border:none;border-radius:50%;width:30px;height:30px;display:flex;justify-content:center;align-items:center;font-size:.9rem;cursor:pointer;transition:all .2s ease;box-shadow:0 2px 5px #0000001a}.remove-file-preview-btn[_ngcontent-%COMP%]:hover{background-color:#e63946;transform:scale(1.1)}.convert-action-btn[_ngcontent-%COMP%]{background:linear-gradient(45deg,#e63946,#e05e6b);color:#fff;border:none;padding:1rem 2.5rem;font-size:1.2rem;font-weight:600;border-radius:8px;cursor:pointer;transition:all .3s cubic-bezier(.25,.8,.25,1);width:100%;max-width:300px;display:flex;align-items:center;justify-content:center;gap:.8rem;margin:2rem auto 0;box-shadow:0 6px 15px #00000026}.convert-action-btn[_ngcontent-%COMP%]:hover:not(:disabled){background:linear-gradient(45deg,#cc2a35,#d64d5d);transform:translateY(-3px) scale(1.01);box-shadow:0 8px 20px #0003}.convert-action-btn[_ngcontent-%COMP%]:active:not(:disabled){transform:translateY(0);box-shadow:0 3px 8px #0000001a}.convert-action-btn[_ngcontent-%COMP%]:disabled{background:#ccc;cursor:not-allowed;opacity:.7;box-shadow:none}.global-status-area[_ngcontent-%COMP%]{margin-top:2rem;display:flex;flex-direction:column;align-items:center;width:100%}.loading-animation-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;gap:1rem;padding:1.5rem;background-color:#e0f2f7;border:1px solid #a8dadc;border-radius:8px;width:100%;max-width:400px;box-shadow:0 4px 10px #00000014;animation:_ngcontent-%COMP%_fadeIn .6s ease-out}.loading-text[_ngcontent-%COMP%]{font-size:1.1rem;font-weight:500;color:#457b9d;margin:0}.spinner[_ngcontent-%COMP%]{border:4px solid rgba(0,0,0,.1);border-left-color:#457b9d;border-radius:50%;width:40px;height:40px;animation:_ngcontent-%COMP%_spin 1s linear infinite}@keyframes _ngcontent-%COMP%_spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.progress-info-block[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;gap:.5rem;width:100%;max-width:500px;padding:1.5rem;background-color:#f8fcfd;border:1px solid #e0e6ed;border-radius:8px;box-shadow:0 4px 10px #0000000d;animation:_ngcontent-%COMP%_fadeIn .6s ease-out}.upload-progress-text[_ngcontent-%COMP%], .upload-file-details[_ngcontent-%COMP%], .upload-speed-time-left[_ngcontent-%COMP%], .upload-percentage-text[_ngcontent-%COMP%], .upload-status-text[_ngcontent-%COMP%]{font-size:.95rem;color:#555;margin:0;text-align:center}.upload-progress-text[_ngcontent-%COMP%]{font-weight:600;color:#333}.upload-percentage-text[_ngcontent-%COMP%]{font-size:1.2rem;font-weight:700;color:#4caf50;margin-top:.5rem}.upload-status-text[_ngcontent-%COMP%]{font-weight:600;color:#457b9d;text-transform:uppercase;margin-top:.5rem}.progress-indicator[_ngcontent-%COMP%]{width:100%;max-width:400px;height:12px;background-color:#e0e0e0;border-radius:6px;overflow:hidden;margin-top:1rem;box-shadow:inset 0 1px 3px #0000001a}.progress-bar-fill[_ngcontent-%COMP%]{height:100%;background:linear-gradient(to right,#80ed99,#4caf50);width:0%;transition:width .4s ease-out;position:relative;overflow:hidden}.progress-bar-fill[_ngcontent-%COMP%]:after{content:\\\"\\\";position:absolute;top:0;left:0;width:100%;height:100%;background:linear-gradient(90deg,#ffffff1a,#ffffff80,#ffffff1a);animation:_ngcontent-%COMP%_shimmer 1.5s infinite}@keyframes _ngcontent-%COMP%_shimmer{0%{transform:translate(-100%)}to{transform:translate(100%)}}.result-message-box[_ngcontent-%COMP%]{width:100%;max-width:450px;padding:1.5rem 2rem;border-radius:10px;margin-top:2rem;text-align:center;font-size:1.05rem;line-height:1.6;box-shadow:0 6px 20px #0000001a;animation:_ngcontent-%COMP%_slideInFromBottom .6s ease-out}@keyframes _ngcontent-%COMP%_slideInFromBottom{0%{opacity:0;transform:translateY(30px)}to{opacity:1;transform:translateY(0)}}.result-message-box.success[_ngcontent-%COMP%]{background-color:#e8ffee;border:1px solid #38b000;color:#1e2a3b}.result-message-box.error[_ngcontent-%COMP%]{background-color:#ffe8e8;border:1px solid #d00000;color:#1e2a3b}.result-message-box[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin-bottom:1rem;font-weight:500}.download-btn[_ngcontent-%COMP%], .reset-conversion-btn[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:.6rem;padding:.9rem 1.8rem;border-radius:30px;font-size:1.05rem;font-weight:600;cursor:pointer;transition:all .3s ease;text-decoration:none;margin:.5rem;box-shadow:0 3px 10px #0000001a}.download-btn[_ngcontent-%COMP%]{background:linear-gradient(45deg,#4caf50,#6ac96e);color:#fff;border:none}.download-btn[_ngcontent-%COMP%]:hover{background:linear-gradient(45deg,#45a049,#60ba64);transform:translateY(-2px);box-shadow:0 5px 12px #00000026}.reset-conversion-btn[_ngcontent-%COMP%]{background-color:#e9ecef;color:#495057;border:1px solid #c8d1da}.reset-conversion-btn[_ngcontent-%COMP%]:hover{background-color:#dde1e5;transform:translateY(-2px);box-shadow:0 5px 12px #0000001a}.multi-image-upload.has-files[_ngcontent-%COMP%]{padding:1.5rem;min-height:150px}.selected-files-summary-display[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;gap:.5rem;padding:1rem}.selected-files-summary-display[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:1.1rem;font-weight:500;color:#1e2a3b;margin:0}.pdf-to-word-layout[_ngcontent-%COMP%]{display:flex;gap:2rem;flex-wrap:wrap;justify-content:center}.main-upload-content[_ngcontent-%COMP%]{flex:2;min-width:300px;display:flex;flex-direction:column;align-items:center}.right-sidebar[_ngcontent-%COMP%]{flex:1;min-width:200px;display:flex;flex-direction:column;align-items:center;gap:1.5rem;padding-top:3rem}.sidebar-convert-btn[_ngcontent-%COMP%]{margin:0!important;width:auto!important;min-width:180px;padding:1.2rem 2rem;font-size:1.1rem}@media (max-width: 768px){body[_ngcontent-%COMP%]{padding:1rem}.main-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:2.2rem}.main-header[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:1rem}.tool-card[_ngcontent-%COMP%]{padding:1rem}.tool-title[_ngcontent-%COMP%]{font-size:1.2rem}.tool-description[_ngcontent-%COMP%]{font-size:.9rem}.tool-workspace-wrapper[_ngcontent-%COMP%]{padding:1.5rem}.back-to-grid-btn[_ngcontent-%COMP%]{font-size:.9rem;padding:.6rem 1rem;margin-bottom:1.5rem}.upload-area-container[_ngcontent-%COMP%]{padding:1rem}.upload-box[_ngcontent-%COMP%]{padding:2rem 1rem}.select-pdf-file-btn[_ngcontent-%COMP%]{font-size:1rem;padding:.8rem 1.5rem}.convert-action-btn[_ngcontent-%COMP%]{font-size:1rem;padding:.8rem 2rem}.pdf-to-word-layout[_ngcontent-%COMP%]{flex-direction:column;align-items:center}.right-sidebar[_ngcontent-%COMP%]{padding-top:1rem}.sidebar-convert-btn[_ngcontent-%COMP%]{margin:1.5rem auto 0!important}.result-message-box[_ngcontent-%COMP%], .progress-info-block[_ngcontent-%COMP%], .loading-animation-container[_ngcontent-%COMP%]{max-width:100%;padding:1rem}.download-btn[_ngcontent-%COMP%], .reset-conversion-btn[_ngcontent-%COMP%]{padding:.7rem 1.2rem;font-size:.9rem}}\"]\n    });\n  }\n  return CompressImageComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}