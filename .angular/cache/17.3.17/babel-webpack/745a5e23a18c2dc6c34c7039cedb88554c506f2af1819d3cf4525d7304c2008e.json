{"ast":null,"code":"import { HttpClient, HttpEventType } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let WordToPdfComponent = /*#__PURE__*/(() => {\n  class WordToPdfComponent {\n    http;\n    selectedFile = null;\n    progress = 0;\n    downloadUrl = '';\n    constructor(http) {\n      this.http = http;\n    }\n    onFileSelected(event) {\n      this.selectedFile = event.target.files[0];\n    }\n    upload() {\n      if (!this.selectedFile) return;\n      csharp;\n      Copy;\n      Edit;\n      const formData = new FormData();\n      formData.append('file', this.selectedFile);\n      this.http.post('http://127.0.0.1:8000/api/word-to-pdf', formData, {\n        responseType: 'blob',\n        reportProgress: true,\n        observe: 'events'\n      }).subscribe(event => {\n        if (event.type === HttpEventType.UploadProgress && event.total) {\n          this.progress = Math.round(event.loaded / event.total * 100);\n        }\n        if (event.type === HttpEventType.Response) {\n          const blob = new Blob([event.body], {\n            type: 'application/pdf'\n          });\n          const url = URL.createObjectURL(blob);\n          // auto-download and reset\n          const anchor = document.createElement('a');\n          anchor.href = url;\n          anchor.download = 'converted.pdf';\n          anchor.click();\n          URL.revokeObjectURL(url);\n          this.reset();\n        }\n      });\n    }\n    reset() {\n      this.selectedFile = null;\n      this.progress = 0;\n      this.downloadUrl = '';\n    }\n    static ɵfac = function WordToPdfComponent_Factory(t) {\n      return new (t || WordToPdfComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: WordToPdfComponent,\n      selectors: [[\"app-word-to-pdf\"]],\n      decls: 2,\n      vars: 0,\n      template: function WordToPdfComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \"word-to-pdf works!\");\n          i0.ɵɵelementEnd();\n        }\n      }\n    });\n  }\n  return WordToPdfComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}