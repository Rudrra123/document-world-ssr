{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component, HostListener } from '@angular/core';\nlet AppComponent = class AppComponent {\n  showMobileMenu = false;\n  showPdfTools = false;\n  showCompressTools = false;\n  // Track window size changes\n  onResize(event) {\n    if (window.innerWidth > 768) {\n      this.showMobileMenu = false;\n    }\n  }\n  // Mobile menu toggle\n  toggleMobileMenu() {\n    this.showMobileMenu = !this.showMobileMenu;\n  }\n  // Close mobile menu when a link is clicked\n  closeMobileMenu() {\n    this.showMobileMenu = false;\n  }\n  // Handle dropdown hover (for desktop)\n  onDropdownHover(show, type) {\n    if (window.innerWidth > 768) {\n      // Only for desktop\n      if (type === 'pdf') {\n        this.showPdfTools = show;\n        if (show) this.showCompressTools = false;\n      } else if (type === 'compress') {\n        this.showCompressTools = show;\n        if (show) this.showPdfTools = false;\n      }\n    }\n  }\n  // Toggle dropdown (for mobile)\n  toggleDropdown(type) {\n    if (window.innerWidth <= 768) {\n      // Only for mobile\n      if (type === 'pdf') {\n        this.showPdfTools = !this.showPdfTools;\n        if (this.showPdfTools) this.showCompressTools = false;\n      } else if (type === 'compress') {\n        this.showCompressTools = !this.showCompressTools;\n        if (this.showCompressTools) this.showPdfTools = false;\n      }\n    }\n  }\n  // Hide compress tools dropdown\n  hideCompressTools() {\n    this.showCompressTools = false;\n    this.closeMobileMenu();\n  }\n  // Hide pdf tools dropdown\n  hidePdfTools() {\n    this.showPdfTools = false;\n    this.closeMobileMenu();\n  }\n};\n__decorate([HostListener('window:resize', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Event]), __metadata(\"design:returntype\", void 0)], AppComponent.prototype, \"onResize\", null);\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}