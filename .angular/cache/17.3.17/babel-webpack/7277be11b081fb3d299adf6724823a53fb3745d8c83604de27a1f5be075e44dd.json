{"ast":null,"code":"import { ElementRef } from '@angular/core'; // Added OnDestroy\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/platform-browser\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = [\"fileInput\"];\nfunction CompressImageComponent_ng_container_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 32);\n    i0.ɵɵelementStart(2, \"span\", 33);\n    i0.ɵɵtext(3, \"Drag & Drop or Click to Upload Image\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 34);\n    i0.ɵɵtext(5, \"JPG, PNG, WebP, GIF, BMP supported\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction CompressImageComponent_ng_container_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 35);\n    i0.ɵɵelementStart(2, \"span\", 36);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 37);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function CompressImageComponent_ng_container_27_Template_button_click_6_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      $event.stopPropagation();\n      return i0.ɵɵresetView(ctx_r2.clearSelectedFile());\n    });\n    i0.ɵɵtext(7, \"Clear\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r2.selectedFile.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"(\", (ctx_r2.originalSize / 1024).toFixed(1), \" KB)\");\n  }\n}\nfunction CompressImageComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 39)(1, \"div\", 40)(2, \"label\");\n    i0.ɵɵtext(3, \"Width (px)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 41);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_div_29_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.resizeWidth, $event) || (ctx_r2.resizeWidth = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 40)(6, \"label\");\n    i0.ɵɵtext(7, \"Height (px)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 42);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_div_29_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.resizeHeight, $event) || (ctx_r2.resizeHeight = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.resizeWidth);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.resizeHeight);\n  }\n}\nfunction CompressImageComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"label\", 43);\n    i0.ɵɵelement(2, \"i\", 44);\n    i0.ɵɵtext(3, \" Target Format\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"select\", 45);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_div_30_Template_select_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.convertFormat, $event) || (ctx_r2.convertFormat = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementStart(5, \"option\", 46);\n    i0.ɵɵtext(6, \"Choose Format\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"option\", 47);\n    i0.ɵɵtext(8, \"JPEG (.jpg)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"option\", 48);\n    i0.ɵɵtext(10, \"PNG (.png)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"option\", 49);\n    i0.ɵɵtext(12, \"WebP (.webp)\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.convertFormat);\n  }\n}\nfunction CompressImageComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 50)(1, \"div\", 40)(2, \"label\");\n    i0.ɵɵtext(3, \"X Start (px)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 51);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_div_31_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.cropX, $event) || (ctx_r2.cropX = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 40)(6, \"label\");\n    i0.ɵɵtext(7, \"Y Start (px)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 51);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_div_31_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.cropY, $event) || (ctx_r2.cropY = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 40)(10, \"label\");\n    i0.ɵɵtext(11, \"Crop Width (px)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 52);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_div_31_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.cropWidth, $event) || (ctx_r2.cropWidth = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 40)(14, \"label\");\n    i0.ɵɵtext(15, \"Crop Height (px)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"input\", 53);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_div_31_Template_input_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.cropHeight, $event) || (ctx_r2.cropHeight = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.cropX);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.cropY);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.cropWidth);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.cropHeight);\n  }\n}\nfunction CompressImageComponent_ng_container_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 54);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.getButtonLabel(), \" \");\n  }\n}\nfunction CompressImageComponent_ng_container_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 55);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Processing... \", ctx_r2.progress, \"% \");\n  }\n}\nfunction CompressImageComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 56)(1, \"div\", 57);\n    i0.ɵɵelement(2, \"div\", 58);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 59);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"width\", ctx_r2.progress, \"%\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.progress, \"%\");\n  }\n}\nfunction CompressImageComponent_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 60);\n    i0.ɵɵelement(1, \"img\", 61);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"src\", ctx_r2.previewUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction CompressImageComponent_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 62);\n    i0.ɵɵelement(1, \"i\", 63);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3, \"Your uploaded image will appear here.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CompressImageComponent_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 64)(1, \"h3\", 26);\n    i0.ɵɵelement(2, \"i\", 65);\n    i0.ɵɵtext(3, \" Result\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 66)(5, \"p\");\n    i0.ɵɵtext(6, \"Optimized Size: \");\n    i0.ɵɵelementStart(7, \"span\", 67);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"p\", 68);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"a\", 69);\n    i0.ɵɵelement(12, \"i\", 70);\n    i0.ɵɵtext(13, \" Download Optimized Image \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 71);\n    i0.ɵɵlistener(\"click\", function CompressImageComponent_div_42_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.clearSelectedFile());\n    });\n    i0.ɵɵtext(15, \"Optimize Another\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\"\", (ctx_r2.compressedSize / 1024).toFixed(1), \" KB\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Original Size: \", (ctx_r2.originalSize / 1024).toFixed(1), \" KB\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"href\", ctx_r2.compressedUrl, i0.ɵɵsanitizeUrl)(\"download\", ctx_r2.downloadedFileName);\n  }\n}\nfunction CompressImageComponent_div_43_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 72)(1, \"h3\", 73);\n    i0.ɵɵelement(2, \"i\", 74);\n    i0.ɵɵtext(3, \" Error\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 75);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 71);\n    i0.ɵɵlistener(\"click\", function CompressImageComponent_div_43_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.clearSelectedFile());\n    });\n    i0.ɵɵtext(7, \"Try Again\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r2.errorMessage);\n  }\n}\nexport let CompressImageComponent = /*#__PURE__*/(() => {\n  class CompressImageComponent {\n    http;\n    sanitizer;\n    fileInput;\n    selectedFile = null;\n    previewUrl = '';\n    blobUrl = '';\n    compressedUrl = '';\n    originalSize = 0;\n    compressedSize = 0;\n    progress = 0;\n    errorMessage = null;\n    mode = 'compress';\n    resizeWidth = null;\n    resizeHeight = null;\n    convertFormat = '';\n    cropX = null;\n    cropY = null;\n    cropWidth = null;\n    cropHeight = null;\n    downloadedFileName = '';\n    constructor(http, sanitizer) {\n      this.http = http;\n      this.sanitizer = sanitizer;\n    }\n    /**\n     * Triggers the hidden file input element click.\n     */\n    triggerFileInput() {\n      this.fileInput.nativeElement.click();\n    }\n    /**\n     * Prevents default browser behaviors for drag events.\n     * @param event The DOM event.\n     */\n    preventDefaults(event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    /**\n     * Handles file selection from the input element.\n     * @param event The change event from the file input.\n     */\n    onFileSelected(event) {\n      const input = event.target;\n      const file = input.files?.[0];\n      if (file) this.setFile(file);\n    }\n    /**\n     * Handles files dropped onto the drag-and-drop area.\n     * @param event The drag event.\n     */\n    onFilesDropped(event) {\n      this.preventDefaults(event);\n      const file = event.dataTransfer?.files?.[0];\n      if (file) {\n        if (file.type.startsWith('image/')) {\n          this.setFile(file);\n        } else {\n          this.errorMessage = 'Please drop an image file (JPG, PNG, WebP, GIF, BMP).';\n          this.clearSelectedFile(); // CORRECTED: Changed to clearSelectedFile()\n        }\n      }\n    }\n    /**\n     * Sets the selected file and prepares for upload, resetting other states.\n     * @param file The File object to set.\n     */\n    setFile(file) {\n      // Revoke previous object URLs to free up memory before creating new ones\n      this.revokeObjectUrls();\n      this.selectedFile = file;\n      this.previewUrl = this.sanitizer.bypassSecurityTrustUrl(URL.createObjectURL(file));\n      this.originalSize = file.size;\n      // Reset all processed/downloaded states and error messages\n      this.compressedUrl = '';\n      this.blobUrl = '';\n      this.compressedSize = 0;\n      this.progress = 0;\n      this.downloadedFileName = '';\n      this.errorMessage = null; // Clear error message when a new file is selected\n      // Reset all mode-specific input fields\n      this.resizeWidth = null;\n      this.resizeHeight = null;\n      this.convertFormat = '';\n      this.cropX = null;\n      this.cropY = null;\n      this.cropWidth = null;\n      this.cropHeight = null;\n    }\n    /**\n     * Gets the appropriate label for the action button based on the current mode.\n     * @returns The button label string.\n     */\n    getButtonLabel() {\n      switch (this.mode) {\n        case 'resize':\n          return '📐 Resize Image';\n        case 'convert':\n          return '🔄 Convert Image';\n        case 'crop':\n          return '✂️ Crop Image';\n        default:\n          return '⚡ Compress Image';\n      }\n    }\n    /**\n     * Initiates the upload and processing of the selected image based on the current mode.\n     */\n    upload() {\n      if (!this.selectedFile) {\n        this.errorMessage = 'Please select an image first.';\n        return;\n      }\n      // Clear previous error messages and results before starting a new upload\n      this.errorMessage = null;\n      this.compressedUrl = '';\n      this.compressedSize = 0;\n      this.blobUrl = '';\n      this.downloadedFileName = '';\n      this.progress = 0;\n      const formData = new FormData();\n      formData.append('file', this.selectedFile);\n      let endpoint = '';\n      if (this.mode === 'resize') {\n        // Validate resize inputs\n        if (this.resizeWidth === null || this.resizeHeight === null || this.resizeWidth <= 0 || this.resizeHeight <= 0) {\n          this.errorMessage = 'Resize Error: Please enter valid positive width and height.';\n          return;\n        }\n        formData.append('width', this.resizeWidth.toString());\n        formData.append('height', this.resizeHeight.toString());\n        endpoint = 'http://127.0.0.1:8000/api/resize-image';\n      } else if (this.mode === 'convert') {\n        // Validate convert input\n        if (!this.convertFormat) {\n          this.errorMessage = 'Convert Error: Please select a target format.';\n          return;\n        }\n        formData.append('target_format', this.convertFormat);\n        endpoint = 'http://127.0.0.1:8000/api/convert-image';\n      } else if (this.mode === 'crop') {\n        // Validate crop inputs\n        if (this.cropX === null || this.cropY === null || this.cropWidth === null || this.cropHeight === null || this.cropWidth <= 0 || this.cropHeight <= 0) {\n          this.errorMessage = 'Crop Error: Please enter valid positive crop dimensions (width, height) and coordinates (x, y).';\n          return;\n        }\n        formData.append('x', this.cropX.toString());\n        formData.append('y', this.cropY.toString());\n        formData.append('width', this.cropWidth.toString());\n        formData.append('height', this.cropHeight.toString());\n        endpoint = 'http://127.0.0.1:8000/api/crop-image';\n      } else {\n        // Default to compress\n        endpoint = 'http://127.0.0.1:8000/api/compress-image';\n      }\n      this.http.post(endpoint, formData, {\n        reportProgress: true,\n        observe: 'events',\n        responseType: 'blob' // Expecting a blob (image data) back from FastAPI\n      }).subscribe(event => {\n        if (event.type === HttpEventType.UploadProgress && event.total) {\n          this.progress = Math.round(event.loaded / event.total * 100);\n        }\n        if (event.type === HttpEventType.Response) {\n          const blob = new Blob([event.body], {\n            type: event.body?.type || 'image/jpeg'\n          });\n          this.compressedSize = blob.size;\n          // Revoke previous object URLs before creating new ones for processed image\n          this.revokeObjectUrls(true); // Revoke only compressedUrl/blobUrl\n          // Store raw blob URL for download, and sanitize for display\n          this.blobUrl = URL.createObjectURL(blob);\n          this.compressedUrl = this.sanitizer.bypassSecurityTrustUrl(this.blobUrl);\n          this.downloadedFileName = this.getDownloadName();\n          this.progress = 100; // Ensure progress is 100% on completion\n          // Auto download via raw blobUrl\n          const a = document.createElement('a');\n          a.href = this.blobUrl; // Use the raw blobUrl for download\n          a.download = this.downloadedFileName;\n          document.body.appendChild(a); // Temporarily append to body to ensure click works\n          a.click();\n          document.body.removeChild(a); // Clean up the temporary anchor tag\n        }\n      }, error => {\n        console.error('Image processing failed:', error);\n        this.progress = 0; // Reset progress on error\n        // Display a user-friendly error message on the UI\n        this.errorMessage = `Processing failed: ${error.message || 'An unknown error occurred.'}`;\n      });\n    }\n    /**\n     * Generates a suitable download file name based on the mode.\n     * @returns The download file name.\n     */\n    getDownloadName() {\n      const name = this.selectedFile?.name || 'image';\n      const lastDotIndex = name.lastIndexOf('.');\n      let baseName = name;\n      let originalExt = 'jpg'; // Default extension\n      if (lastDotIndex > -1) {\n        baseName = name.substring(0, lastDotIndex);\n        originalExt = name.substring(lastDotIndex + 1).toLowerCase();\n      }\n      let suffix = '';\n      let ext = originalExt; // Default to original extension\n      switch (this.mode) {\n        case 'compress':\n          suffix = 'compressed';\n          if (!['jpeg', 'jpg', 'png', 'webp'].includes(originalExt)) {\n            ext = 'jpeg';\n          }\n          break;\n        case 'resize':\n          suffix = 'resized';\n          break;\n        case 'convert':\n          suffix = 'converted';\n          ext = this.convertFormat.toLowerCase() || originalExt;\n          break;\n        case 'crop':\n          suffix = 'cropped';\n          break;\n        default:\n          suffix = 'processed';\n      }\n      return `${baseName}_${suffix}.${ext}`;\n    }\n    /**\n     * Clears the current file selection and resets related states.\n     */\n    clearSelectedFile() {\n      this.revokeObjectUrls();\n      this.selectedFile = null;\n      this.previewUrl = '';\n      this.blobUrl = '';\n      this.compressedUrl = '';\n      this.progress = 0;\n      this.compressedSize = 0;\n      this.originalSize = 0;\n      this.downloadedFileName = '';\n      this.errorMessage = null;\n      this.resizeWidth = null;\n      this.resizeHeight = null;\n      this.convertFormat = '';\n      this.cropX = null;\n      this.cropY = null;\n      this.cropWidth = null;\n      this.cropHeight = null;\n      if (this.fileInput && this.fileInput.nativeElement) {\n        this.fileInput.nativeElement.value = '';\n      }\n    }\n    /**\n     * Helper to revoke Object URLs to prevent memory leaks.\n     * @param onlyCompressed If true, only revokes compressedUrl/blobUrl. Otherwise, revokes all.\n     */\n    revokeObjectUrls(onlyCompressed = false) {\n      if (!onlyCompressed && this.previewUrl) {\n        const urlString = this.previewUrl.changingThisBreaksApplicationSecurity;\n        if (urlString && urlString.startsWith('blob:')) {\n          URL.revokeObjectURL(urlString);\n        }\n      }\n      if (this.blobUrl && this.blobUrl.startsWith('blob:')) {\n        URL.revokeObjectURL(this.blobUrl);\n      }\n    }\n    // Lifecycle hook to clean up object URLs when component is destroyed\n    ngOnDestroy() {\n      this.revokeObjectUrls();\n    }\n    static ɵfac = function CompressImageComponent_Factory(t) {\n      return new (t || CompressImageComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.DomSanitizer));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CompressImageComponent,\n      selectors: [[\"app-compress-image\"]],\n      viewQuery: function CompressImageComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInput = _t.first);\n        }\n      },\n      decls: 44,\n      vars: 14,\n      consts: [[\"fileInput\", \"\"], [1, \"image-optimizer-container\"], [1, \"optimizer-header\", \"animate__animated\", \"animate__fadeInDown\"], [1, \"fas\", \"fa-magic\"], [1, \"tagline\"], [1, \"optimizer-workspace\"], [1, \"control-panel\", \"animate__animated\", \"animate__fadeInLeft\"], [1, \"setting-group\"], [\"for\", \"modeSelect\", 1, \"setting-label\"], [1, \"fas\", \"fa-tools\"], [\"id\", \"modeSelect\", 1, \"app-select\", 3, \"ngModelChange\", \"ngModel\"], [\"value\", \"compress\"], [\"value\", \"resize\"], [\"value\", \"convert\"], [\"value\", \"crop\"], [1, \"upload-zone\", 3, \"click\", \"dragover\", \"drop\"], [\"type\", \"file\", \"accept\", \"image/*\", \"hidden\", \"\", 3, \"change\"], [1, \"upload-content\"], [4, \"ngIf\"], [1, \"dynamic-settings\"], [\"class\", \"setting-group-grid\", 4, \"ngIf\"], [\"class\", \"setting-group\", 4, \"ngIf\"], [\"class\", \"setting-group-grid two-columns\", 4, \"ngIf\"], [1, \"process-button\", 3, \"click\", \"disabled\"], [\"class\", \"processing-status\", 4, \"ngIf\"], [1, \"preview-panel\", \"animate__animated\", \"animate__fadeInRight\"], [1, \"panel-title\"], [1, \"fas\", \"fa-eye\"], [\"class\", \"image-display-area\", 4, \"ngIf\"], [\"class\", \"placeholder-text\", 4, \"ngIf\"], [\"class\", \"result-area\", 4, \"ngIf\"], [\"class\", \"error-area\", 4, \"ngIf\"], [1, \"fas\", \"fa-cloud-upload-alt\", \"upload-icon\"], [1, \"upload-prompt\"], [1, \"upload-hint\"], [1, \"fas\", \"fa-check-circle\", \"file-uploaded-icon\"], [1, \"file-name-display\"], [1, \"file-size-display\"], [\"type\", \"button\", 1, \"clear-file-btn\", 3, \"click\"], [1, \"setting-group-grid\"], [1, \"input-field\"], [\"type\", \"number\", \"placeholder\", \"e.g. 1280\", 1, \"app-input\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"number\", \"placeholder\", \"e.g. 720\", 1, \"app-input\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"convertFormat\", 1, \"setting-label\"], [1, \"fas\", \"fa-file-image\"], [\"id\", \"convertFormat\", 1, \"app-select\", 3, \"ngModelChange\", \"ngModel\"], [\"value\", \"\"], [\"value\", \"jpeg\"], [\"value\", \"png\"], [\"value\", \"webp\"], [1, \"setting-group-grid\", \"two-columns\"], [\"type\", \"number\", \"placeholder\", \"0\", 1, \"app-input\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"number\", \"placeholder\", \"e.g. 300\", 1, \"app-input\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"number\", \"placeholder\", \"e.g. 200\", 1, \"app-input\", 3, \"ngModelChange\", \"ngModel\"], [1, \"fas\", \"fa-play-circle\"], [1, \"fas\", \"fa-spinner\", \"fa-spin\"], [1, \"processing-status\"], [1, \"progress-bar\"], [1, \"progress-fill\"], [1, \"progress-text\"], [1, \"image-display-area\"], [\"alt\", \"Image Preview\", 1, \"preview-image\", 3, \"src\"], [1, \"placeholder-text\"], [1, \"fas\", \"fa-images\"], [1, \"result-area\"], [1, \"fas\", \"fa-check-circle\"], [1, \"result-summary\"], [1, \"highlight-text\"], [1, \"original-size-info\"], [1, \"download-button\", 3, \"href\", \"download\"], [1, \"fas\", \"fa-download\"], [\"type\", \"button\", 1, \"reset-button\", 3, \"click\"], [1, \"error-area\"], [1, \"panel-title\", \"error-title\"], [1, \"fas\", \"fa-exclamation-triangle\"], [1, \"error-message\"]],\n      template: function CompressImageComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"h1\");\n          i0.ɵɵelement(3, \"i\", 3);\n          i0.ɵɵtext(4, \" Image AI Optimizer\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"p\", 4);\n          i0.ɵɵtext(6, \"Smartly compress, resize, convert, or crop your images with AI precision.\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 5)(8, \"div\", 6)(9, \"div\", 7)(10, \"label\", 8);\n          i0.ɵɵelement(11, \"i\", 9);\n          i0.ɵɵtext(12, \" Choose Mode\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"select\", 10);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_Template_select_ngModelChange_13_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.mode, $event) || (ctx.mode = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementStart(14, \"option\", 11);\n          i0.ɵɵtext(15, \"\\u26A1 Compress Image\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"option\", 12);\n          i0.ɵɵtext(17, \"\\uD83D\\uDCD0 Resize Image\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"option\", 13);\n          i0.ɵɵtext(19, \"\\uD83D\\uDD04 Convert Format\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"option\", 14);\n          i0.ɵɵtext(21, \"\\u2702\\uFE0F Crop Image\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(22, \"div\", 15);\n          i0.ɵɵlistener(\"click\", function CompressImageComponent_Template_div_click_22_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.triggerFileInput());\n          })(\"dragover\", function CompressImageComponent_Template_div_dragover_22_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.preventDefaults($event));\n          })(\"drop\", function CompressImageComponent_Template_div_drop_22_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onFilesDropped($event));\n          });\n          i0.ɵɵelementStart(23, \"input\", 16, 0);\n          i0.ɵɵlistener(\"change\", function CompressImageComponent_Template_input_change_23_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onFileSelected($event));\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"div\", 17);\n          i0.ɵɵtemplate(26, CompressImageComponent_ng_container_26_Template, 6, 0, \"ng-container\", 18)(27, CompressImageComponent_ng_container_27_Template, 8, 2, \"ng-container\", 18);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(28, \"div\", 19);\n          i0.ɵɵtemplate(29, CompressImageComponent_div_29_Template, 9, 2, \"div\", 20)(30, CompressImageComponent_div_30_Template, 13, 1, \"div\", 21)(31, CompressImageComponent_div_31_Template, 17, 4, \"div\", 22);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"button\", 23);\n          i0.ɵɵlistener(\"click\", function CompressImageComponent_Template_button_click_32_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.upload());\n          });\n          i0.ɵɵtemplate(33, CompressImageComponent_ng_container_33_Template, 3, 1, \"ng-container\", 18)(34, CompressImageComponent_ng_container_34_Template, 3, 1, \"ng-container\", 18);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(35, CompressImageComponent_div_35_Template, 5, 3, \"div\", 24);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(36, \"div\", 25)(37, \"h3\", 26);\n          i0.ɵɵelement(38, \"i\", 27);\n          i0.ɵɵtext(39, \" Image Preview\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(40, CompressImageComponent_div_40_Template, 2, 1, \"div\", 28)(41, CompressImageComponent_div_41_Template, 4, 0, \"div\", 29)(42, CompressImageComponent_div_42_Template, 16, 4, \"div\", 30)(43, CompressImageComponent_div_43_Template, 8, 1, \"div\", 31);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(13);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.mode);\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"ngIf\", !ctx.selectedFile);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedFile);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.mode === \"resize\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.mode === \"convert\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.mode === \"crop\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", !ctx.selectedFile || ctx.mode === \"resize\" && (!ctx.resizeWidth || !ctx.resizeHeight) || ctx.mode === \"convert\" && !ctx.convertFormat || ctx.mode === \"crop\" && (ctx.cropX === null || ctx.cropY === null || !ctx.cropWidth || !ctx.cropHeight) || ctx.progress > 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.progress === 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.progress > 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.progress > 0 && ctx.progress < 100);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.previewUrl);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.previewUrl);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.compressedSize > 0 && !ctx.errorMessage);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        }\n      },\n      dependencies: [i3.NgIf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgModel],\n      styles: [\".image-optimizer-container[_ngcontent-%COMP%]{max-width:1200px;margin:40px auto;padding:30px;font-family:Inter,sans-serif;color:#333;background:linear-gradient(135deg,#f7f9fc,#e9eff5);background-size:400% 400%;animation:_ngcontent-%COMP%_gradientShift 15s ease infinite alternate;border-radius:20px;box-shadow:0 15px 50px #0000001a;position:relative;overflow:hidden;transition:background .3s ease}@keyframes _ngcontent-%COMP%_gradientShift{0%{background-position:0% 50%}50%{background-position:100% 50%}to{background-position:0% 50%}}.optimizer-header[_ngcontent-%COMP%]{text-align:center;margin-bottom:40px}.optimizer-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:2.8rem;font-weight:700;color:#2c3e50;margin-bottom:10px;letter-spacing:-.5px}.optimizer-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{color:#4a69bd}.optimizer-header[_ngcontent-%COMP%]   .tagline[_ngcontent-%COMP%]{font-size:1.1rem;color:#748b9f;max-width:600px;margin:0 auto;line-height:1.6}.optimizer-workspace[_ngcontent-%COMP%]{display:flex;gap:40px;align-items:flex-start}.control-panel[_ngcontent-%COMP%]{flex:1;min-width:450px;background:#fff;padding:35px;border-radius:18px;box-shadow:0 10px 30px #00000012;border:1px solid #e0e6ec}.setting-group[_ngcontent-%COMP%]{margin-bottom:30px}.setting-group-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fit,minmax(180px,1fr));gap:20px;margin-bottom:30px}.setting-group-grid.two-columns[_ngcontent-%COMP%]{grid-template-columns:1fr 1fr}.setting-label[_ngcontent-%COMP%]{display:block;font-size:.98rem;font-weight:600;color:#4a69bd;margin-bottom:10px}.setting-label[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{margin-right:8px;color:#8c9bbd}.app-select[_ngcontent-%COMP%], .app-input[_ngcontent-%COMP%]{width:100%;padding:14px 18px;font-size:1rem;border:1px solid #d3dee6;border-radius:10px;background-color:#fcfdfe;transition:border-color .2s ease,box-shadow .2s ease;appearance:none}.app-select[_ngcontent-%COMP%]{background-image:url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='none' stroke='%238697a8' stroke-width='2' d='M7 10l5 5 5-5z'/%3E%3C/svg%3E\\\");background-repeat:no-repeat;background-position:right 15px center;background-size:18px}.app-input[_ngcontent-%COMP%]:focus, .app-select[_ngcontent-%COMP%]:focus{border-color:#6c63ff;box-shadow:0 0 0 4px #6c63ff33;outline:none}.upload-zone[_ngcontent-%COMP%]{background:#eef2ff;border:2px dashed #99aaff;padding:45px;text-align:center;cursor:pointer;margin-bottom:35px;border-radius:15px;transition:background .3s ease,border-color .3s ease;display:flex;flex-direction:column;align-items:center;justify-content:center;min-height:200px}.upload-zone[_ngcontent-%COMP%]:hover{background:#e2e8fa;border-color:#7b8bff}.upload-content[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;gap:10px}.upload-icon[_ngcontent-%COMP%]{font-size:4rem;color:#6c63ff;margin-bottom:18px}.upload-prompt[_ngcontent-%COMP%]{font-size:1.2rem;font-weight:500;color:#4a69bd}.upload-hint[_ngcontent-%COMP%]{font-size:.95rem;color:#8899a6}.file-uploaded-icon[_ngcontent-%COMP%]{font-size:4rem;color:#28a745;margin-bottom:15px}.file-name-display[_ngcontent-%COMP%]{font-size:1.15rem;font-weight:600;color:#34495e;word-break:break-all}.file-size-display[_ngcontent-%COMP%]{font-size:.95rem;color:#7f8c8d;margin-top:-5px}.clear-file-btn[_ngcontent-%COMP%]{background:#e9ecef;color:#6c757d;border:none;padding:6px 14px;border-radius:8px;font-size:.9rem;cursor:pointer;margin-top:12px;transition:background .2s ease,color .2s ease}.clear-file-btn[_ngcontent-%COMP%]:hover{background:#dde2e6;color:#495057}.process-button[_ngcontent-%COMP%]{width:100%;background-color:#6c63ff;color:#fff;border:none;padding:16px 30px;font-size:1.15rem;font-weight:600;border-radius:12px;cursor:pointer;transition:background-color .3s ease,transform .2s ease,box-shadow .3s ease;display:flex;align-items:center;justify-content:center;gap:12px;margin-top:30px;box-shadow:0 5px 15px #6c63ff4d}.process-button[_ngcontent-%COMP%]:hover:not(:disabled){background-color:#524ccf;transform:translateY(-3px);box-shadow:0 8px 20px #6c63ff66}.process-button[_ngcontent-%COMP%]:disabled{background-color:#d8dee3;color:#8fa1b4;cursor:not-allowed;opacity:.8;box-shadow:none;transform:none}.processing-status[_ngcontent-%COMP%]{margin-top:30px;text-align:center}.progress-bar[_ngcontent-%COMP%]{width:100%;background:#eef2f6;border-radius:6px;height:12px;overflow:hidden;margin-bottom:10px}.progress-fill[_ngcontent-%COMP%]{height:100%;background-color:#20c997;width:0%;border-radius:6px;transition:width .3s ease}.progress-text[_ngcontent-%COMP%]{font-size:.95rem;color:#5f6c7c;font-weight:500}.preview-panel[_ngcontent-%COMP%]{flex:1;min-width:400px;background:#fff;padding:35px;border-radius:18px;box-shadow:0 10px 30px #00000012;border:1px solid #e0e6ec;display:flex;flex-direction:column;align-items:center;text-align:center}.panel-title[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:600;color:#2c3e50;margin-bottom:30px;display:flex;align-items:center;gap:12px}.panel-title[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{color:#7b8bff}.image-display-area[_ngcontent-%COMP%]{width:100%;height:320px;display:flex;justify-content:center;align-items:center;background:#f8faff;border-radius:12px;overflow:hidden;margin-bottom:25px;border:2px dashed #dde4ee}.preview-image[_ngcontent-%COMP%]{max-width:100%;max-height:100%;object-fit:contain;border-radius:10px;box-shadow:0 4px 15px #00000014}.placeholder-text[_ngcontent-%COMP%]{color:#aab8fa;font-size:1.15rem;padding:25px}.placeholder-text[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:4.5rem;margin-bottom:18px;display:block}.result-area[_ngcontent-%COMP%]{margin-top:35px;width:100%;padding-top:30px;border-top:1px solid #e0e6ec}.result-summary[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;gap:12px}.result-summary[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:1.15rem;color:#34495e;font-weight:500}.highlight-text[_ngcontent-%COMP%]{color:#20c997;font-weight:700;font-size:1.3rem}.original-size-info[_ngcontent-%COMP%]{font-size:.95rem;color:#8899a6;margin-top:-5px}.download-button[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:10px;margin-top:25px;background:#20c997;color:#fff;padding:14px 28px;border-radius:10px;text-decoration:none;font-weight:600;font-size:1.05rem;transition:background-color .3s ease,transform .2s ease,box-shadow .3s ease;box-shadow:0 4px 12px #20c9974d}.download-button[_ngcontent-%COMP%]:hover{background-color:#1aa07d;transform:translateY(-3px);box-shadow:0 6px 16px #20c99766}.reset-button[_ngcontent-%COMP%]{background:#9faec2;color:#fff;border:none;padding:12px 22px;border-radius:10px;font-size:1rem;cursor:pointer;margin-top:18px;transition:background-color .3s ease}.reset-button[_ngcontent-%COMP%]:hover{background-color:#8798af}.error-area[_ngcontent-%COMP%]{margin-top:35px;width:100%;padding-top:30px;border-top:1px solid #e0e6ec;text-align:center}.error-title[_ngcontent-%COMP%], .error-title[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{color:#dc3545}.error-message[_ngcontent-%COMP%]{color:#dc3545;font-weight:500;font-size:1.1rem;margin-top:12px;line-height:1.5}@media (max-width: 992px){.optimizer-workspace[_ngcontent-%COMP%]{flex-direction:column;align-items:center;gap:30px}.control-panel[_ngcontent-%COMP%], .preview-panel[_ngcontent-%COMP%]{width:100%;min-width:unset}.control-panel[_ngcontent-%COMP%]{margin-bottom:0}}@media (max-width: 768px){.image-optimizer-container[_ngcontent-%COMP%]{padding:25px;margin:25px auto}.optimizer-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:2.3rem}.optimizer-header[_ngcontent-%COMP%]   .tagline[_ngcontent-%COMP%]{font-size:1rem}.control-panel[_ngcontent-%COMP%], .preview-panel[_ngcontent-%COMP%]{padding:25px}.upload-zone[_ngcontent-%COMP%]{padding:35px;min-height:180px}.upload-icon[_ngcontent-%COMP%], .file-uploaded-icon[_ngcontent-%COMP%]{font-size:3.5rem}.process-button[_ngcontent-%COMP%]{padding:14px 25px;font-size:1.05rem}.panel-title[_ngcontent-%COMP%]{font-size:1.3rem}.image-display-area[_ngcontent-%COMP%]{height:280px}.download-button[_ngcontent-%COMP%]{padding:12px 22px;font-size:.95rem}.reset-button[_ngcontent-%COMP%]{padding:10px 18px;font-size:.9rem}}@media (max-width: 576px){.optimizer-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:1.9rem}.setting-group-grid[_ngcontent-%COMP%]{grid-template-columns:1fr;gap:15px}.upload-prompt[_ngcontent-%COMP%]{font-size:1.1rem}.upload-icon[_ngcontent-%COMP%], .file-uploaded-icon[_ngcontent-%COMP%]{font-size:3rem}}\"]\n    });\n  }\n  return CompressImageComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}