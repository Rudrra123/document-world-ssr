{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = [\"fileInputSingle\"];\nconst _c1 = [\"fileInputMultiple\"];\nconst _c2 = a0 => ({\n  \"dragging\": a0\n});\nfunction PdfToolsComponent_div_15_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Click or drag & drop your file here\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PdfToolsComponent_div_15_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"Selected: \", ctx_r1.selectedFileSingle.name, \"\");\n  }\n}\nfunction PdfToolsComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵlistener(\"dragover\", function PdfToolsComponent_div_15_Template_div_dragover_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDragOverSingle($event));\n    })(\"dragleave\", function PdfToolsComponent_div_15_Template_div_dragleave_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDragLeaveSingle($event));\n    })(\"drop\", function PdfToolsComponent_div_15_Template_div_drop_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDropSingle($event));\n    });\n    i0.ɵɵtemplate(1, PdfToolsComponent_div_15_p_1_Template, 2, 0, \"p\", 18)(2, PdfToolsComponent_div_15_p_2_Template, 2, 1, \"p\", 18);\n    i0.ɵɵelementStart(3, \"input\", 19, 0);\n    i0.ɵɵlistener(\"change\", function PdfToolsComponent_div_15_Template_input_change_3_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onFileSelectedSingle($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function PdfToolsComponent_div_15_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const fileInputSingle_r3 = i0.ɵɵreference(4);\n      return i0.ɵɵresetView(fileInputSingle_r3.click());\n    });\n    i0.ɵɵtext(6, \"Browse File\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c2, ctx_r1.isDragging));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.selectedFileSingle);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.selectedFileSingle);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"accept\", ctx_r1.getFileAcceptTypes(ctx_r1.mode));\n  }\n}\nfunction PdfToolsComponent_div_16_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Click or drag & drop multiple images\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PdfToolsComponent_div_16_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.selectedFilesMultiple.length, \" files selected\");\n  }\n}\nfunction PdfToolsComponent_div_16_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵelement(1, \"img\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"src\", ctx_r1.previewUrlMultiple, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction PdfToolsComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵlistener(\"dragover\", function PdfToolsComponent_div_16_Template_div_dragover_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.preventDefaults($event));\n    })(\"drop\", function PdfToolsComponent_div_16_Template_div_drop_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onFilesDroppedMultiple($event));\n    });\n    i0.ɵɵtemplate(1, PdfToolsComponent_div_16_p_1_Template, 2, 0, \"p\", 18)(2, PdfToolsComponent_div_16_p_2_Template, 2, 1, \"p\", 18);\n    i0.ɵɵelementStart(3, \"input\", 22, 1);\n    i0.ɵɵlistener(\"change\", function PdfToolsComponent_div_16_Template_input_change_3_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onFilesSelectedMultiple($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function PdfToolsComponent_div_16_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const fileInputMultiple_r5 = i0.ɵɵreference(4);\n      return i0.ɵɵresetView(fileInputMultiple_r5.click());\n    });\n    i0.ɵɵtext(6, \"Browse Images\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, PdfToolsComponent_div_16_div_7_Template, 2, 1, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.selectedFilesMultiple.length);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.selectedFilesMultiple.length);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.previewUrlMultiple);\n  }\n}\nfunction PdfToolsComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵelement(1, \"div\", 27);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"width\", ctx_r1.progress, \"%\");\n  }\n}\nfunction PdfToolsComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \\u274C \", ctx_r1.errorMessage, \" \");\n  }\n}\nfunction PdfToolsComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtext(1, \" \\u2705 File is ready! \");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementStart(3, \"a\", 30);\n    i0.ɵɵtext(4, \"Click here to download\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"href\", ctx_r1.downloadUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nexport let PdfToolsComponent = /*#__PURE__*/(() => {\n  class PdfToolsComponent {\n    http;\n    fileInputSingle;\n    fileInputMultiple;\n    files = {\n      'jpg-to-pdf': null,\n      'pdf-to-word': null,\n      'word-to-pdf': null\n    };\n    selectedFilesMultiple = [];\n    previewUrlMultiple = '';\n    downloadUrl = '';\n    errorMessage = '';\n    isDragging = false;\n    progress = 0;\n    uploadSubscription = null;\n    // Limits\n    isPremiumUserMerge = false;\n    freeUsesLimitMerge = 999999;\n    freeUsesRemainingMerge = this.freeUsesLimitMerge;\n    freeFileLimitMerge = 20;\n    constructor(http) {\n      this.http = http;\n    }\n    ngOnInit() {\n      this.freeUsesRemainingMerge = this.freeUsesLimitMerge;\n    }\n    ngOnDestroy() {\n      if (this.uploadSubscription) {\n        this.uploadSubscription.unsubscribe();\n      }\n    }\n    onDragOver(event, mode) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.isDragging = true;\n    }\n    onDragLeave(event, mode) {\n      event.preventDefault();\n      this.isDragging = false;\n    }\n    onDrop(event, mode) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.isDragging = false;\n      const file = event.dataTransfer?.files?.[0];\n      if (file) {\n        this.files[mode] = file;\n      }\n    }\n    onFileChange(event, mode) {\n      const input = event.target;\n      const file = input.files?.[0];\n      if (file) {\n        this.files[mode] = file;\n      }\n    }\n    // Called when user selects files using file input for merge-images-to-pdf\n    onFilesSelectedMultiple(event) {\n      const input = event.target;\n      if (input.files) {\n        this.selectedFilesMultiple = Array.from(input.files).filter(file => file.type.startsWith('image/'));\n        if (this.selectedFilesMultiple.length > 0) {\n          const reader = new FileReader();\n          reader.onload = e => {\n            this.previewUrlMultiple = e.target?.result || '';\n          };\n          reader.readAsDataURL(this.selectedFilesMultiple[0]);\n        } else {\n          this.previewUrlMultiple = '';\n        }\n        // Free user validation\n        if (!this.isPremiumUserMerge && this.selectedFilesMultiple.length > this.freeFileLimitMerge) {\n          this.errorMessage = `Free users can merge up to ${this.freeFileLimitMerge} images at once.`;\n        } else {\n          this.errorMessage = '';\n        }\n      }\n    }\n    // Called when user drops image files into the drop area\n    onFilesDroppedMultiple(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      const files = event.dataTransfer?.files;\n      if (files) {\n        this.selectedFilesMultiple = Array.from(files).filter(file => file.type.startsWith('image/'));\n        if (this.selectedFilesMultiple.length > 0) {\n          const reader = new FileReader();\n          reader.onload = e => {\n            this.previewUrlMultiple = e.target?.result || '';\n          };\n          reader.readAsDataURL(this.selectedFilesMultiple[0]);\n        } else {\n          this.previewUrlMultiple = '';\n        }\n        // Free user validation\n        if (!this.isPremiumUserMerge && this.selectedFilesMultiple.length > this.freeFileLimitMerge) {\n          this.errorMessage = `Free users can merge up to ${this.freeFileLimitMerge} images at once.`;\n        } else {\n          this.errorMessage = '';\n        }\n      }\n    }\n    preventDefaults(event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    convert(mode) {\n      const file = this.files[mode];\n      if (!file) {\n        this.errorMessage = 'Please select a file first.';\n        return;\n      }\n      let apiUrl = '';\n      let mimeType = '';\n      let fileName = '';\n      switch (mode) {\n        case 'jpg-to-pdf':\n          apiUrl = `${environment.apiUrl}/jpg-to-pdf`;\n          mimeType = 'application/pdf';\n          fileName = 'converted.pdf';\n          break;\n        case 'pdf-to-word':\n          apiUrl = `${environment.apiUrl}/pdf-to-word`;\n          mimeType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';\n          fileName = 'converted.docx';\n          break;\n        case 'word-to-pdf':\n          apiUrl = `${environment.apiUrl}/word-to-pdf`;\n          mimeType = 'application/pdf';\n          fileName = 'converted.pdf';\n          break;\n        case 'merge-images-to-pdf':\n          if (!this.selectedFilesMultiple.length) {\n            this.errorMessage = 'No images selected.';\n            return;\n          }\n          if (!this.isPremiumUserMerge && this.selectedFilesMultiple.length > this.freeFileLimitMerge) {\n            this.errorMessage = `Max ${this.freeFileLimitMerge} images allowed.`;\n            return;\n          }\n          apiUrl = `${environment.apiUrl}/merge-images-to-pdf`;\n          mimeType = 'application/pdf';\n          fileName = 'merged_images.pdf';\n          break;\n      }\n      const formData = new FormData();\n      if (mode === 'merge-images-to-pdf') {\n        this.selectedFilesMultiple.forEach(file => formData.append('files', file));\n      } else {\n        formData.append('file', file);\n      }\n      this.progress = 1;\n      this.uploadSubscription = this.http.post(apiUrl, formData, {\n        observe: 'events',\n        responseType: 'blob',\n        reportProgress: true\n      }).subscribe({\n        next: event => {\n          if (event.type === HttpEventType.UploadProgress && event.total) {\n            this.progress = Math.round(event.loaded / event.total * 100);\n          }\n          if (event.type === HttpEventType.Response && event.body) {\n            const blob = new Blob([event.body], {\n              type: mimeType\n            });\n            const url = URL.createObjectURL(blob);\n            this.downloadUrl = url;\n            const a = document.createElement('a');\n            a.href = url;\n            a.download = fileName;\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            URL.revokeObjectURL(url);\n          }\n        },\n        error: error => {\n          this.errorMessage = 'Upload failed.';\n          if (error.status === 0) {\n            this.errorMessage = 'Cannot connect to backend.';\n          }\n        },\n        complete: () => {\n          this.uploadSubscription?.unsubscribe();\n        }\n      });\n    }\n    static ɵfac = function PdfToolsComponent_Factory(t) {\n      return new (t || PdfToolsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PdfToolsComponent,\n      selectors: [[\"app-pdf-tools\"]],\n      viewQuery: function PdfToolsComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(_c1, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInputSingle = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInputMultiple = _t.first);\n        }\n      },\n      decls: 23,\n      vars: 7,\n      consts: [[\"fileInputSingle\", \"\"], [\"fileInputMultiple\", \"\"], [1, \"tool-container\"], [1, \"mode-select\"], [\"for\", \"mode\"], [\"id\", \"mode\", 3, \"ngModelChange\", \"change\", \"ngModel\"], [\"value\", \"jpg-to-pdf\"], [\"value\", \"pdf-to-word\"], [\"value\", \"word-to-pdf\"], [\"value\", \"merge-images-to-pdf\"], [\"class\", \"upload-area\", 3, \"ngClass\", \"dragover\", \"dragleave\", \"drop\", 4, \"ngIf\"], [\"class\", \"upload-area\", 3, \"dragover\", \"drop\", 4, \"ngIf\"], [1, \"action-area\"], [1, \"action-btn\", 3, \"click\", \"disabled\"], [\"class\", \"progress-bar\", 4, \"ngIf\"], [\"class\", \"error-message animate__animated animate__shakeX\", 4, \"ngIf\"], [\"class\", \"success-message animate__animated animate__fadeInUp\", 4, \"ngIf\"], [1, \"upload-area\", 3, \"dragover\", \"dragleave\", \"drop\", \"ngClass\"], [4, \"ngIf\"], [\"type\", \"file\", \"hidden\", \"\", 3, \"change\", \"accept\"], [1, \"upload-btn\", 3, \"click\"], [1, \"upload-area\", 3, \"dragover\", \"drop\"], [\"type\", \"file\", \"accept\", \"image/*\", \"multiple\", \"\", \"hidden\", \"\", 3, \"change\"], [\"class\", \"preview\", 4, \"ngIf\"], [1, \"preview\"], [\"alt\", \"Image Preview\", 3, \"src\"], [1, \"progress-bar\"], [1, \"progress\"], [1, \"error-message\", \"animate__animated\", \"animate__shakeX\"], [1, \"success-message\", \"animate__animated\", \"animate__fadeInUp\"], [\"target\", \"_blank\", \"download\", \"\", 3, \"href\"]],\n      template: function PdfToolsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 2)(1, \"h2\");\n          i0.ɵɵtext(2, \"\\uD83D\\uDCC4 PDF Conversion Tools\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\", 4);\n          i0.ɵɵtext(5, \"Select Tool:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"select\", 5);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function PdfToolsComponent_Template_select_ngModelChange_6_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.mode, $event) || (ctx.mode = $event);\n            return $event;\n          });\n          i0.ɵɵlistener(\"change\", function PdfToolsComponent_Template_select_change_6_listener() {\n            return ctx.reset();\n          });\n          i0.ɵɵelementStart(7, \"option\", 6);\n          i0.ɵɵtext(8, \"JPG/PNG to PDF\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"option\", 7);\n          i0.ɵɵtext(10, \"PDF to Word\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"option\", 8);\n          i0.ɵɵtext(12, \"Word to PDF\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"option\", 9);\n          i0.ɵɵtext(14, \"Merge Images to PDF\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(15, PdfToolsComponent_div_15_Template, 7, 6, \"div\", 10)(16, PdfToolsComponent_div_16_Template, 8, 3, \"div\", 11);\n          i0.ɵɵelementStart(17, \"div\", 12)(18, \"button\", 13);\n          i0.ɵɵlistener(\"click\", function PdfToolsComponent_Template_button_click_18_listener() {\n            return ctx.mode === \"merge-images-to-pdf\" ? ctx.uploadMultipleFiles() : ctx.uploadSingleFile();\n          });\n          i0.ɵɵtext(19, \" Convert Now \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(20, PdfToolsComponent_div_20_Template, 2, 2, \"div\", 14)(21, PdfToolsComponent_div_21_Template, 2, 1, \"div\", 15)(22, PdfToolsComponent_div_22_Template, 5, 1, \"div\", 16);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.mode);\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngIf\", ctx.mode !== \"merge-images-to-pdf\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.mode === \"merge-images-to-pdf\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.mode !== \"merge-images-to-pdf\" && !ctx.selectedFileSingle || ctx.mode === \"merge-images-to-pdf\" && ctx.selectedFilesMultiple.length === 0);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.progress > 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.downloadUrl);\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n      styles: [\"@import\\\"https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css\\\";.tool-container[_ngcontent-%COMP%]{max-width:600px;margin:30px auto;padding:20px;background-color:#fff;border-radius:16px;box-shadow:0 6px 16px #0000001a;font-family:Segoe UI,sans-serif}.tool-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{text-align:center;margin-bottom:25px;color:#2c3e50}.mode-select[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;margin-bottom:25px}.mode-select[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{margin-right:10px;font-weight:700}.mode-select[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{padding:6px 12px;border-radius:6px;border:1px solid #ccc}.upload-area[_ngcontent-%COMP%]{border:2px dashed #aaa;border-radius:10px;padding:30px;text-align:center;background-color:#f9f9f9;transition:all .3s ease;margin-bottom:20px}.upload-area.dragging[_ngcontent-%COMP%]{border-color:#3498db;background-color:#ecf7ff}.upload-btn[_ngcontent-%COMP%]{margin-top:10px;padding:8px 16px;background-color:#3498db;color:#fff;border:none;border-radius:6px;cursor:pointer;transition:background-color .3s ease}.upload-btn[_ngcontent-%COMP%]:hover{background-color:#2980b9}.action-btn[_ngcontent-%COMP%]{width:100%;padding:12px;background-color:#27ae60;color:#fff;border:none;border-radius:8px;font-size:16px;font-weight:700;cursor:pointer;transition:background .3s ease}.action-btn[_ngcontent-%COMP%]:hover:enabled{background-color:#1e8449}.action-btn[_ngcontent-%COMP%]:disabled{background-color:#95a5a6;cursor:not-allowed}.progress-bar[_ngcontent-%COMP%]{margin-top:20px;background-color:#eee;border-radius:10px;height:20px;overflow:hidden}.progress[_ngcontent-%COMP%]{height:100%;background-color:#3498db;transition:width .4s ease}.error-message[_ngcontent-%COMP%]{color:#e74c3c;font-weight:700;margin-top:20px;text-align:center}.success-message[_ngcontent-%COMP%]{color:#2ecc71;font-weight:700;margin-top:20px;text-align:center}.preview[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100px;height:auto;margin-top:15px;border-radius:6px;box-shadow:0 0 6px #0000001a}\"]\n    });\n  }\n  return PdfToolsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}