{"ast":null,"code":"let p = process || {},\n  argv = p.argv || [],\n  env = p.env || {};\nlet isColorSupported = !(!!env.NO_COLOR || argv.includes(\"--no-color\")) && (!!env.FORCE_COLOR || argv.includes(\"--color\") || p.platform === \"win32\" || (p.stdout || {}).isTTY && env.TERM !== \"dumb\" || !!env.CI);\nlet formatter = (open, close, replace = open) => input => {\n  let string = \"\" + input,\n    index = string.indexOf(close, open.length);\n  return ~index ? open + replaceClose(string, close, replace, index) + close : open + string + close;\n};\nlet replaceClose = (string, close, replace, index) => {\n  let result = \"\",\n    cursor = 0;\n  do {\n    result += string.substring(cursor, index) + replace;\n    cursor = index + close.length;\n    index = string.indexOf(close, cursor);\n  } while (~index);\n  return result + string.substring(cursor);\n};\nlet createColors = (enabled = isColorSupported) => {\n  let f = enabled ? formatter : () => String;\n  return {\n    isColorSupported: enabled,\n    reset: f(\"\\x1b[0m\", \"\\x1b[0m\"),\n    bold: f(\"\\x1b[1m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[1m\"),\n    dim: f(\"\\x1b[2m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[2m\"),\n    italic: f(\"\\x1b[3m\", \"\\x1b[23m\"),\n    underline: f(\"\\x1b[4m\", \"\\x1b[24m\"),\n    inverse: f(\"\\x1b[7m\", \"\\x1b[27m\"),\n    hidden: f(\"\\x1b[8m\", \"\\x1b[28m\"),\n    strikethrough: f(\"\\x1b[9m\", \"\\x1b[29m\"),\n    black: f(\"\\x1b[30m\", \"\\x1b[39m\"),\n    red: f(\"\\x1b[31m\", \"\\x1b[39m\"),\n    green: f(\"\\x1b[32m\", \"\\x1b[39m\"),\n    yellow: f(\"\\x1b[33m\", \"\\x1b[39m\"),\n    blue: f(\"\\x1b[34m\", \"\\x1b[39m\"),\n    magenta: f(\"\\x1b[35m\", \"\\x1b[39m\"),\n    cyan: f(\"\\x1b[36m\", \"\\x1b[39m\"),\n    white: f(\"\\x1b[37m\", \"\\x1b[39m\"),\n    gray: f(\"\\x1b[90m\", \"\\x1b[39m\"),\n    bgBlack: f(\"\\x1b[40m\", \"\\x1b[49m\"),\n    bgRed: f(\"\\x1b[41m\", \"\\x1b[49m\"),\n    bgGreen: f(\"\\x1b[42m\", \"\\x1b[49m\"),\n    bgYellow: f(\"\\x1b[43m\", \"\\x1b[49m\"),\n    bgBlue: f(\"\\x1b[44m\", \"\\x1b[49m\"),\n    bgMagenta: f(\"\\x1b[45m\", \"\\x1b[49m\"),\n    bgCyan: f(\"\\x1b[46m\", \"\\x1b[49m\"),\n    bgWhite: f(\"\\x1b[47m\", \"\\x1b[49m\"),\n    blackBright: f(\"\\x1b[90m\", \"\\x1b[39m\"),\n    redBright: f(\"\\x1b[91m\", \"\\x1b[39m\"),\n    greenBright: f(\"\\x1b[92m\", \"\\x1b[39m\"),\n    yellowBright: f(\"\\x1b[93m\", \"\\x1b[39m\"),\n    blueBright: f(\"\\x1b[94m\", \"\\x1b[39m\"),\n    magentaBright: f(\"\\x1b[95m\", \"\\x1b[39m\"),\n    cyanBright: f(\"\\x1b[96m\", \"\\x1b[39m\"),\n    whiteBright: f(\"\\x1b[97m\", \"\\x1b[39m\"),\n    bgBlackBright: f(\"\\x1b[100m\", \"\\x1b[49m\"),\n    bgRedBright: f(\"\\x1b[101m\", \"\\x1b[49m\"),\n    bgGreenBright: f(\"\\x1b[102m\", \"\\x1b[49m\"),\n    bgYellowBright: f(\"\\x1b[103m\", \"\\x1b[49m\"),\n    bgBlueBright: f(\"\\x1b[104m\", \"\\x1b[49m\"),\n    bgMagentaBright: f(\"\\x1b[105m\", \"\\x1b[49m\"),\n    bgCyanBright: f(\"\\x1b[106m\", \"\\x1b[49m\"),\n    bgWhiteBright: f(\"\\x1b[107m\", \"\\x1b[49m\")\n  };\n};\nmodule.exports = createColors();\nmodule.exports.createColors = createColors;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}