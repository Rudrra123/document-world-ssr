{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"fileInput\"];\nfunction MergeImagesToPdfComponent_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 15);\n    i0.ɵɵelementStart(2, \"p\", 16);\n    i0.ɵɵtext(3, \"Click to browse or drag & drop images here\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 17);\n    i0.ɵɵtext(5, \"Supports JPG, PNG, GIF, BMP\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction MergeImagesToPdfComponent_ng_container_12_li_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 23);\n    i0.ɵɵelement(1, \"i\", 24);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const file_r5 = ctx.$implicit;\n    const i_r6 = ctx.index;\n    i0.ɵɵstyleProp(\"--animation-delay\", i_r6 * 0.05 + \"s\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", file_r5.name, \" \");\n  }\n}\nfunction MergeImagesToPdfComponent_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 18);\n    i0.ɵɵelement(2, \"i\", 19);\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function MergeImagesToPdfComponent_ng_container_12_Template_button_click_5_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r3 = i0.ɵɵnextContext();\n      $event.stopPropagation();\n      return i0.ɵɵresetView(ctx_r3.reset());\n    });\n    i0.ɵɵtext(6, \"Clear Selection\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 21)(8, \"p\");\n    i0.ɵɵtext(9, \"Selected Files:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"ul\");\n    i0.ɵɵtemplate(11, MergeImagesToPdfComponent_ng_container_12_li_11_Template, 3, 3, \"li\", 22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r3.selectedFiles.length, \" image(s) selected\");\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.selectedFiles);\n  }\n}\nfunction MergeImagesToPdfComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25)(1, \"h3\");\n    i0.ɵɵtext(2, \"First Image Preview:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 26);\n    i0.ɵɵelement(4, \"img\", 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 28);\n    i0.ɵɵtext(6);\n    i0.ɵɵelement(7, \"br\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"src\", ctx_r3.previewUrl, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r3.selectedFiles[0].name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", (ctx_r3.selectedFiles[0].size / 1024).toFixed(1), \" KB\");\n  }\n}\nfunction MergeImagesToPdfComponent_div_14_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \" You can merge \");\n    i0.ɵɵelementStart(2, \"span\", 32);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" more set(s) of images today. \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r3.freeUsesRemaining);\n  }\n}\nfunction MergeImagesToPdfComponent_div_14_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 33);\n    i0.ɵɵtext(1, \" Daily free limit reached! \");\n    i0.ɵɵelementStart(2, \"a\", 34);\n    i0.ɵɵtext(3, \"Upgrade to Premium\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" for unlimited merges. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MergeImagesToPdfComponent_div_14_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 35);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" Free users can merge up to \", ctx_r3.freeFileLimit, \" files. \");\n  }\n}\nfunction MergeImagesToPdfComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtemplate(1, MergeImagesToPdfComponent_div_14_p_1_Template, 5, 1, \"p\", 8)(2, MergeImagesToPdfComponent_div_14_p_2_Template, 5, 0, \"p\", 30)(3, MergeImagesToPdfComponent_div_14_p_3_Template, 2, 1, \"p\", 31);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.freeUsesRemaining > 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.freeUsesRemaining <= 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.selectedFiles.length > ctx_r3.freeFileLimit && !ctx_r3.isPremiumUser);\n  }\n}\nfunction MergeImagesToPdfComponent_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\uD83D\\uDE80 Merge to PDF\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MergeImagesToPdfComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"Merging... \", ctx_r3.progress, \"%\");\n  }\n}\nfunction MergeImagesToPdfComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵelement(1, \"div\", 37);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"width\", ctx_r3.progress, \"%\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r3.progress, \"% Uploading...\");\n  }\n}\nfunction MergeImagesToPdfComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 38)(1, \"p\", 39);\n    i0.ɵɵtext(2, \"\\u2705 PDF created successfully!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"a\", 40);\n    i0.ɵɵtext(4, \"\\u2B07 Download PDF\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 41);\n    i0.ɵɵlistener(\"click\", function MergeImagesToPdfComponent_div_19_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.reset());\n    });\n    i0.ɵɵtext(6, \"Merge Another\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"href\", ctx_r3.downloadUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction MergeImagesToPdfComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 42)(1, \"p\", 43);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 41);\n    i0.ɵɵlistener(\"click\", function MergeImagesToPdfComponent_div_20_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.reset());\n    });\n    i0.ɵɵtext(4, \"Try Again\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\u274C Error: \", ctx_r3.errorMessage, \"\");\n  }\n}\nexport let MergeImagesToPdfComponent = /*#__PURE__*/(() => {\n  class MergeImagesToPdfComponent {\n    http;\n    selectedFiles = [];\n    downloadUrl = '';\n    progress = 0;\n    errorMessage = '';\n    uploadSubscription = null;\n    fileInput;\n    // --- MODIFIED PROPERTIES for Usage Control ---\n    isPremiumUser = false; // Still can be used if you introduce premium features later\n    freeUsesLimit = 999999; // Set to a very high number to effectively remove the daily limit\n    freeUsesRemaining = this.freeUsesLimit; // Will always be high\n    freeFileLimit = 20; // Max files for free users per merge (kept at 20 as previously set)\n    previewUrl = ''; // Property for image preview\n    constructor(http) {\n      this.http = http;\n    }\n    ngOnInit() {\n      // We can still call checkUserStatus if you intend to use `isPremiumUser` for other features\n      this.checkUserStatus();\n      // No need to load daily usage from localStorage if there's effectively no daily limit\n      // However, keeping the method for future if the limit is reintroduced.\n      // We will just ensure freeUsesRemaining is always high.\n      this.freeUsesRemaining = this.freeUsesLimit; // Ensure it's always set to the high limit on init\n    }\n    checkUserStatus() {\n      // This can still be used for other premium features if they exist (e.g., HEIC support)\n      this.isPremiumUser = false; // Hardcoded to false for now\n    }\n    // This method's logic becomes less critical if freeUsesLimit is very high,\n    // but it's kept for structural integrity or future reintroduction of a hard limit.\n    loadDailyUsage() {\n      // If you want a REAL unlimited free tier, you can entirely comment out the localStorage logic.\n      // For now, we'll just ensure freeUsesRemaining is always high.\n      this.freeUsesRemaining = this.freeUsesLimit;\n    }\n    // This method's logic becomes less critical if freeUsesLimit is very high.\n    // It will still increment/decrement, but it won't hit a visible limit soon.\n    incrementDailyUsage() {\n      if (!this.isPremiumUser) {\n        // If you truly want unlimited merges for free, you can comment out the localStorage update\n        // and the decrement of freeUsesRemaining.\n        // For now, it will just decrement from a very large number.\n        const today = new Date().toDateString();\n        const storedUsage = localStorage.getItem('pdfMergeUsage');\n        let usageData = {\n          date: today,\n          count: 0\n        };\n        if (storedUsage) {\n          usageData = JSON.parse(storedUsage);\n        }\n        usageData.count++;\n        localStorage.setItem('pdfMergeUsage', JSON.stringify(usageData));\n        this.freeUsesRemaining--; // Will decrement from 999999, effectively unlimited\n      }\n    }\n    goToPricing() {\n      console.log('Navigating to pricing page...');\n      // Example using Angular Router: this.router.navigate(['/pricing']);\n    }\n    onFilesSelected(event) {\n      const input = event.target;\n      if (input.files) {\n        this.selectedFiles = Array.from(input.files);\n        this.resetStatesExceptFiles(); // Reset all states\n        // Set preview URL for the first selected image\n        if (this.selectedFiles.length > 0) {\n          const firstFile = this.selectedFiles[0];\n          const reader = new FileReader();\n          reader.onload = e => {\n            this.previewUrl = e.target.result;\n          };\n          reader.readAsDataURL(firstFile);\n        } else {\n          this.previewUrl = ''; // Clear preview if no files\n        }\n        // Check file count limit for free users (this limit remains)\n        if (!this.isPremiumUser && this.selectedFiles.length > this.freeFileLimit) {\n          this.errorMessage = `Free users can merge up to ${this.freeFileLimit} images at once.`; // Removed premium upgrade suggestion\n        } else {\n          this.errorMessage = ''; // Clear any previous error\n        }\n      }\n    }\n    onFilesDropped(event) {\n      event.preventDefault(); // Prevent default browser behavior (opening file)\n      event.stopPropagation();\n      const files = event.dataTransfer?.files;\n      if (files && files.length > 0) {\n        this.selectedFiles = Array.from(files);\n        this.resetStatesExceptFiles(); // Reset all states\n        // Set preview URL for the first selected image\n        if (this.selectedFiles.length > 0) {\n          const firstFile = this.selectedFiles[0];\n          const reader = new FileReader();\n          reader.onload = e => {\n            this.previewUrl = e.target.result;\n          };\n          reader.readAsDataURL(firstFile);\n        } else {\n          this.previewUrl = ''; // Clear preview if no files\n        }\n        // Check file count limit for free users (this limit remains)\n        if (!this.isPremiumUser && this.selectedFiles.length > this.freeFileLimit) {\n          this.errorMessage = `Free users can merge up to ${this.freeFileLimit} images at once.`; // Removed premium upgrade suggestion\n        } else {\n          this.errorMessage = '';\n        }\n      }\n    }\n    preventDefaults(event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    upload() {\n      if (!this.selectedFiles.length) {\n        this.errorMessage = 'Please select images to merge.';\n        return;\n      }\n      // This check will now effectively never trigger for free users due to high freeUsesLimit\n      if (!this.isPremiumUser && this.freeUsesRemaining <= 0) {\n        this.errorMessage = 'Daily free merge limit reached! Please upgrade to Premium for unlimited use.';\n        return;\n      }\n      // This check for file count PER MERGE remains active\n      if (!this.isPremiumUser && this.selectedFiles.length > this.freeFileLimit) {\n        this.errorMessage = `Free users can merge up to ${this.freeFileLimit} images at once.`; // Removed premium upgrade suggestion\n        return;\n      }\n      this.resetStatesExceptFiles(); // Reset for a new upload\n      const formData = new FormData();\n      this.selectedFiles.forEach(file => formData.append('files', file));\n      this.uploadSubscription = this.http.post('http://127.0.0.1:8000/api/merge-images-to-pdf', formData, {\n        responseType: 'blob',\n        reportProgress: true,\n        observe: 'events'\n      }).subscribe({\n        next: event => {\n          if (event.type === HttpEventType.UploadProgress && event.total) {\n            this.progress = Math.round(event.loaded / event.total * 100);\n          }\n          if (event.type === HttpEventType.Response) {\n            if (event.body) {\n              const blob = new Blob([event.body], {\n                type: 'application/pdf'\n              });\n              const url = URL.createObjectURL(blob);\n              this.downloadUrl = url;\n              this.progress = 0; // Upload complete\n              // Programmatically trigger download\n              const link = document.createElement('a');\n              link.href = url;\n              link.download = 'merged.pdf';\n              document.body.appendChild(link);\n              link.click();\n              document.body.removeChild(link);\n              // Clean up the object URL\n              URL.revokeObjectURL(url);\n              // Increment usage upon successful merge (still happens, but from a high number)\n              this.incrementDailyUsage();\n            } else {\n              this.errorMessage = 'PDF creation failed: Empty response from server.';\n              this.progress = 0;\n            }\n          }\n        },\n        error: error => {\n          console.error('Upload error:', error);\n          this.progress = 0; // Reset progress on error\n          if (error.error instanceof ErrorEvent) {\n            // Client-side error\n            this.errorMessage = `An error occurred: ${error.error.message}`;\n          } else {\n            // Server-side error\n            if (error.error instanceof Blob && error.error.type === 'application/json') {\n              const reader = new FileReader();\n              reader.onload = () => {\n                try {\n                  const errorBody = JSON.parse(reader.result);\n                  this.errorMessage = errorBody.detail || `Server responded with ${error.status}: ${error.statusText || 'Unknown error'}.`;\n                } catch (e) {\n                  this.errorMessage = `Server responded with ${error.status}: ${error.statusText || 'Unknown error'}.`;\n                }\n              };\n              reader.readAsText(error.error);\n            } else {\n              this.errorMessage = `Server responded with ${error.status}: ${error.statusText || 'Unknown error'}.`;\n            }\n            if (error.status === 0) {\n              this.errorMessage = 'Could not connect to the server. Please ensure the backend is running.';\n            }\n            // Handle specific backend errors related to limits (if your backend still sends them)\n            if (error.status === 403) {\n              this.errorMessage = this.errorMessage || 'You have reached your daily merge limit or exceeded file count for the free plan.';\n            }\n          }\n        },\n        complete: () => {\n          if (this.uploadSubscription) {\n            this.uploadSubscription.unsubscribe();\n            this.uploadSubscription = null;\n          }\n        }\n      });\n    }\n    reset() {\n      if (this.uploadSubscription) {\n        this.uploadSubscription.unsubscribe();\n        this.uploadSubscription = null;\n      }\n      this.selectedFiles = []; // Clear files\n      this.resetStatesExceptFiles(); // Clear other states\n      if (this.fileInput) {\n        this.fileInput.nativeElement.value = '';\n      }\n      // No need to load daily usage again if it's effectively unlimited\n      this.freeUsesRemaining = this.freeUsesLimit; // Reset to a very high number\n    }\n    // Helper method to reset common states without touching selectedFiles immediately\n    resetStatesExceptFiles() {\n      this.downloadUrl = '';\n      this.progress = 0;\n      this.errorMessage = '';\n      this.previewUrl = ''; // Clear preview\n    }\n    ngOnDestroy() {\n      if (this.uploadSubscription) {\n        this.uploadSubscription.unsubscribe();\n      }\n    }\n    static ɵfac = function MergeImagesToPdfComponent_Factory(t) {\n      return new (t || MergeImagesToPdfComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: MergeImagesToPdfComponent,\n      selectors: [[\"app-merge-images-to-pdf\"]],\n      viewQuery: function MergeImagesToPdfComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInput = _t.first);\n        }\n      },\n      decls: 21,\n      vars: 12,\n      consts: [[\"fileInput\", \"\"], [1, \"merge-images-to-pdf-card\", \"animate__animated\", \"animate__fadeIn\"], [1, \"card-header\", \"animate__animated\", \"animate__fadeInDown\"], [1, \"sub-heading\"], [1, \"card-content\"], [1, \"upload-area\", \"animate__animated\", \"animate__zoomIn\", 3, \"dragover\", \"drop\"], [\"type\", \"file\", \"accept\", \"image/*\", \"multiple\", \"\", \"hidden\", \"\", 3, \"change\"], [1, \"upload-prompt\", 3, \"click\"], [4, \"ngIf\"], [\"class\", \"image-preview-section animate__animated animate__fadeIn\", 4, \"ngIf\"], [\"class\", \"usage-limit-info animate__animated animate__fadeIn\", 4, \"ngIf\"], [1, \"convert-btn\", \"animate__animated\", \"animate__pulse\", 3, \"click\", \"disabled\"], [\"class\", \"progress-container animate__animated animate__fadeIn\", 4, \"ngIf\"], [\"class\", \"download-section animate__animated animate__zoomIn\", 4, \"ngIf\"], [\"class\", \"error-section animate__animated animate__shakeX\", 4, \"ngIf\"], [1, \"fas\", \"fa-cloud-upload-alt\", \"upload-icon\", \"animate__animated\", \"animate__bounceIn\"], [1, \"upload-text\"], [1, \"file-types\"], [1, \"selected-files-summary\", \"animate__animated\", \"animate__fadeIn\"], [1, \"fas\", \"fa-check-circle\", \"success-icon\", \"animate__animated\", \"animate__bounceIn\"], [\"type\", \"button\", 1, \"clear-selection-btn\", \"animate__animated\", \"animate__shakeX\", 3, \"click\"], [1, \"selected-file-list\", \"animate__animated\", \"animate__fadeInUp\"], [\"class\", \"animate__animated animate__slideInLeft\", 3, \"--animation-delay\", 4, \"ngFor\", \"ngForOf\"], [1, \"animate__animated\", \"animate__slideInLeft\"], [1, \"fas\", \"fa-file-image\", \"file-icon\"], [1, \"image-preview-section\", \"animate__animated\", \"animate__fadeIn\"], [1, \"image-preview-wrapper\"], [\"alt\", \"Selected Image Preview\", 1, \"preview-img\", 3, \"src\"], [1, \"preview-caption\"], [1, \"usage-limit-info\", \"animate__animated\", \"animate__fadeIn\"], [\"class\", \"limit-reached-message\", 4, \"ngIf\"], [\"class\", \"file-count-warning\", 4, \"ngIf\"], [1, \"highlight-count\"], [1, \"limit-reached-message\"], [\"href\", \"/pricing\"], [1, \"file-count-warning\"], [1, \"progress-container\", \"animate__animated\", \"animate__fadeIn\"], [1, \"progress-bar\"], [1, \"download-section\", \"animate__animated\", \"animate__zoomIn\"], [1, \"success-message\"], [\"download\", \"merged.pdf\", 1, \"download-link\", \"animate__animated\", \"animate__heartBeat\", 3, \"href\"], [\"type\", \"button\", 1, \"reset-btn\", \"animate__animated\", \"animate__fadeIn\", 3, \"click\"], [1, \"error-section\", \"animate__animated\", \"animate__shakeX\"], [1, \"error-message\"]],\n      template: function MergeImagesToPdfComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"h2\");\n          i0.ɵɵtext(3, \"\\uD83C\\uDFB4 Merge Images to PDF\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"p\", 3);\n          i0.ɵɵtext(5, \"Select multiple images and merge them into a single PDF document.\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"div\", 4)(7, \"label\", 5);\n          i0.ɵɵlistener(\"dragover\", function MergeImagesToPdfComponent_Template_label_dragover_7_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.preventDefaults($event));\n          })(\"drop\", function MergeImagesToPdfComponent_Template_label_drop_7_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onFilesDropped($event));\n          });\n          i0.ɵɵelementStart(8, \"input\", 6, 0);\n          i0.ɵɵlistener(\"change\", function MergeImagesToPdfComponent_Template_input_change_8_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onFilesSelected($event));\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\", 7);\n          i0.ɵɵlistener(\"click\", function MergeImagesToPdfComponent_Template_div_click_10_listener() {\n            i0.ɵɵrestoreView(_r1);\n            const fileInput_r2 = i0.ɵɵreference(9);\n            return i0.ɵɵresetView(fileInput_r2.click());\n          });\n          i0.ɵɵtemplate(11, MergeImagesToPdfComponent_ng_container_11_Template, 6, 0, \"ng-container\", 8)(12, MergeImagesToPdfComponent_ng_container_12_Template, 12, 2, \"ng-container\", 8);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(13, MergeImagesToPdfComponent_div_13_Template, 9, 3, \"div\", 9)(14, MergeImagesToPdfComponent_div_14_Template, 4, 3, \"div\", 10);\n          i0.ɵɵelementStart(15, \"button\", 11);\n          i0.ɵɵlistener(\"click\", function MergeImagesToPdfComponent_Template_button_click_15_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.upload());\n          });\n          i0.ɵɵtemplate(16, MergeImagesToPdfComponent_span_16_Template, 2, 0, \"span\", 8)(17, MergeImagesToPdfComponent_span_17_Template, 2, 1, \"span\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(18, MergeImagesToPdfComponent_div_18_Template, 4, 3, \"div\", 12)(19, MergeImagesToPdfComponent_div_19_Template, 7, 1, \"div\", 13)(20, MergeImagesToPdfComponent_div_20_Template, 5, 1, \"div\", 14);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵclassProp(\"has-files\", ctx.selectedFiles.length > 0);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", !ctx.selectedFiles.length);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedFiles.length);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedFiles.length > 0 && ctx.previewUrl);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.isPremiumUser && ctx.selectedFiles.length > 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", !ctx.selectedFiles.length || ctx.progress > 0 || !ctx.isPremiumUser && ctx.freeUsesRemaining <= 0 || !ctx.isPremiumUser && ctx.selectedFiles.length > ctx.freeFileLimit);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.progress === 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.progress > 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.progress > 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.downloadUrl);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf],\n      styles: [\"@import\\\"https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700;800&display=swap\\\";@import\\\"https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css\\\";[_ngcontent-%COMP%]:root{--primary-color: #3498db;--primary-dark: #2980b9;--accent-color: #2ecc71;--accent-dark: #27ae60;--error-color: #e74c3c;--error-dark: #c0392b;--text-color: #34495e;--light-text: #7f8c8d;--bg-light: #f0f4f8;--bg-medium: #d9e2ec;--card-bg: #ffffff;--border-color: #bdc3c7;--shadow-light: rgba(0, 0, 0, .08);--shadow-medium: rgba(0, 0, 0, .15);--shadow-strong: rgba(0, 0, 0, .25)}html[_ngcontent-%COMP%], body[_ngcontent-%COMP%]{margin:0;padding:0;width:100%;height:100%;overflow:hidden}body[_ngcontent-%COMP%]{font-family:Poppins,sans-serif;background:linear-gradient(135deg,var(--bg-light),var(--bg-medium));display:flex;justify-content:center;align-items:center;min-height:100vh;padding:20px;box-sizing:border-box;background-size:200% 200%;animation:_ngcontent-%COMP%_gradientShift 10s ease infinite;overflow-y:auto;overflow-x:hidden}@keyframes _ngcontent-%COMP%_gradientShift{0%{background-position:0% 50%}50%{background-position:100% 50%}to{background-position:0% 50%}}.merge-images-to-pdf-card[_ngcontent-%COMP%]{background:var(--card-bg);border-radius:20px;box-shadow:0 20px 40px var(--shadow-medium);padding:50px;max-width:650px;width:100%;text-align:center;position:relative;overflow:hidden;animation-duration:.8s;transition:all .3s ease-in-out}.merge-images-to-pdf-card[_ngcontent-%COMP%]:before{content:\\\"\\\";position:absolute;top:-50%;left:-50%;width:200%;height:200%;background:radial-gradient(circle at 10% 20%,#ffffff0d,#fff0 70%),radial-gradient(circle at 90% 80%,#ffffff0d,#fff0 70%);opacity:.8;animation:_ngcontent-%COMP%_rotateBg 20s linear infinite;z-index:0}@keyframes _ngcontent-%COMP%_rotateBg{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.merge-images-to-pdf-card[_ngcontent-%COMP%]:hover{transform:translateY(-5px);box-shadow:0 25px 50px var(--shadow-strong)}.card-header[_ngcontent-%COMP%]{margin-bottom:40px;position:relative;z-index:1}.card-header[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:2.8em;color:var(--text-color);margin-bottom:12px;font-weight:800;display:flex;align-items:center;justify-content:center;text-shadow:1px 1px 3px rgba(0,0,0,.05)}.card-header[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]   .fas[_ngcontent-%COMP%]{margin-right:18px;color:var(--primary-color);font-size:1.2em}.sub-heading[_ngcontent-%COMP%]{font-size:1.2em;color:var(--light-text);margin-bottom:25px;font-weight:400}.upload-area[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;border:3px dashed var(--border-color);border-radius:15px;padding:50px 30px;cursor:pointer;transition:all .4s ease-in-out;margin-bottom:35px;position:relative;overflow:hidden;background-color:#fcfdff}.upload-area[_ngcontent-%COMP%]:hover{border-color:var(--primary-color);background-color:#eef7ff;box-shadow:0 8px 20px var(--shadow-light)}.upload-area.has-files[_ngcontent-%COMP%]{border-style:solid;border-color:var(--accent-color);background-color:#eafcf1;box-shadow:0 8px 20px #2ecc711a}.upload-prompt[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;width:100%}.upload-icon[_ngcontent-%COMP%]{font-size:4em;color:var(--primary-color);margin-bottom:20px;animation-duration:1.5s;animation-iteration-count:1;animation-fill-mode:forwards}.upload-area.has-files[_ngcontent-%COMP%]   .upload-icon[_ngcontent-%COMP%]{display:none}.upload-text[_ngcontent-%COMP%]{font-size:1.3em;color:var(--text-color);font-weight:600;margin-bottom:15px}.file-types[_ngcontent-%COMP%]{font-size:1em;color:var(--light-text);font-weight:300}.selected-files-summary[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;padding:15px 0}.success-icon[_ngcontent-%COMP%]{font-size:3.5em;color:var(--accent-color);margin-bottom:15px;animation-duration:.8s}.selected-files-summary[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:1.4em;color:var(--text-color);font-weight:700;margin:0}.clear-selection-btn[_ngcontent-%COMP%]{background:none;border:2px solid var(--error-color);color:var(--error-color);padding:10px 20px;border-radius:10px;cursor:pointer;font-size:1em;margin-top:20px;transition:all .3s ease;animation-duration:1s;font-weight:600}.clear-selection-btn[_ngcontent-%COMP%]:hover{background-color:var(--error-color);color:#fff;transform:translateY(-3px);box-shadow:0 6px 12px #e74c3c4d}.selected-file-list[_ngcontent-%COMP%]{margin-top:30px;max-height:200px;overflow-y:auto;border-top:1px solid #eee;padding-top:20px;text-align:left;width:100%}.selected-file-list[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-weight:600;color:var(--text-color);margin-bottom:15px;font-size:1.1em}.selected-file-list[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{list-style:none;padding:0;margin:0}.selected-file-list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{background:#f5f8fa;padding:12px 20px;border-radius:10px;margin-bottom:10px;display:flex;align-items:center;font-size:1em;color:var(--text-color);animation-duration:.5s;transform:translate(0);animation-delay:var(--animation-delay, 0s);box-shadow:0 2px 5px #0000000d;transition:all .2s ease-in-out}.selected-file-list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:hover{background-color:#e9f0f5;transform:translate(5px);box-shadow:0 4px 8px #0000001a}.selected-file-list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   .file-icon[_ngcontent-%COMP%]{margin-right:12px;color:var(--primary-color);font-size:1.1em}.image-preview-section[_ngcontent-%COMP%]{margin-top:30px;padding:25px;background-color:#fefefe;border:1px solid #e0e0e0;border-radius:15px;animation-duration:.8s;text-align:center;box-shadow:0 5px 15px var(--shadow-light)}.image-preview-section[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{color:var(--text-color);font-size:1.3em;margin-bottom:20px;font-weight:700}.image-preview-wrapper[_ngcontent-%COMP%]{max-width:100%;max-height:280px;overflow:hidden;border-radius:10px;box-shadow:0 6px 15px #0000001a;margin:0 auto 20px;display:flex;justify-content:center;align-items:center;background-color:#f2f4f6;border:1px solid #dcdfe4}.preview-img[_ngcontent-%COMP%]{width:100%;height:auto;display:block;object-fit:contain}.preview-caption[_ngcontent-%COMP%]{font-size:1em;color:var(--light-text);font-weight:400;margin:0}.usage-limit-info[_ngcontent-%COMP%]{background-color:#fef8e7;border:1px solid #ffeb8a;border-radius:10px;padding:18px;margin-top:30px;font-size:1em;color:var(--text-color);animation-duration:.8s;box-shadow:0 3px 10px #ffc1071a}.usage-limit-info[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0;line-height:1.6}.usage-limit-info[_ngcontent-%COMP%]   .highlight-count[_ngcontent-%COMP%]{font-weight:800;color:var(--accent-color)}.usage-limit-info[_ngcontent-%COMP%]   .limit-reached-message[_ngcontent-%COMP%]{color:var(--error-dark);font-weight:700}.usage-limit-info[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:var(--primary-dark);text-decoration:none;font-weight:700;transition:color .2s ease}.usage-limit-info[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{text-decoration:underline;color:var(--primary-color)}.file-count-warning[_ngcontent-%COMP%]{color:#e6b200;font-weight:700;margin-top:12px}.convert-btn[_ngcontent-%COMP%]{background:linear-gradient(45deg,var(--primary-color),var(--primary-dark));color:#fff;border:none;padding:18px 35px;border-radius:12px;font-size:1.5em;font-weight:700;cursor:pointer;transition:all .3s ease;width:100%;margin-top:40px;box-shadow:0 10px 25px #2980b966;animation-duration:1.8s;animation-iteration-count:infinite;position:relative;overflow:hidden}.convert-btn[_ngcontent-%COMP%]:before{content:\\\"\\\";position:absolute;top:0;left:-100%;width:100%;height:100%;background:#fff3;transform:skew(-30deg);transition:all .5s ease}.convert-btn[_ngcontent-%COMP%]:hover:not([disabled]):before{left:100%}.convert-btn[_ngcontent-%COMP%]:hover:not([disabled]){transform:translateY(-5px);box-shadow:0 15px 30px #2980b98c;background:linear-gradient(45deg,var(--primary-dark),var(--primary-color))}.convert-btn[_ngcontent-%COMP%]:active:not([disabled]){transform:translateY(0);box-shadow:0 8px 15px #2980b94d}.convert-btn[disabled][_ngcontent-%COMP%]{background:#b0c2d0;cursor:not-allowed;opacity:.6;box-shadow:none;animation:none}.progress-container[_ngcontent-%COMP%]{width:100%;background-color:#e9ecef;border-radius:12px;margin-top:35px;overflow:hidden;height:35px;display:flex;align-items:center;position:relative;box-shadow:inset 0 3px 8px #00000026;animation-duration:.6s;border:1px solid #d0d7de}.progress-bar[_ngcontent-%COMP%]{height:100%;background:linear-gradient(90deg,var(--accent-color),var(--accent-dark));width:0%;border-radius:12px;transition:width .5s ease-out;position:relative;overflow:hidden}.progress-bar[_ngcontent-%COMP%]:after{content:\\\"\\\";position:absolute;top:0;left:0;width:100%;height:100%;background:repeating-linear-gradient(-45deg,rgba(255,255,255,.1),rgba(255,255,255,.1) 10px,transparent 10px,transparent 20px);animation:_ngcontent-%COMP%_progressStripes 2s linear infinite}@keyframes _ngcontent-%COMP%_progressStripes{0%{background-position:0 0}to{background-position:40px 0}}.progress-container[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{position:absolute;width:100%;text-align:center;color:var(--text-color);font-weight:700;font-size:1.2em;margin:0;text-shadow:1px 1px 3px rgba(255,255,255,.7);z-index:1}.download-section[_ngcontent-%COMP%]{margin-top:40px;padding:30px;background-color:#eafcf1;border:2px solid var(--accent-color);border-radius:15px;animation-duration:.9s;box-shadow:0 10px 25px #2ecc7133}.success-message[_ngcontent-%COMP%]{color:var(--accent-dark);font-size:1.3em;font-weight:700;margin-bottom:25px;display:flex;align-items:center;justify-content:center}.success-message[_ngcontent-%COMP%]   .fas[_ngcontent-%COMP%]{margin-right:12px;font-size:1.1em}.download-link[_ngcontent-%COMP%]{background:linear-gradient(45deg,var(--accent-color),var(--accent-dark));color:#fff;padding:15px 30px;border-radius:10px;text-decoration:none;font-size:1.3em;font-weight:700;display:inline-flex;align-items:center;justify-content:center;transition:all .3s ease;box-shadow:0 8px 20px #1abc9c66;animation-duration:1.8s;animation-iteration-count:infinite}.download-link[_ngcontent-%COMP%]:hover{transform:translateY(-3px);box-shadow:0 12px 25px #1abc9c8c;background:linear-gradient(45deg,var(--accent-dark),var(--accent-color))}.download-link[_ngcontent-%COMP%]   .fas[_ngcontent-%COMP%]{margin-right:12px}.reset-btn[_ngcontent-%COMP%]{background:#aebfd0;color:#fff;border:none;padding:12px 25px;border-radius:10px;cursor:pointer;font-size:1.1em;font-weight:600;margin-top:25px;transition:all .3s ease;box-shadow:0 5px 12px #aebfd04d;animation-duration:.7s}.reset-btn[_ngcontent-%COMP%]:hover{background-color:#8c9faf;transform:translateY(-2px);box-shadow:0 8px 15px #aebfd066}.error-section[_ngcontent-%COMP%]{margin-top:40px;padding:30px;background-color:#ffebeb;border:2px solid var(--error-color);border-radius:15px;animation-duration:.9s;box-shadow:0 10px 25px #e74c3c33}.error-message[_ngcontent-%COMP%]{color:var(--error-dark);font-size:1.3em;font-weight:700;margin-bottom:25px;display:flex;align-items:center;justify-content:center}.error-message[_ngcontent-%COMP%]   .fas[_ngcontent-%COMP%]{margin-right:12px;font-size:1.1em}@media (max-width: 768px){.merge-images-to-pdf-card[_ngcontent-%COMP%]{padding:30px;border-radius:15px}.card-header[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:2.2em}.sub-heading[_ngcontent-%COMP%]{font-size:1em}.upload-area[_ngcontent-%COMP%]{padding:40px 20px}.upload-icon[_ngcontent-%COMP%]{font-size:3.5em}.upload-text[_ngcontent-%COMP%]{font-size:1.1em}.convert-btn[_ngcontent-%COMP%]{padding:15px 30px;font-size:1.3em}.download-link[_ngcontent-%COMP%]{font-size:1.2em;padding:12px 25px}.progress-container[_ngcontent-%COMP%]{height:30px}.progress-container[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:1em}.selected-file-list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{padding:10px 15px;font-size:.9em}.image-preview-wrapper[_ngcontent-%COMP%]{max-height:200px}}@media (max-width: 480px){.merge-images-to-pdf-card[_ngcontent-%COMP%]{padding:20px;box-shadow:0 10px 20px var(--shadow-light)}.card-header[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:1.8em}.card-header[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]   .fas[_ngcontent-%COMP%]{font-size:1em;margin-right:10px}.sub-heading[_ngcontent-%COMP%]{font-size:.9em}.upload-area[_ngcontent-%COMP%]{padding:30px 15px}.upload-icon[_ngcontent-%COMP%]{font-size:3em}.upload-text[_ngcontent-%COMP%]{font-size:1em}.convert-btn[_ngcontent-%COMP%]{padding:10px 20px;font-size:1.1em}.download-link[_ngcontent-%COMP%], .reset-btn[_ngcontent-%COMP%]{font-size:1em;padding:10px 15px}.success-message[_ngcontent-%COMP%], .error-message[_ngcontent-%COMP%]{font-size:1em;margin-bottom:15px}}\"]\n    });\n  }\n  return MergeImagesToPdfComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}