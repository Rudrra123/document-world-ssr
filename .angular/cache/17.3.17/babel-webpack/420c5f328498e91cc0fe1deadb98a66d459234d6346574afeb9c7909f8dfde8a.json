{"ast":null,"code":"// src/app/tools/compress-image/compress-image.component.ts\nimport { ElementRef } from '@angular/core';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser'; // Import DomSanitizer and SafeUrl\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/platform-browser\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = [\"fileInput\"];\nfunction CompressImageComponent_ng_container_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 13);\n    i0.ɵɵelementStart(2, \"p\", 14);\n    i0.ɵɵtext(3, \"Drag & Drop your image here\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 15);\n    i0.ɵɵtext(5, \"or \");\n    i0.ɵɵelementStart(6, \"strong\");\n    i0.ɵɵtext(7, \"Click to Browse\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction CompressImageComponent_ng_container_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"img\", 16);\n    i0.ɵɵelementStart(2, \"div\", 17)(3, \"p\", 18);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 19);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function CompressImageComponent_ng_container_18_Template_button_click_7_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      $event.stopPropagation();\n      return i0.ɵɵresetView(ctx_r2.clearFile());\n    });\n    i0.ɵɵtext(8, \"Change File\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"src\", ctx_r2.previewUrl, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r2.selectedFile.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", (ctx_r2.originalSize / 1024).toFixed(1), \" KB\");\n  }\n}\nfunction CompressImageComponent_div_19_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 26)(1, \"div\", 27)(2, \"label\", 28);\n    i0.ɵɵtext(3, \"Width (px)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 29);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_div_19_div_1_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      i0.ɵɵtwoWayBindingSet(ctx_r2.resizeWidth, $event) || (ctx_r2.resizeWidth = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 27)(6, \"label\", 30);\n    i0.ɵɵtext(7, \"Height (px)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 31);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_div_19_div_1_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      i0.ɵɵtwoWayBindingSet(ctx_r2.resizeHeight, $event) || (ctx_r2.resizeHeight = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.resizeWidth);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.resizeHeight);\n  }\n}\nfunction CompressImageComponent_div_19_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function CompressImageComponent_div_19_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.upload());\n    });\n    i0.ɵɵelement(1, \"i\", 33);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r2.selectedFile || ctx_r2.mode === \"resize\" && (!ctx_r2.resizeWidth || !ctx_r2.resizeHeight));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.mode === \"compress\" ? \"Optimize Image\" : \"Apply Resize\", \" \");\n  }\n}\nfunction CompressImageComponent_div_19_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵelement(1, \"i\", 35);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 36);\n    i0.ɵɵelement(5, \"div\", 37);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Processing your image... \", ctx_r2.progress, \"%\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"width\", ctx_r2.progress, \"%\");\n  }\n}\nfunction CompressImageComponent_div_19_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 38)(1, \"div\", 39);\n    i0.ɵɵelement(2, \"i\", 40);\n    i0.ɵɵelementStart(3, \"p\", 41);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 42);\n    i0.ɵɵtext(6, \"New Size: \");\n    i0.ɵɵelementStart(7, \"strong\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"div\", 43)(10, \"a\", 44);\n    i0.ɵɵelement(11, \"i\", 45);\n    i0.ɵɵtext(12, \" Download \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 46);\n    i0.ɵɵlistener(\"click\", function CompressImageComponent_div_19_div_4_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.resetTool());\n    });\n    i0.ɵɵelement(14, \"i\", 47);\n    i0.ɵɵtext(15, \" Process Another \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r2.mode === \"compress\" ? \"Image Compressed!\" : \"Image Resized!\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", (ctx_r2.processedFileSize / 1024).toFixed(1), \" KB\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"href\", ctx_r2.processedFileUrl, i0.ɵɵsanitizeUrl)(\"download\", ctx_r2.getDownloadFileName());\n  }\n}\nfunction CompressImageComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, CompressImageComponent_div_19_div_1_Template, 9, 2, \"div\", 22)(2, CompressImageComponent_div_19_button_2_Template, 3, 2, \"button\", 23)(3, CompressImageComponent_div_19_div_3_Template, 6, 3, \"div\", 24)(4, CompressImageComponent_div_19_div_4_Template, 16, 4, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.mode === \"resize\" && !ctx_r2.isProcessing && !ctx_r2.processedFileUrl);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.isProcessing && !ctx_r2.processedFileUrl);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isProcessing);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.processedFileUrl && !ctx_r2.isProcessing);\n  }\n}\nexport let CompressImageComponent = /*#__PURE__*/(() => {\n  class CompressImageComponent {\n    http;\n    sanitizer;\n    fileInput;\n    // UI state properties\n    mode = 'compress'; // Controls which tool card is visible\n    // File selection and preview properties\n    selectedFile = null;\n    previewUrl = null; // Changed to SafeUrl for security\n    originalSize = 0;\n    // Resize specific properties\n    resizeWidth = null;\n    resizeHeight = null;\n    // Processing and result properties\n    progress = 0;\n    isProcessing = false; // New: To indicate if an operation is in progress\n    processedFileUrl = null; // New: URL of the processed image for display\n    processedFileSize = 0; // New: Size of the processed image\n    // Inject HttpClient for API calls and DomSanitizer for safe URL handling\n    constructor(http, sanitizer) {\n      this.http = http;\n      this.sanitizer = sanitizer;\n    }\n    /**\n     * Sets the current mode (compress or resize) and resets the tool state.\n     * @param newMode The mode to switch to.\n     */\n    setMode(newMode) {\n      this.mode = newMode;\n      this.resetTool(); // Reset the tool whenever the mode changes\n    }\n    /**\n     * Triggers the hidden file input element click.\n     */\n    triggerFileInput() {\n      this.fileInput.nativeElement.click();\n    }\n    /**\n     * Prevents default browser behaviors for drag events.\n     * @param event The DOM event.\n     */\n    preventDefaults(event) {\n      event.preventDefault();\n      event.stopPropagation(); // Stop propagation to prevent parent handlers from firing\n    }\n    /**\n     * Handles file selection from the input element.\n     * @param event The change event from the file input.\n     */\n    onFileSelected(event) {\n      const input = event.target;\n      const file = input.files?.[0];\n      if (file) {\n        this.handleFile(file);\n      }\n    }\n    /**\n     * Handles files dropped onto the drag-and-drop area.\n     * @param event The drag event.\n     */\n    onFilesDropped(event) {\n      this.preventDefaults(event); // Ensure defaults are prevented for drop\n      const file = event.dataTransfer?.files?.[0];\n      if (file) {\n        this.handleFile(file);\n      }\n    }\n    /**\n     * Centralized logic for setting the selected file and preparing for upload.\n     * Resets relevant states.\n     * @param file The File object to set.\n     */\n    handleFile(file) {\n      this.selectedFile = file;\n      this.originalSize = file.size;\n      this.previewUrl = this.sanitizer.bypassSecurityTrustUrl(URL.createObjectURL(file)); // Sanitize URL\n      this.resetProcessingState(); // Reset processing/result states\n    }\n    /**\n     * Clears the currently selected file and its preview.\n     */\n    clearFile() {\n      this.selectedFile = null;\n      if (this.previewUrl) {\n        // Revoke the object URL to free up memory\n        URL.revokeObjectURL(this.sanitizer.bypassSecurityTrustUrl(this.previewUrl));\n      }\n      this.previewUrl = null;\n      this.originalSize = 0;\n      // Clear the file input value to allow re-uploading the same file\n      if (this.fileInput && this.fileInput.nativeElement) {\n        this.fileInput.nativeElement.value = '';\n      }\n    }\n    /**\n     * Resets all processing and result related states.\n     */\n    resetProcessingState() {\n      this.progress = 0;\n      this.isProcessing = false;\n      if (this.processedFileUrl) {\n        // Revoke the object URL for the processed file\n        URL.revokeObjectURL(this.sanitizer.bypassSecurityTrustUrl(this.processedFileUrl));\n      }\n      this.processedFileUrl = null;\n      this.processedFileSize = 0;\n    }\n    /**\n     * Resets the entire tool to its initial state, including selected file and inputs.\n     */\n    resetTool() {\n      this.clearFile();\n      this.resetProcessingState();\n      this.resizeWidth = null;\n      this.resizeHeight = null;\n    }\n    /**\n     * Initiates the upload and processing of the selected image.\n     */\n    upload() {\n      if (!this.selectedFile) {\n        console.warn('No file selected for upload.');\n        return;\n      }\n      // Client-side validation for resize mode\n      if (this.mode === 'resize') {\n        if (!this.resizeWidth || !this.resizeHeight || this.resizeWidth <= 0 || this.resizeHeight <= 0) {\n          // Instead of alert, you might show an error message in the UI\n          console.error('Please enter valid positive width and height for resizing.');\n          // Optionally, you could set a UI flag to display a message to the user\n          return;\n        }\n      }\n      this.isProcessing = true; // Set processing state to true\n      this.progress = 0; // Reset progress for new upload\n      this.resetProcessingState(); // Clear any previous results\n      const formData = new FormData();\n      formData.append('file', this.selectedFile); // Ensure 'file' matches backend's expected field name\n      let endpoint = '';\n      if (this.mode === 'resize') {\n        endpoint = 'http://127.0.0.1:8000/resize-image'; // Your FastAPI resize endpoint\n        formData.append('width', this.resizeWidth.toString());\n        formData.append('height', this.resizeHeight.toString());\n      } else {\n        // mode === 'compress'\n        endpoint = 'http://127.0.0.1:8000/compress-image'; // Your FastAPI compress endpoint (assuming you have one)\n        // If no compress endpoint, remove this or implement it in FastAPI\n      }\n      this.http.post(endpoint, formData, {\n        reportProgress: true,\n        observe: 'events',\n        responseType: 'blob' // Expecting a blob (image data) back from FastAPI\n      }).subscribe(event => {\n        if (event.type === HttpEventType.UploadProgress && event.total) {\n          this.progress = Math.round(event.loaded / event.total * 100);\n        } else if (event.type === HttpEventType.Response) {\n          this.isProcessing = false; // Processing complete\n          this.progress = 100; // Ensure progress is 100% on completion\n          const blob = event.body; // Get the response blob\n          this.processedFileSize = blob.size;\n          this.processedFileUrl = this.sanitizer.bypassSecurityTrustUrl(URL.createObjectURL(blob)); // Sanitize URL for display\n          // IMPORTANT: Removed automatic download and reset here.\n          // The new UI displays the result, and the user clicks 'Download' or 'Process Another'.\n        }\n      }, error => {\n        this.isProcessing = false; // Stop processing on error\n        this.progress = 0; // Reset progress\n        console.error('Image processing failed:', error);\n        // You should implement a user-friendly error message display here,\n        // instead of an alert. E.g., a div with *ngIf=\"showError\"\n        // this.errorMessage = 'Failed to process image. Please try again.';\n        this.resetTool(); // Reset the tool on error\n      });\n    }\n    /**\n     * Generates a suitable download file name based on the mode.\n     * @returns The download file name.\n     */\n    getDownloadFileName() {\n      if (!this.selectedFile) return 'processed_image'; // Fallback\n      const nameParts = this.selectedFile.name.split('.');\n      const extension = nameParts.pop(); // Get the last part as extension\n      const baseName = nameParts.join('.'); // Join remaining parts as base name\n      return `${baseName}-${this.mode}.${extension || 'png'}`; // Default to png if no extension\n    }\n    static ɵfac = function CompressImageComponent_Factory(t) {\n      return new (t || CompressImageComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.DomSanitizer));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CompressImageComponent,\n      selectors: [[\"app-compress-image\"]],\n      viewQuery: function CompressImageComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInput = _t.first);\n        }\n      },\n      decls: 20,\n      vars: 9,\n      consts: [[\"fileInput\", \"\"], [1, \"app-container\"], [1, \"main-header\"], [1, \"tagline\"], [1, \"mode-switcher-bar\"], [3, \"click\"], [1, \"fas\", \"fa-compress-alt\"], [1, \"fas\", \"fa-expand-alt\"], [1, \"processing-workspace\"], [1, \"upload-area\", 3, \"dragover\", \"drop\", \"click\"], [\"type\", \"file\", \"accept\", \"image/*\", \"hidden\", \"\", 3, \"change\"], [4, \"ngIf\"], [\"class\", \"control-panel\", 4, \"ngIf\"], [1, \"fas\", \"fa-image\", \"upload-icon\", \"animate__animated\", \"animate__pulse\", \"animate__infinite\"], [1, \"upload-text\"], [1, \"upload-link\"], [\"alt\", \"Selected Image\", 1, \"uploaded-image-preview\", \"animate__animated\", \"animate__fadeIn\", 3, \"src\"], [1, \"image-overlay-info\", \"animate__animated\", \"animate__fadeInUp\"], [1, \"file-name\"], [1, \"file-size\"], [1, \"change-file-btn\", 3, \"click\"], [1, \"control-panel\"], [\"class\", \"resize-controls\", 4, \"ngIf\"], [\"class\", \"action-btn primary-btn\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"class\", \"processing-status\", 4, \"ngIf\"], [\"class\", \"result-section\", 4, \"ngIf\"], [1, \"resize-controls\"], [1, \"input-group\"], [\"for\", \"resizeWidth\"], [\"type\", \"number\", \"id\", \"resizeWidth\", \"placeholder\", \"e.g., 800\", \"min\", \"1\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"resizeHeight\"], [\"type\", \"number\", \"id\", \"resizeHeight\", \"placeholder\", \"e.g., 600\", \"min\", \"1\", 3, \"ngModelChange\", \"ngModel\"], [1, \"action-btn\", \"primary-btn\", 3, \"click\", \"disabled\"], [1, \"fas\", \"fa-cogs\"], [1, \"processing-status\"], [1, \"fas\", \"fa-spinner\", \"fa-spin\", \"loading-icon\"], [1, \"progress-line-container\"], [1, \"progress-line\"], [1, \"result-section\"], [1, \"result-summary\", \"animate__animated\", \"animate__fadeInUp\"], [1, \"fas\", \"fa-check-circle\", \"success-icon\"], [1, \"result-message\"], [1, \"final-size\"], [1, \"result-actions\", \"animate__animated\", \"animate__fadeInUp\", \"animate__delay-0.2s\"], [1, \"action-btn\", \"download-btn\", 3, \"href\", \"download\"], [1, \"fas\", \"fa-download\"], [1, \"action-btn\", \"reset-btn\", 3, \"click\"], [1, \"fas\", \"fa-redo\"]],\n      template: function CompressImageComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"header\", 2)(2, \"h1\");\n          i0.ɵɵtext(3, \"PixelFlow Studio\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"p\", 3);\n          i0.ɵɵtext(5, \"Effortlessly transform your images. Compress or Resize.\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"div\", 4)(7, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function CompressImageComponent_Template_button_click_7_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.setMode(\"compress\"));\n          });\n          i0.ɵɵelement(8, \"i\", 6);\n          i0.ɵɵtext(9, \" Compress \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function CompressImageComponent_Template_button_click_10_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.setMode(\"resize\"));\n          });\n          i0.ɵɵelement(11, \"i\", 7);\n          i0.ɵɵtext(12, \" Resize \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"main\", 8)(14, \"div\", 9);\n          i0.ɵɵlistener(\"dragover\", function CompressImageComponent_Template_div_dragover_14_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.preventDefaults($event));\n          })(\"drop\", function CompressImageComponent_Template_div_drop_14_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onFilesDropped($event));\n          })(\"click\", function CompressImageComponent_Template_div_click_14_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.triggerFileInput());\n          });\n          i0.ɵɵelementStart(15, \"input\", 10, 0);\n          i0.ɵɵlistener(\"change\", function CompressImageComponent_Template_input_change_15_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onFileSelected($event));\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(17, CompressImageComponent_ng_container_17_Template, 8, 0, \"ng-container\", 11)(18, CompressImageComponent_ng_container_18_Template, 9, 3, \"ng-container\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(19, CompressImageComponent_div_19_Template, 5, 4, \"div\", 12);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵclassProp(\"active\", ctx.mode === \"compress\");\n          i0.ɵɵadvance(3);\n          i0.ɵɵclassProp(\"active\", ctx.mode === \"resize\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"has-file\", ctx.selectedFile);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", !ctx.selectedFile);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedFile);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedFile);\n        }\n      },\n      dependencies: [i3.NgIf, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.MinValidator, i4.NgModel],\n      styles: [\"@import\\\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\\\";@import\\\"https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css\\\";[_ngcontent-%COMP%]:root{--primary-blue: #007bff;--primary-dark-blue: #0056b3;--accent-purple: #6f42c1;--accent-teal: #20c997;--text-dark: #343a40;--text-light: #6c757d;--bg-gradient-start: #e9ecef;--bg-gradient-end: #f8f9fa;--card-bg: #ffffff;--border-light: #dee2e6;--shadow-light: rgba(0, 0, 0, .05);--shadow-medium: rgba(0, 0, 0, .1);--shadow-strong: rgba(0, 0, 0, .15);--success-color: #28a745;--warning-color: #ffc107}body[_ngcontent-%COMP%]{font-family:Roboto,sans-serif;background:linear-gradient(135deg,var(--bg-gradient-start),var(--bg-gradient-end));color:var(--text-dark);line-height:1.6;margin:0;padding:0;display:flex;justify-content:center;align-items:center;min-height:100vh;overflow-x:hidden;box-sizing:border-box}.app-container[_ngcontent-%COMP%]{max-width:900px;width:95%;background:var(--card-bg);border-radius:20px;box-shadow:0 15px 40px var(--shadow-medium);padding:40px;display:flex;flex-direction:column;align-items:center;gap:30px}.main-header[_ngcontent-%COMP%]{text-align:center;width:100%}.main-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:3rem;color:var(--accent-purple);margin-bottom:8px;font-weight:700;letter-spacing:-.5px}.main-header[_ngcontent-%COMP%]   .tagline[_ngcontent-%COMP%]{font-size:1.1rem;color:var(--text-light);margin-bottom:25px}.mode-switcher-bar[_ngcontent-%COMP%]{display:inline-flex;background-color:var(--bg-gradient-end);border-radius:15px;box-shadow:inset 0 2px 5px #0000000d;padding:5px;margin-bottom:30px}.mode-switcher-bar[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:transparent;color:var(--text-dark);border:none;padding:12px 28px;font-size:1.05rem;font-weight:500;cursor:pointer;border-radius:12px;transition:all .3s ease;display:flex;align-items:center;gap:10px;white-space:nowrap}.mode-switcher-bar[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover:not(.active){background-color:var(--border-light)}.mode-switcher-bar[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{background:linear-gradient(45deg,var(--primary-blue),var(--accent-purple));color:#fff;box-shadow:0 5px 15px #007bff4d}.processing-workspace[_ngcontent-%COMP%]{width:100%;display:flex;flex-direction:column;align-items:center;gap:25px}.upload-area[_ngcontent-%COMP%]{position:relative;width:100%;min-height:250px;border:3px dashed var(--primary-blue);border-radius:15px;display:flex;flex-direction:column;align-items:center;justify-content:center;background-color:var(--bg-gradient-start);cursor:pointer;transition:all .4s ease;overflow:hidden}.upload-area[_ngcontent-%COMP%]:hover{border-color:var(--primary-dark-blue);background-color:#dbe7f7;box-shadow:0 0 15px #007bff33}.upload-area.has-file[_ngcontent-%COMP%]{border:1px solid var(--border-light);background-color:transparent;min-height:350px;justify-content:flex-start;padding-top:0}.upload-icon[_ngcontent-%COMP%]{font-size:4.5rem;color:var(--primary-blue);margin-bottom:20px;opacity:.8}.upload-text[_ngcontent-%COMP%]{font-size:1.2rem;color:var(--text-dark);font-weight:500;margin-bottom:10px}.upload-link[_ngcontent-%COMP%]{font-size:1rem;color:var(--text-light)}.upload-link[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%]{color:var(--primary-blue);text-decoration:underline}.uploaded-image-preview[_ngcontent-%COMP%]{width:100%;height:100%;object-fit:contain;max-height:350px;display:block;border-radius:15px;margin:0 auto;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);z-index:1}.image-overlay-info[_ngcontent-%COMP%]{position:absolute;bottom:0;left:0;width:100%;background:#0009;color:#fff;padding:15px 20px;border-bottom-left-radius:15px;border-bottom-right-radius:15px;display:flex;justify-content:space-between;align-items:center;font-size:.95rem;z-index:2}.image-overlay-info[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0}.image-overlay-info[_ngcontent-%COMP%]   .file-name[_ngcontent-%COMP%]{font-weight:600}.image-overlay-info[_ngcontent-%COMP%]   .file-size[_ngcontent-%COMP%]{font-weight:400;opacity:.8}.change-file-btn[_ngcontent-%COMP%]{background:#fff3;border:1px solid rgba(255,255,255,.4);color:#fff;padding:6px 12px;border-radius:5px;cursor:pointer;font-size:.85rem;transition:background-color .2s ease,border-color .2s ease}.change-file-btn[_ngcontent-%COMP%]:hover{background:#ffffff4d;border-color:#fff9}.control-panel[_ngcontent-%COMP%]{width:100%;display:flex;flex-direction:column;align-items:center;padding:25px;background-color:var(--card-bg);border-radius:15px;box-shadow:0 5px 20px var(--shadow-light);border:1px solid var(--border-light)}.resize-controls[_ngcontent-%COMP%]{display:flex;gap:20px;margin-bottom:25px;width:100%;justify-content:center}.input-group[_ngcontent-%COMP%]{flex:1;max-width:180px;text-align:left}.input-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{display:block;font-size:.9rem;color:var(--text-light);margin-bottom:8px;font-weight:500}.input-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%;padding:12px 15px;border:1px solid var(--border-light);border-radius:8px;font-size:1rem;text-align:center;color:var(--text-dark);transition:all .3s ease;box-sizing:border-box}.input-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{outline:none;border-color:var(--primary-blue);box-shadow:0 0 0 4px #007bff26}.action-btn[_ngcontent-%COMP%]{display:inline-flex;align-items:center;justify-content:center;gap:10px;padding:12px 30px;border:none;border-radius:8px;font-size:1rem;font-weight:600;cursor:pointer;transition:all .3s ease;text-decoration:none;box-shadow:0 4px 10px #0000001a;white-space:nowrap}.primary-btn[_ngcontent-%COMP%]{background:linear-gradient(45deg,var(--primary-blue),var(--accent-purple));color:#fff}.primary-btn[_ngcontent-%COMP%]:hover{background:linear-gradient(45deg,var(--primary-dark-blue),#5a30a8);transform:translateY(-2px);box-shadow:0 6px 15px #007bff66}.action-btn[_ngcontent-%COMP%]:disabled{background:#e0e0e0;color:#a0a0a0;cursor:not-allowed;box-shadow:none;transform:none}.processing-status[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;margin-top:25px}.loading-icon[_ngcontent-%COMP%]{font-size:3rem;color:var(--primary-blue);margin-bottom:15px;animation:_ngcontent-%COMP%_spin 1.5s linear infinite}@keyframes _ngcontent-%COMP%_spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.processing-status[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:1.1rem;color:var(--text-dark);font-weight:500;margin-bottom:10px}.progress-line-container[_ngcontent-%COMP%]{width:80%;max-width:400px;height:10px;background-color:var(--border-light);border-radius:5px;overflow:hidden}.progress-line[_ngcontent-%COMP%]{height:100%;background:linear-gradient(90deg,var(--accent-teal),var(--success-color));width:0%;border-radius:5px;transition:width .4s ease-out}.result-section[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;margin-top:25px;background-color:#e6ffee;border:1px solid var(--success-color);border-radius:15px;padding:30px;box-shadow:0 5px 20px #28a74526;width:100%}.result-summary[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;margin-bottom:25px}.success-icon[_ngcontent-%COMP%]{font-size:3.5rem;color:var(--success-color);margin-bottom:15px}.result-message[_ngcontent-%COMP%]{font-size:1.3rem;font-weight:700;color:var(--success-color);margin-bottom:10px}.final-size[_ngcontent-%COMP%]{font-size:1.1rem;color:var(--text-dark)}.final-size[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%]{color:var(--primary-dark-blue)}.result-actions[_ngcontent-%COMP%]{display:flex;gap:15px;flex-wrap:wrap;justify-content:center}.download-btn[_ngcontent-%COMP%]{background-color:var(--success-color);color:#fff}.download-btn[_ngcontent-%COMP%]:hover{background-color:#218838;transform:translateY(-2px);box-shadow:0 6px 15px #28a74566}.reset-btn[_ngcontent-%COMP%]{background-color:#f0f2f5;color:var(--text-dark);border:1px solid var(--border-light)}.reset-btn[_ngcontent-%COMP%]:hover{background-color:var(--border-light);transform:translateY(-2px);box-shadow:0 3px 8px #0000001a}@media (max-width: 768px){.app-container[_ngcontent-%COMP%]{padding:25px;margin:25px auto}.main-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:2.5rem}.main-header[_ngcontent-%COMP%]   .tagline[_ngcontent-%COMP%]{font-size:1rem}.mode-switcher-bar[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:10px 20px;font-size:.95rem}.upload-area[_ngcontent-%COMP%]{min-height:200px}.upload-area.has-file[_ngcontent-%COMP%]{min-height:300px}.upload-icon[_ngcontent-%COMP%]{font-size:3.5rem}.upload-text[_ngcontent-%COMP%]{font-size:1rem}.upload-link[_ngcontent-%COMP%]{font-size:.9rem}.image-overlay-info[_ngcontent-%COMP%]{flex-direction:column;align-items:flex-start;gap:8px;padding:10px 15px}.change-file-btn[_ngcontent-%COMP%]{margin-top:5px}.control-panel[_ngcontent-%COMP%]{padding:20px}.resize-controls[_ngcontent-%COMP%]{flex-direction:column;gap:15px}.input-group[_ngcontent-%COMP%]{max-width:100%}.action-btn[_ngcontent-%COMP%]{padding:10px 20px;font-size:.95rem;gap:8px}.processing-status[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:1rem}.result-section[_ngcontent-%COMP%]{padding:25px}.result-message[_ngcontent-%COMP%]{font-size:1.1rem}.final-size[_ngcontent-%COMP%]{font-size:1rem}.result-actions[_ngcontent-%COMP%]{flex-direction:column;gap:10px}}@media (max-width: 480px){.app-container[_ngcontent-%COMP%]{padding:20px}.main-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:2.2rem}.mode-switcher-bar[_ngcontent-%COMP%]{flex-direction:column;width:100%;padding:0}.mode-switcher-bar[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:100%;border-radius:0;margin-bottom:2px}.mode-switcher-bar[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:first-child{border-top-left-radius:12px;border-top-right-radius:12px}.mode-switcher-bar[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:last-child{border-bottom-left-radius:12px;border-bottom-right-radius:12px;margin-bottom:0}.control-panel[_ngcontent-%COMP%]{padding:15px}.upload-text[_ngcontent-%COMP%]{text-align:center;font-size:.95rem}}\"]\n    });\n  }\n  return CompressImageComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}