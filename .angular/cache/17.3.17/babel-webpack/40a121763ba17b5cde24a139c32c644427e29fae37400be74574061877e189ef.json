{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"fileInput\"];\nfunction MergeImagesToPdfComponent_span_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Click to upload or drag & drop image\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MergeImagesToPdfComponent_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"\\u2705 Selected: \", ctx_r1.singleSelectedFile.name, \"\");\n  }\n}\nfunction MergeImagesToPdfComponent_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\uD83D\\uDE80 Convert to PDF\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MergeImagesToPdfComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"Converting... \", ctx_r1.singleProgress, \"%\");\n  }\n}\nfunction MergeImagesToPdfComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵelement(1, \"div\", 21);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"width\", ctx_r1.singleProgress, \"%\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.singleProgress, \"% Uploading...\");\n  }\n}\nfunction MergeImagesToPdfComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"p\");\n    i0.ɵɵtext(2, \"\\u2705 Conversion successful!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"a\", 23);\n    i0.ɵɵtext(4, \"\\u2B07 Download PDF\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function MergeImagesToPdfComponent_div_19_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.resetSingleConverter());\n    });\n    i0.ɵɵtext(6, \"Convert Another\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"href\", ctx_r1.singleDownloadUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction MergeImagesToPdfComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 25)(1, \"p\", 26);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function MergeImagesToPdfComponent_div_20_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.resetSingleConverter());\n    });\n    i0.ɵɵtext(4, \"Try Again\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\u274C Error: \", ctx_r1.singleErrorMessage, \"\");\n  }\n}\nfunction MergeImagesToPdfComponent_ng_container_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 27);\n    i0.ɵɵelementStart(2, \"p\", 8);\n    i0.ɵɵtext(3, \"Click to browse or drag & drop images here\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 28);\n    i0.ɵɵtext(5, \"Supports JPG, PNG, GIF, BMP, and more\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction MergeImagesToPdfComponent_ng_container_32_li_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const file_r7 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(file_r7.name);\n  }\n}\nfunction MergeImagesToPdfComponent_ng_container_32_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 29);\n    i0.ɵɵelement(2, \"i\", 30);\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function MergeImagesToPdfComponent_ng_container_32_Template_button_click_5_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      $event.stopPropagation();\n      return i0.ɵɵresetView(ctx_r1.resetMultipleMerger());\n    });\n    i0.ɵɵtext(6, \"Clear Selection\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 32)(8, \"p\");\n    i0.ɵɵtext(9, \"Selected Files:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"ul\");\n    i0.ɵɵtemplate(11, MergeImagesToPdfComponent_ng_container_32_li_11_Template, 2, 1, \"li\", 33);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.multipleSelectedFiles.length, \" image(s) selected\");\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.multipleSelectedFiles);\n  }\n}\nfunction MergeImagesToPdfComponent_span_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\uD83D\\uDE80 Merge to PDF\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MergeImagesToPdfComponent_span_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"Merging... \", ctx_r1.multipleProgress, \"%\");\n  }\n}\nfunction MergeImagesToPdfComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵelement(1, \"div\", 21);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"width\", ctx_r1.multipleProgress, \"%\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.multipleProgress, \"% Uploading...\");\n  }\n}\nfunction MergeImagesToPdfComponent_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"p\", 34);\n    i0.ɵɵtext(2, \"\\u2705 PDF created successfully!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"a\", 35);\n    i0.ɵɵtext(4, \"\\u2B07 Download PDF\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function MergeImagesToPdfComponent_div_37_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.resetMultipleMerger());\n    });\n    i0.ɵɵtext(6, \"Merge Another\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"href\", ctx_r1.multipleDownloadUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction MergeImagesToPdfComponent_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 25)(1, \"p\", 26);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function MergeImagesToPdfComponent_div_38_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.resetMultipleMerger());\n    });\n    i0.ɵɵtext(4, \"Try Again\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\u274C Error: \", ctx_r1.multipleErrorMessage, \"\");\n  }\n}\nexport let MergeImagesToPdfComponent = /*#__PURE__*/(() => {\n  class MergeImagesToPdfComponent {\n    http;\n    selectedFiles = [];\n    downloadUrl = '';\n    progress = 0;\n    errorMessage = ''; // New property to store error messages\n    uploadSubscription = null; // To manage ongoing uploads\n    fileInput;\n    constructor(http) {\n      this.http = http;\n    }\n    onFilesSelected(event) {\n      const input = event.target;\n      if (input.files) {\n        this.selectedFiles = Array.from(input.files);\n        // Reset relevant states when new files are selected\n        this.downloadUrl = '';\n        this.progress = 0;\n        this.errorMessage = ''; // Clear any previous error\n        if (this.uploadSubscription) {\n          this.uploadSubscription.unsubscribe(); // Cancel any ongoing upload\n          this.uploadSubscription = null;\n        }\n      }\n    }\n    upload() {\n      if (!this.selectedFiles.length) {\n        this.errorMessage = 'Please select images to merge.';\n        return;\n      }\n      // Reset states before starting a new upload\n      this.downloadUrl = '';\n      this.progress = 0;\n      this.errorMessage = '';\n      const formData = new FormData();\n      this.selectedFiles.forEach(file => formData.append('files', file));\n      this.uploadSubscription = this.http.post('http://127.0.0.1:8000/api/merge-images-to-pdf', formData, {\n        responseType: 'blob',\n        reportProgress: true,\n        observe: 'events'\n      }).subscribe({\n        next: event => {\n          if (event.type === HttpEventType.UploadProgress && event.total) {\n            this.progress = Math.round(event.loaded / event.total * 100);\n          }\n          if (event.type === HttpEventType.Response) {\n            if (event.body) {\n              const blob = new Blob([event.body], {\n                type: 'application/pdf'\n              });\n              const url = URL.createObjectURL(blob);\n              this.downloadUrl = url;\n              this.progress = 0; // Upload complete\n              // Programmatically trigger download\n              const link = document.createElement('a');\n              link.href = url;\n              link.download = 'merged.pdf';\n              document.body.appendChild(link); // Append to body to ensure it's clickable\n              link.click();\n              document.body.removeChild(link); // Clean up the link element\n              // Clean up the object URL\n              URL.revokeObjectURL(url);\n            } else {\n              this.errorMessage = 'PDF creation failed: Empty response from server.';\n              this.progress = 0;\n            }\n          }\n        },\n        error: error => {\n          console.error('Upload error:', error);\n          this.progress = 0; // Reset progress on error\n          if (error.error instanceof ErrorEvent) {\n            // Client-side error\n            this.errorMessage = `An error occurred: ${error.error.message}`;\n          } else {\n            // Server-side error\n            this.errorMessage = `Server responded with ${error.status}: ${error.statusText || 'Unknown error'}. Please try again.`;\n            if (error.status === 0) {\n              this.errorMessage = 'Could not connect to the server. Please ensure the backend is running.';\n            }\n          }\n        },\n        complete: () => {\n          // Unsubscribe after completion or error to prevent memory leaks\n          if (this.uploadSubscription) {\n            this.uploadSubscription.unsubscribe();\n            this.uploadSubscription = null;\n          }\n        }\n      });\n    }\n    reset() {\n      if (this.uploadSubscription) {\n        this.uploadSubscription.unsubscribe(); // Cancel ongoing upload if reset is called\n        this.uploadSubscription = null;\n      }\n      this.selectedFiles = [];\n      this.downloadUrl = '';\n      this.progress = 0;\n      this.errorMessage = ''; // Clear any error message\n      if (this.fileInput) {\n        this.fileInput.nativeElement.value = ''; // Clear the file input element's value\n      }\n    }\n    // Lifecycle hook for cleanup\n    ngOnDestroy() {\n      if (this.uploadSubscription) {\n        this.uploadSubscription.unsubscribe();\n      }\n    }\n    static ɵfac = function MergeImagesToPdfComponent_Factory(t) {\n      return new (t || MergeImagesToPdfComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: MergeImagesToPdfComponent,\n      selectors: [[\"app-merge-images-to-pdf\"]],\n      viewQuery: function MergeImagesToPdfComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInput = _t.first);\n        }\n      },\n      decls: 39,\n      vars: 16,\n      consts: [[\"mergeFileInput\", \"\"], [1, \"all-tools-container\"], [1, \"page-title\"], [1, \"page-description\"], [1, \"tool-card\", \"single-image-converter\"], [1, \"sub\"], [1, \"upload-box\"], [\"type\", \"file\", \"accept\", \"image/*\", \"hidden\", \"\", 3, \"change\"], [1, \"upload-text\"], [4, \"ngIf\"], [1, \"convert-btn\", 3, \"click\", \"disabled\"], [\"class\", \"progress-container\", 4, \"ngIf\"], [\"class\", \"download-section\", 4, \"ngIf\"], [\"class\", \"error-section\", 4, \"ngIf\"], [1, \"separator\"], [1, \"tool-card\", \"merge-images-converter\"], [1, \"sub-heading\"], [1, \"upload-area\"], [\"type\", \"file\", \"accept\", \"image/*\", \"multiple\", \"\", \"hidden\", \"\", 3, \"change\"], [1, \"upload-prompt\", 3, \"click\"], [1, \"progress-container\"], [1, \"progress-bar\"], [1, \"download-section\"], [\"download\", \"converted.pdf\", 1, \"download-link\", 3, \"href\"], [\"type\", \"button\", 1, \"reset-btn\", 3, \"click\"], [1, \"error-section\"], [1, \"error-message\"], [1, \"fas\", \"fa-cloud-upload-alt\", \"upload-icon\"], [1, \"file-types\"], [1, \"selected-files-summary\"], [1, \"fas\", \"fa-check-circle\", \"success-icon\"], [\"type\", \"button\", 1, \"clear-selection-btn\", 3, \"click\"], [1, \"selected-file-list\"], [4, \"ngFor\", \"ngForOf\"], [1, \"success-message\"], [\"download\", \"merged.pdf\", 1, \"download-link\", 3, \"href\"]],\n      template: function MergeImagesToPdfComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"h1\", 2);\n          i0.ɵɵtext(2, \"Image to PDF Tools\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"p\", 3);\n          i0.ɵɵtext(4, \"Convert single images or merge multiple images into PDF documents.\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"h2\");\n          i0.ɵɵtext(7, \"\\uD83D\\uDDBC\\uFE0F JPG / PNG to PDF Converter\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"p\", 5);\n          i0.ɵɵtext(9, \"Upload any image and get a clean PDF instantly\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"label\", 6)(11, \"input\", 7);\n          i0.ɵɵlistener(\"change\", function MergeImagesToPdfComponent_Template_input_change_11_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onSingleFileSelected($event));\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"div\", 8);\n          i0.ɵɵtemplate(13, MergeImagesToPdfComponent_span_13_Template, 2, 0, \"span\", 9)(14, MergeImagesToPdfComponent_span_14_Template, 2, 1, \"span\", 9);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function MergeImagesToPdfComponent_Template_button_click_15_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.uploadSingleImage());\n          });\n          i0.ɵɵtemplate(16, MergeImagesToPdfComponent_span_16_Template, 2, 0, \"span\", 9)(17, MergeImagesToPdfComponent_span_17_Template, 2, 1, \"span\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(18, MergeImagesToPdfComponent_div_18_Template, 4, 3, \"div\", 11)(19, MergeImagesToPdfComponent_div_19_Template, 7, 1, \"div\", 12)(20, MergeImagesToPdfComponent_div_20_Template, 5, 1, \"div\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(21, \"div\", 14);\n          i0.ɵɵelementStart(22, \"div\", 15)(23, \"h2\");\n          i0.ɵɵtext(24, \"\\uD83C\\uDFB4 Merge Images to PDF\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"p\", 16);\n          i0.ɵɵtext(26, \"Select multiple images and merge them into a single PDF document.\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"label\", 17)(28, \"input\", 18, 0);\n          i0.ɵɵlistener(\"change\", function MergeImagesToPdfComponent_Template_input_change_28_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onMultipleFilesSelected($event));\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(30, \"div\", 19);\n          i0.ɵɵlistener(\"click\", function MergeImagesToPdfComponent_Template_div_click_30_listener() {\n            i0.ɵɵrestoreView(_r1);\n            const mergeFileInput_r5 = i0.ɵɵreference(29);\n            return i0.ɵɵresetView(mergeFileInput_r5.click());\n          });\n          i0.ɵɵtemplate(31, MergeImagesToPdfComponent_ng_container_31_Template, 6, 0, \"ng-container\", 9)(32, MergeImagesToPdfComponent_ng_container_32_Template, 12, 2, \"ng-container\", 9);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(33, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function MergeImagesToPdfComponent_Template_button_click_33_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.uploadMultipleImages());\n          });\n          i0.ɵɵtemplate(34, MergeImagesToPdfComponent_span_34_Template, 2, 0, \"span\", 9)(35, MergeImagesToPdfComponent_span_35_Template, 2, 1, \"span\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(36, MergeImagesToPdfComponent_div_36_Template, 4, 3, \"div\", 11)(37, MergeImagesToPdfComponent_div_37_Template, 7, 1, \"div\", 12)(38, MergeImagesToPdfComponent_div_38_Template, 5, 1, \"div\", 13);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"ngIf\", !ctx.singleSelectedFile);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.singleSelectedFile);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", !ctx.singleSelectedFile || ctx.singleProgress > 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.singleProgress === 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.singleProgress > 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.singleProgress > 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.singleDownloadUrl);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.singleErrorMessage);\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"ngIf\", !ctx.multipleSelectedFiles.length);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.multipleSelectedFiles.length);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", !ctx.multipleSelectedFiles.length || ctx.multipleProgress > 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.multipleProgress === 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.multipleProgress > 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.multipleProgress > 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.multipleDownloadUrl);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.multipleErrorMessage);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf],\n      styles: [\".merge-images-to-pdf-card[_ngcontent-%COMP%]{font-family:Arial,sans-serif;background-color:#fff;border-radius:12px;box-shadow:0 6px 20px #0000001a;padding:30px;max-width:500px;margin:40px auto;text-align:center;border:1px solid #e0e0e0}h2[_ngcontent-%COMP%]{color:#333;font-size:2em;margin-bottom:10px;display:flex;align-items:center;justify-content:center}h2[_ngcontent-%COMP%]   .fa-image[_ngcontent-%COMP%]{margin-right:10px;color:#2c3e50}.sub-heading[_ngcontent-%COMP%]{color:#666;font-size:1em;margin-bottom:30px}.upload-area[_ngcontent-%COMP%]{display:block;border:3px dashed #a7d9ff;border-radius:10px;padding:40px 20px;cursor:pointer;transition:all .3s ease;margin-bottom:25px;background-color:#f7fcff}.upload-area[_ngcontent-%COMP%]:hover{border-color:#007bff;background-color:#e6f7ff}.upload-prompt[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;min-height:120px}.upload-icon[_ngcontent-%COMP%]{font-size:3.5em;color:#007bff;margin-bottom:15px}.upload-text[_ngcontent-%COMP%]{font-size:1.2em;color:#333;font-weight:700;margin-bottom:8px}.file-types[_ngcontent-%COMP%]{font-size:.85em;color:#777}.selected-files-summary[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;gap:15px;margin-bottom:15px;color:#28a745;font-weight:700}.selected-files-summary[_ngcontent-%COMP%]   .success-icon[_ngcontent-%COMP%]{font-size:2em;color:#28a745}.selected-files-summary[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0;font-size:1.1em}.clear-selection-btn[_ngcontent-%COMP%]{background:none;border:none;color:#dc3545;font-size:.9em;cursor:pointer;text-decoration:underline;margin-left:10px;font-weight:400}.clear-selection-btn[_ngcontent-%COMP%]:hover{color:#c82333}.selected-file-list[_ngcontent-%COMP%]{text-align:left;width:100%;max-height:150px;overflow-y:auto;border:1px solid #ddd;border-radius:8px;padding:10px;background-color:#f9f9f9;margin-top:15px}.selected-file-list[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-weight:700;color:#555;margin-top:0;margin-bottom:8px}.selected-file-list[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{list-style-type:none;padding:0;margin:0}.selected-file-list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{background-color:#e9f7ff;border:1px solid #cceeff;padding:8px 12px;margin-bottom:5px;border-radius:5px;font-size:.9em;color:#333;display:flex;justify-content:space-between;align-items:center}.convert-btn[_ngcontent-%COMP%]{background-color:#007bff;color:#fff;border:none;border-radius:8px;padding:15px 30px;font-size:1.1em;cursor:pointer;transition:background-color .3s ease,transform .2s ease;width:100%;font-weight:700;display:flex;align-items:center;justify-content:center;gap:10px}.convert-btn[_ngcontent-%COMP%]:hover:not([disabled]){background-color:#0056b3;transform:translateY(-2px)}.convert-btn[_ngcontent-%COMP%]:disabled{background-color:#ccc;cursor:not-allowed}.progress-container[_ngcontent-%COMP%]{width:100%;background-color:#e0e0e0;border-radius:5px;margin-top:25px;overflow:hidden;height:25px;display:flex;align-items:center;justify-content:center;position:relative}.progress-bar[_ngcontent-%COMP%]{height:100%;background-color:#28a745;width:0%;border-radius:5px;transition:width .4s ease;position:absolute;left:0;top:0;z-index:1}.progress-container[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0;font-size:.9em;color:#555;position:relative;z-index:2;mix-blend-mode:difference}.download-section[_ngcontent-%COMP%]{margin-top:30px;background-color:#d4edda;border:1px solid #c3e6cb;border-radius:8px;padding:20px;color:#155724}.success-message[_ngcontent-%COMP%]{font-size:1.1em;font-weight:700;margin-bottom:15px;display:flex;align-items:center;justify-content:center;gap:10px}.download-link[_ngcontent-%COMP%]{display:inline-block;background-color:#28a745;color:#fff;padding:12px 25px;border-radius:8px;text-decoration:none;font-weight:700;transition:background-color .3s ease;margin-right:10px}.download-link[_ngcontent-%COMP%]:hover{background-color:#218838}.reset-btn[_ngcontent-%COMP%]{background-color:#6c757d;color:#fff;border:none;border-radius:8px;padding:12px 25px;font-size:1em;cursor:pointer;transition:background-color .3s ease}.reset-btn[_ngcontent-%COMP%]:hover{background-color:#5a6268}.error-section[_ngcontent-%COMP%]{margin-top:30px;background-color:#f8d7da;border:1px solid #f5c6cb;border-radius:8px;padding:20px;color:#721c24}.error-message[_ngcontent-%COMP%]{font-size:1.1em;font-weight:700;margin-bottom:15px;display:flex;align-items:center;justify-content:center;gap:10px}.error-section[_ngcontent-%COMP%]   .reset-btn[_ngcontent-%COMP%]{background-color:#dc3545}.error-section[_ngcontent-%COMP%]   .reset-btn[_ngcontent-%COMP%]:hover{background-color:#c82333}\"]\n    });\n  }\n  return MergeImagesToPdfComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}