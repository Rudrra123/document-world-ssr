{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = [\"fileInputJpgToPdf\"];\nconst _c1 = [\"fileInputPdfToWord\"];\nconst _c2 = [\"fileInputWordToPdf\"];\nconst _c3 = [\"fileInputMergeImagesToPdf\"];\nconst _c4 = (a0, a1) => ({\n  \"animate__pulse\": a0,\n  \"animate__flash\": a1\n});\nfunction PdfToolsComponent_section_49_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 38);\n    i0.ɵɵelementStart(2, \"span\", 39);\n    i0.ɵɵtext(3, \"Click to summon or Drag & Drop your Image (JPG, PNG)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction PdfToolsComponent_section_49_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 40);\n    i0.ɵɵelement(2, \"i\", 41);\n    i0.ɵɵelementStart(3, \"span\", 42);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1.selectedFileJpgToPdf.name);\n  }\n}\nfunction PdfToolsComponent_section_49_ng_container_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 43);\n    i0.ɵɵtext(2, \" Initiate Transformation \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction PdfToolsComponent_section_49_ng_container_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 44);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Weaving PDF... \", ctx_r1.progressJpgToPdf, \"% \");\n  }\n}\nfunction PdfToolsComponent_section_49_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 45);\n    i0.ɵɵelement(1, \"div\", 46);\n    i0.ɵɵelementStart(2, \"p\", 47);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"width\", ctx_r1.progressJpgToPdf, \"%\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Astral Progress: \", ctx_r1.progressJpgToPdf, \"%\");\n  }\n}\nfunction PdfToolsComponent_section_49_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 48)(1, \"p\", 49);\n    i0.ɵɵtext(2, \"\\u2705 Transformation complete! Your PDF is manifested.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"a\", 50);\n    i0.ɵɵtext(4, \"\\u2B07 Download PDF Orb\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 51);\n    i0.ɵɵlistener(\"click\", function PdfToolsComponent_section_49_div_16_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      ctx_r1.reset(\"jpg-to-pdf\");\n      return i0.ɵɵresetView(ctx_r1.selectedTool = null);\n    });\n    i0.ɵɵtext(6, \"Start New Ritual\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"href\", ctx_r1.downloadUrlJpgToPdf, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction PdfToolsComponent_section_49_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 52)(1, \"p\", 53);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 51);\n    i0.ɵɵlistener(\"click\", function PdfToolsComponent_section_49_div_17_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.reset(\"jpg-to-pdf\"));\n    });\n    i0.ɵɵtext(4, \"Retry Incantation\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\u274C Error in the Aether: \", ctx_r1.errorMessageJpgToPdf, \"\");\n  }\n}\nfunction PdfToolsComponent_section_49_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"section\", 27)(1, \"div\", 28)(2, \"h2\");\n    i0.ɵɵtext(3, \"\\uD83D\\uDDBC\\uFE0F JPG/PNG to PDF Conversion\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 29);\n    i0.ɵɵtext(5, \"Upload your images and we'll weave them into a perfect PDF.\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"label\", 30);\n    i0.ɵɵlistener(\"dragover\", function PdfToolsComponent_section_49_Template_label_dragover_6_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDragOverSingle($event, \"jpg-to-pdf\"));\n    })(\"dragleave\", function PdfToolsComponent_section_49_Template_label_dragleave_6_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDragLeaveSingle($event, \"jpg-to-pdf\"));\n    })(\"drop\", function PdfToolsComponent_section_49_Template_label_drop_6_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDropSingle($event, \"jpg-to-pdf\"));\n    });\n    i0.ɵɵelementStart(7, \"input\", 31, 0);\n    i0.ɵɵlistener(\"change\", function PdfToolsComponent_section_49_Template_input_change_7_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onFileSelectedSingle($event, \"jpg-to-pdf\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 32);\n    i0.ɵɵlistener(\"click\", function PdfToolsComponent_section_49_Template_div_click_9_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const fileInputJpgToPdf_r3 = i0.ɵɵreference(8);\n      return i0.ɵɵresetView(fileInputJpgToPdf_r3.click());\n    });\n    i0.ɵɵtemplate(10, PdfToolsComponent_section_49_ng_container_10_Template, 4, 0, \"ng-container\", 33)(11, PdfToolsComponent_section_49_ng_container_11_Template, 5, 1, \"ng-container\", 33);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function PdfToolsComponent_section_49_Template_button_click_12_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.uploadSingleFile(\"jpg-to-pdf\"));\n    });\n    i0.ɵɵtemplate(13, PdfToolsComponent_section_49_ng_container_13_Template, 3, 0, \"ng-container\", 33)(14, PdfToolsComponent_section_49_ng_container_14_Template, 3, 1, \"ng-container\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(15, PdfToolsComponent_section_49_div_15_Template, 4, 3, \"div\", 35)(16, PdfToolsComponent_section_49_div_16_Template, 7, 1, \"div\", 36)(17, PdfToolsComponent_section_49_div_17_Template, 5, 1, \"div\", 37);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵclassProp(\"drag-over\", ctx_r1.isDraggingJpgToPdf);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.selectedFileJpgToPdf);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.selectedFileJpgToPdf);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(11, _c4, !ctx_r1.selectedFileJpgToPdf || ctx_r1.progressJpgToPdf === 0, ctx_r1.progressJpgToPdf > 0 && ctx_r1.progressJpgToPdf < 100))(\"disabled\", !ctx_r1.selectedFileJpgToPdf || ctx_r1.progressJpgToPdf > 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.progressJpgToPdf === 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.progressJpgToPdf > 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.progressJpgToPdf > 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.downloadUrlJpgToPdf);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.errorMessageJpgToPdf);\n  }\n}\nfunction PdfToolsComponent_section_50_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"section\", 27)(1, \"div\", 28)(2, \"h2\");\n    i0.ɵɵtext(3, \"\\uD83D\\uDCC4 PDF to Word Unveiling\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 29);\n    i0.ɵɵtext(5, \"Unlock the secrets within your PDFs, converting them to editable Word files.\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"label\", 54);\n    i0.ɵɵelement(7, \"input\", 55);\n    i0.ɵɵelementStart(8, \"div\", 56);\n    i0.ɵɵelement(9, \"i\", 57);\n    i0.ɵɵelementStart(10, \"span\");\n    i0.ɵɵtext(11, \"Click to unveil your PDF\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(12, \"button\", 58);\n    i0.ɵɵelement(13, \"i\", 59);\n    i0.ɵɵtext(14, \" Unveil Word Document\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 51);\n    i0.ɵɵlistener(\"click\", function PdfToolsComponent_section_50_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      ctx_r1.reset(\"pdf-to-word\");\n      return i0.ɵɵresetView(ctx_r1.selectedTool = null);\n    });\n    i0.ɵɵtext(16, \"Start New Revelation\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction PdfToolsComponent_section_51_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"section\", 27)(1, \"div\", 28)(2, \"h2\");\n    i0.ɵɵtext(3, \"\\uD83D\\uDCDD Word to PDF Crafting\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 29);\n    i0.ɵɵtext(5, \"Craft your Word documents into immutable PDF scrolls.\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"label\", 54);\n    i0.ɵɵelement(7, \"input\", 60);\n    i0.ɵɵelementStart(8, \"div\", 56);\n    i0.ɵɵelement(9, \"i\", 61);\n    i0.ɵɵelementStart(10, \"span\");\n    i0.ɵɵtext(11, \"Click to craft your Word file\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(12, \"button\", 58);\n    i0.ɵɵelement(13, \"i\", 62);\n    i0.ɵɵtext(14, \" Craft PDF Scroll\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 51);\n    i0.ɵɵlistener(\"click\", function PdfToolsComponent_section_51_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r1 = i0.ɵɵnextContext();\n      ctx_r1.reset(\"word-to-pdf\");\n      return i0.ɵɵresetView(ctx_r1.selectedTool = null);\n    });\n    i0.ɵɵtext(16, \"Begin New Craft\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction PdfToolsComponent_section_52_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"section\", 27)(1, \"div\", 28)(2, \"h2\");\n    i0.ɵɵtext(3, \"\\uD83C\\uDFB4 Image Fusion to PDF\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 29);\n    i0.ɵɵtext(5, \"Fuse multiple images into a single, cohesive PDF artifact.\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"label\", 63);\n    i0.ɵɵelement(7, \"input\", 64);\n    i0.ɵɵelementStart(8, \"div\", 39);\n    i0.ɵɵelement(9, \"i\", 65);\n    i0.ɵɵelementStart(10, \"p\");\n    i0.ɵɵtext(11, \"Click to gather or drag & drop images to fuse\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(12, \"button\", 58);\n    i0.ɵɵelement(13, \"i\", 66);\n    i0.ɵɵtext(14, \" Fuse Images into PDF\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 51);\n    i0.ɵɵlistener(\"click\", function PdfToolsComponent_section_52_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r1 = i0.ɵɵnextContext();\n      ctx_r1.reset(\"merge-images-to-pdf\");\n      return i0.ɵɵresetView(ctx_r1.selectedTool = null);\n    });\n    i0.ɵɵtext(16, \"Start New Fusion\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let PdfToolsComponent = /*#__PURE__*/(() => {\n  class PdfToolsComponent {\n    http;\n    route;\n    // --- State for JPG/PNG to PDF ---\n    selectedFileJpgToPdf = null;\n    isDraggingJpgToPdf = false;\n    progressJpgToPdf = 0;\n    downloadUrlJpgToPdf = '';\n    errorMessageJpgToPdf = '';\n    uploadSubscriptionJpgToPdf = null;\n    fileInputJpgToPdf;\n    // --- State for PDF to Word ---\n    selectedFilePdfToWord = null;\n    isDraggingPdfToWord = false;\n    progressPdfToWord = 0;\n    downloadUrlPdfToWord = '';\n    errorMessagePdfToWord = '';\n    uploadSubscriptionPdfToWord = null;\n    fileInputPdfToWord;\n    // --- State for Word to PDF ---\n    selectedFileWordToPdf = null;\n    isDraggingWordToPdf = false;\n    progressWordToPdf = 0;\n    downloadUrlWordToPdf = '';\n    errorMessageWordToPdf = '';\n    uploadSubscriptionWordToPdf = null;\n    fileInputWordToPdf;\n    // --- State for Merge Images to PDF ---\n    selectedFilesMergeImagesToPdf = [];\n    previewUrlMergeImagesToPdf = '';\n    progressMergeImagesToPdf = 0;\n    downloadUrlMergeImagesToPdf = '';\n    errorMessageMergeImagesToPdf = '';\n    uploadSubscriptionMergeImagesToPdf = null;\n    fileInputMergeImagesToPdf;\n    // Usage Control for Merge Images to PDF (retained from your original code)\n    isPremiumUserMerge = false;\n    freeUsesLimitMerge = 999999;\n    freeUsesRemainingMerge = this.freeUsesLimitMerge;\n    freeFileLimitMerge = 20;\n    constructor(http, route) {\n      this.http = http;\n      this.route = route;\n    }\n    ngOnInit() {\n      this.checkUserStatusMerge();\n      this.freeUsesRemainingMerge = this.freeUsesLimitMerge; // Ensure high limit on init\n    }\n    ngOnDestroy() {\n      // Unsubscribe from all potential active subscriptions\n      this.unsubscribeUpload('jpg-to-pdf');\n      this.unsubscribeUpload('pdf-to-word');\n      this.unsubscribeUpload('word-to-pdf');\n      this.unsubscribeUpload('merge-images-to-pdf');\n    }\n    // --- Unified Reset Logic ---\n    // Resets state for a specific tool or all tools if no type is provided\n    reset(toolType) {\n      if (toolType) {\n        this.unsubscribeUpload(toolType);\n        switch (toolType) {\n          case 'jpg-to-pdf':\n            this.selectedFileJpgToPdf = null;\n            this.isDraggingJpgToPdf = false;\n            this.progressJpgToPdf = 0;\n            this.downloadUrlJpgToPdf = '';\n            this.errorMessageJpgToPdf = '';\n            if (this.fileInputJpgToPdf) this.fileInputJpgToPdf.nativeElement.value = '';\n            break;\n          case 'pdf-to-word':\n            this.selectedFilePdfToWord = null;\n            this.isDraggingPdfToWord = false;\n            this.progressPdfToWord = 0;\n            this.downloadUrlPdfToWord = '';\n            this.errorMessagePdfToWord = '';\n            if (this.fileInputPdfToWord) this.fileInputPdfToWord.nativeElement.value = '';\n            break;\n          case 'word-to-pdf':\n            this.selectedFileWordToPdf = null;\n            this.isDraggingWordToPdf = false;\n            this.progressWordToPdf = 0;\n            this.downloadUrlWordToPdf = '';\n            this.errorMessageWordToPdf = '';\n            if (this.fileInputWordToPdf) this.fileInputWordToPdf.nativeElement.value = '';\n            break;\n          case 'merge-images-to-pdf':\n            this.selectedFilesMergeImagesToPdf = [];\n            this.previewUrlMergeImagesToPdf = '';\n            this.progressMergeImagesToPdf = 0;\n            this.downloadUrlMergeImagesToPdf = '';\n            this.errorMessageMergeImagesToPdf = '';\n            this.freeUsesRemainingMerge = this.freeUsesLimitMerge; // Reset usage for merge\n            if (this.fileInputMergeImagesToPdf) this.fileInputMergeImagesToPdf.nativeElement.value = '';\n            break;\n        }\n      } else {\n        // Reset all if no specific toolType is provided\n        this.reset('jpg-to-pdf');\n        this.reset('pdf-to-word');\n        this.reset('word-to-pdf');\n        this.reset('merge-images-to-pdf');\n      }\n    }\n    // --- Single File Conversion Methods (Unified with toolType) ---\n    onFileSelectedSingle(event, toolType) {\n      const input = event.target;\n      const file = input.files?.[0] || null;\n      if (file) {\n        const acceptedTypes = this.getFileAcceptTypes(toolType);\n        const isFileTypeAccepted = this.checkFileType(file, acceptedTypes);\n        if (isFileTypeAccepted) {\n          this.resetStateForNewUpload(toolType); // Reset relevant states first\n          switch (toolType) {\n            case 'jpg-to-pdf':\n              this.selectedFileJpgToPdf = file;\n              break;\n            case 'pdf-to-word':\n              this.selectedFilePdfToWord = file;\n              break;\n            case 'word-to-pdf':\n              this.selectedFileWordToPdf = file;\n              break;\n          }\n        } else {\n          this.setErrorMessage(toolType, `Unsupported file type for this tool. Please select a valid file.`);\n          this.reset(toolType);\n        }\n      } else {\n        this.reset(toolType); // Clear selection if no file picked\n      }\n    }\n    onDragOverSingle(event, toolType) {\n      event.preventDefault();\n      event.stopPropagation();\n      switch (toolType) {\n        case 'jpg-to-pdf':\n          this.isDraggingJpgToPdf = true;\n          break;\n        case 'pdf-to-word':\n          this.isDraggingPdfToWord = true;\n          break;\n        case 'word-to-pdf':\n          this.isDraggingWordToPdf = true;\n          break;\n      }\n    }\n    onDragLeaveSingle(event, toolType) {\n      event.stopPropagation();\n      switch (toolType) {\n        case 'jpg-to-pdf':\n          this.isDraggingJpgToPdf = false;\n          break;\n        case 'pdf-to-word':\n          this.isDraggingPdfToWord = false;\n          break;\n        case 'word-to-pdf':\n          this.isDraggingWordToPdf = false;\n          break;\n      }\n    }\n    onDropSingle(event, toolType) {\n      event.preventDefault();\n      event.stopPropagation();\n      switch (toolType) {\n        case 'jpg-to-pdf':\n          this.isDraggingJpgToPdf = false;\n          break;\n        case 'pdf-to-word':\n          this.isDraggingPdfToWord = false;\n          break;\n        case 'word-to-pdf':\n          this.isDraggingWordToPdf = false;\n          break;\n      }\n      const files = event.dataTransfer?.files;\n      if (files && files.length > 0) {\n        const file = files[0];\n        const acceptedTypes = this.getFileAcceptTypes(toolType);\n        const isFileTypeAccepted = this.checkFileType(file, acceptedTypes);\n        if (isFileTypeAccepted) {\n          this.resetStateForNewUpload(toolType);\n          switch (toolType) {\n            case 'jpg-to-pdf':\n              this.selectedFileJpgToPdf = file;\n              break;\n            case 'pdf-to-word':\n              this.selectedFilePdfToWord = file;\n              break;\n            case 'word-to-pdf':\n              this.selectedFileWordToPdf = file;\n              break;\n          }\n        } else {\n          this.setErrorMessage(toolType, `Unsupported file type for this tool. Please select a valid file.`);\n          this.reset(toolType);\n        }\n      }\n    }\n    uploadSingleFile(toolType) {\n      let fileToUpload = null;\n      let apiUrl = '';\n      let mimeType = '';\n      let fileName = '';\n      // Determine which file and API to use based on toolType\n      switch (toolType) {\n        case 'jpg-to-pdf':\n          fileToUpload = this.selectedFileJpgToPdf;\n          apiUrl = 'http://127.0.0.1:8000/api/jpg-to-pdf';\n          mimeType = 'application/pdf';\n          fileName = 'converted_image.pdf';\n          break;\n        case 'pdf-to-word':\n          fileToUpload = this.selectedFilePdfToWord;\n          apiUrl = 'http://127.0.0.1:8000/api/pdf-to-word';\n          mimeType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';\n          fileName = 'converted_pdf.docx';\n          break;\n        case 'word-to-pdf':\n          fileToUpload = this.selectedFileWordToPdf;\n          apiUrl = 'http://127.0.0.1:8000/api/word-to-pdf';\n          mimeType = 'application/pdf';\n          fileName = 'converted_word.pdf';\n          break;\n        default:\n          this.setErrorMessage(toolType, 'Invalid conversion tool selected.');\n          this.reset(toolType);\n          return;\n      }\n      if (!fileToUpload) {\n        this.setErrorMessage(toolType, 'Please select a file to convert.');\n        return;\n      }\n      this.resetStateForNewUpload(toolType); // Reset states before starting new upload\n      this.setProgress(toolType, 1); // Start progress bar immediately\n      const formData = new FormData();\n      formData.append('file', fileToUpload);\n      const subscription = this.http.post(apiUrl, formData, {\n        responseType: 'blob',\n        reportProgress: true,\n        observe: 'events'\n      }).subscribe({\n        next: event => {\n          if (event.type === HttpEventType.UploadProgress && event.total) {\n            this.setProgress(toolType, Math.round(event.loaded / event.total * 100));\n          }\n          if (event.type === HttpEventType.Response) {\n            this.setProgress(toolType, 100); // Ensure 100% on completion\n            const blob = new Blob([event.body], {\n              type: mimeType\n            });\n            const url = URL.createObjectURL(blob);\n            this.setDownloadUrl(toolType, url); // Set download URL for success message\n            // Programmatically trigger download\n            setTimeout(() => {\n              const anchor = document.createElement('a');\n              anchor.href = url;\n              anchor.download = fileName;\n              document.body.appendChild(anchor);\n              anchor.click();\n              document.body.removeChild(anchor);\n              URL.revokeObjectURL(url);\n              // After successful download and revocation, you might want to reset the specific tool's state\n              // Or let the user click the \"New Conversion\" button.\n              // For single files, auto-reset is often user-friendly after direct download.\n              this.reset(toolType);\n            }, 500);\n          }\n        },\n        error: error => {\n          this.handleUploadError(error, toolType);\n          this.reset(toolType);\n        },\n        complete: () => {\n          this.unsubscribeUpload(toolType);\n        }\n      });\n      // Assign the subscription to the correct tool's property\n      switch (toolType) {\n        case 'jpg-to-pdf':\n          this.uploadSubscriptionJpgToPdf = subscription;\n          break;\n        case 'pdf-to-word':\n          this.uploadSubscriptionPdfToWord = subscription;\n          break;\n        case 'word-to-pdf':\n          this.uploadSubscriptionWordToPdf = subscription;\n          break;\n      }\n    }\n    // --- Merge Images to PDF Methods (Specific to this tool) ---\n    onFilesSelectedMultiple(event, toolType) {\n      if (toolType !== 'merge-images-to-pdf') return;\n      const input = event.target;\n      if (input.files) {\n        this.selectedFilesMergeImagesToPdf = Array.from(input.files).filter(file => file.type.startsWith('image/'));\n        this.resetStateForNewUpload(toolType); // Reset common states\n        this.selectedFileJpgToPdf = null; // Ensure other single files are cleared\n        if (this.selectedFilesMergeImagesToPdf.length > 0) {\n          this.previewFirstImage();\n        } else {\n          this.previewUrlMergeImagesToPdf = '';\n        }\n        // Check limits\n        this.checkMergeLimits();\n      }\n    }\n    onFilesDroppedMultiple(event, toolType) {\n      this.preventDefaults(event);\n      if (toolType !== 'merge-images-to-pdf') return;\n      const files = event.dataTransfer?.files;\n      if (files && files.length > 0) {\n        this.selectedFilesMergeImagesToPdf = Array.from(files).filter(file => file.type.startsWith('image/'));\n        this.resetStateForNewUpload(toolType);\n        this.selectedFileJpgToPdf = null; // Ensure other single files are cleared\n        if (this.selectedFilesMergeImagesToPdf.length > 0) {\n          this.previewFirstImage();\n        } else {\n          this.previewUrlMergeImagesToPdf = '';\n        }\n        // Check limits\n        this.checkMergeLimits();\n      }\n    }\n    preventDefaults(event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    checkUserStatusMerge() {\n      // This is where you'd typically check user's premium status from an auth service\n      // For now, it's hardcoded to false as per your original request.\n      this.isPremiumUserMerge = false;\n    }\n    incrementDailyUsageMerge() {\n      if (!this.isPremiumUserMerge) {\n        this.freeUsesRemainingMerge--;\n        // You might store this in localStorage or session storage if you need persistence\n        // between page reloads, but given the very high limit, it's less critical.\n      }\n    }\n    checkMergeLimits() {\n      if (!this.isPremiumUserMerge) {\n        if (this.freeUsesRemainingMerge <= 0) {\n          this.setErrorMessage('merge-images-to-pdf', 'Daily free merge limit reached! Please upgrade to Premium for unlimited use.');\n        } else if (this.selectedFilesMergeImagesToPdf.length > this.freeFileLimitMerge) {\n          this.setErrorMessage('merge-images-to-pdf', `Free users can merge up to ${this.freeFileLimitMerge} images at once.`);\n        } else {\n          this.setErrorMessage('merge-images-to-pdf', ''); // Clear error if within limits\n        }\n      } else {\n        this.setErrorMessage('merge-images-to-pdf', ''); // Clear error for premium users\n      }\n    }\n    uploadMultipleFiles() {\n      const toolType = 'merge-images-to-pdf';\n      if (!this.selectedFilesMergeImagesToPdf.length) {\n        this.setErrorMessage(toolType, 'Please select images to merge.');\n        return;\n      }\n      if (!this.isPremiumUserMerge) {\n        if (this.freeUsesRemainingMerge <= 0) {\n          this.setErrorMessage(toolType, 'Daily free merge limit reached! Please upgrade to Premium for unlimited use.');\n          return;\n        }\n        if (this.selectedFilesMergeImagesToPdf.length > this.freeFileLimitMerge) {\n          this.setErrorMessage(toolType, `Free users can merge up to ${this.freeFileLimitMerge} images at once. Consider upgrading.`);\n          return;\n        }\n      }\n      this.resetStateForNewUpload(toolType); // Reset states before starting new upload\n      this.setProgress(toolType, 1); // Start progress bar immediately\n      const formData = new FormData();\n      this.selectedFilesMergeImagesToPdf.forEach(file => formData.append('files', file)); // 'files' is the backend expected field name\n      const subscription = this.http.post('http://127.0.0.1:8000/api/merge-images-to-pdf', formData, {\n        responseType: 'blob',\n        reportProgress: true,\n        observe: 'events'\n      }).subscribe({\n        next: event => {\n          if (event.type === HttpEventType.UploadProgress && event.total) {\n            this.setProgress(toolType, Math.round(event.loaded / event.total * 100));\n          }\n          if (event.type === HttpEventType.Response) {\n            this.setProgress(toolType, 100); // Ensure 100% on completion\n            if (event.body) {\n              const blob = new Blob([event.body], {\n                type: 'application/pdf'\n              });\n              const url = URL.createObjectURL(blob);\n              this.setDownloadUrl(toolType, url); // Set download URL for success message\n              // Programmatically trigger download\n              const link = document.createElement('a');\n              link.href = url;\n              link.download = 'merged_images.pdf';\n              document.body.appendChild(link);\n              link.click();\n              document.body.removeChild(link);\n              URL.revokeObjectURL(url);\n              this.incrementDailyUsageMerge(); // Increment usage upon successful merge\n            } else {\n              this.setErrorMessage(toolType, 'PDF creation failed: Empty response from server.');\n              this.setProgress(toolType, 0);\n            }\n          }\n        },\n        error: error => {\n          this.handleUploadError(error, toolType);\n        },\n        complete: () => {\n          this.unsubscribeUpload(toolType);\n        }\n      });\n      this.uploadSubscriptionMergeImagesToPdf = subscription;\n    }\n    previewFirstImage() {\n      if (this.selectedFilesMergeImagesToPdf.length > 0) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          this.previewUrlMergeImagesToPdf = e.target.result;\n        };\n        reader.readAsDataURL(this.selectedFilesMergeImagesToPdf[0]);\n      } else {\n        this.previewUrlMergeImagesToPdf = '';\n      }\n    }\n    // --- Helper methods to manage individual tool states ---\n    setProgress(toolType, value) {\n      switch (toolType) {\n        case 'jpg-to-pdf':\n          this.progressJpgToPdf = value;\n          break;\n        case 'pdf-to-word':\n          this.progressPdfToWord = value;\n          break;\n        case 'word-to-pdf':\n          this.progressWordToPdf = value;\n          break;\n        case 'merge-images-to-pdf':\n          this.progressMergeImagesToPdf = value;\n          break;\n      }\n    }\n    setDownloadUrl(toolType, url) {\n      switch (toolType) {\n        case 'jpg-to-pdf':\n          this.downloadUrlJpgToPdf = url;\n          break;\n        case 'pdf-to-word':\n          this.downloadUrlPdfToWord = url;\n          break;\n        case 'word-to-pdf':\n          this.downloadUrlWordToPdf = url;\n          break;\n        case 'merge-images-to-pdf':\n          this.downloadUrlMergeImagesToPdf = url;\n          break;\n      }\n    }\n    setErrorMessage(toolType, message) {\n      switch (toolType) {\n        case 'jpg-to-pdf':\n          this.errorMessageJpgToPdf = message;\n          break;\n        case 'pdf-to-word':\n          this.errorMessagePdfToWord = message;\n          break;\n        case 'word-to-pdf':\n          this.errorMessageWordToPdf = message;\n          break;\n        case 'merge-images-to-pdf':\n          this.errorMessageMergeImagesToPdf = message;\n          break;\n      }\n    }\n    resetStateForNewUpload(toolType) {\n      this.setProgress(toolType, 0);\n      this.setDownloadUrl(toolType, '');\n      this.setErrorMessage(toolType, '');\n      // Clear other tool's selected files if any to prevent confusion\n      // (Optional, depends on UX preference)\n      switch (toolType) {\n        case 'jpg-to-pdf':\n          this.selectedFilePdfToWord = null;\n          this.selectedFileWordToPdf = null;\n          this.selectedFilesMergeImagesToPdf = [];\n          this.previewUrlMergeImagesToPdf = '';\n          break;\n        case 'pdf-to-word':\n          this.selectedFileJpgToPdf = null;\n          this.selectedFileWordToPdf = null;\n          this.selectedFilesMergeImagesToPdf = [];\n          this.previewUrlMergeImagesToPdf = '';\n          break;\n        case 'word-to-pdf':\n          this.selectedFileJpgToPdf = null;\n          this.selectedFilePdfToWord = null;\n          this.selectedFilesMergeImagesToPdf = [];\n          this.previewUrlMergeImagesToPdf = '';\n          break;\n        case 'merge-images-to-pdf':\n          this.selectedFileJpgToPdf = null;\n          this.selectedFilePdfToWord = null;\n          this.selectedFileWordToPdf = null;\n          break;\n      }\n      // Explicitly clear file input elements for the selected tool\n      if (toolType === 'jpg-to-pdf' && this.fileInputJpgToPdf) this.fileInputJpgToPdf.nativeElement.value = '';\n      if (toolType === 'pdf-to-word' && this.fileInputPdfToWord) this.fileInputPdfToWord.nativeElement.value = '';\n      if (toolType === 'word-to-pdf' && this.fileInputWordToPdf) this.fileInputWordToPdf.nativeElement.value = '';\n      if (toolType === 'merge-images-to-pdf' && this.fileInputMergeImagesToPdf) this.fileInputMergeImagesToPdf.nativeElement.value = '';\n    }\n    handleUploadError(error, toolType) {\n      console.error(`Upload error for ${toolType}:`, error);\n      this.setProgress(toolType, 0);\n      let errorMessageText = '';\n      if (error.error instanceof ErrorEvent) {\n        errorMessageText = `An error occurred: ${error.error.message}`;\n      } else {\n        if (error.error instanceof Blob && error.error.type === 'application/json') {\n          const reader = new FileReader();\n          reader.onload = () => {\n            try {\n              const errorBody = JSON.parse(reader.result);\n              errorMessageText = errorBody.detail || `Server responded with ${error.status}: ${error.statusText || 'Unknown error'}.`;\n            } catch (e) {\n              errorMessageText = `Server responded with ${error.status}: ${error.statusText || 'Unknown error'}.`;\n            }\n          };\n          reader.readAsText(error.error);\n        } else {\n          errorMessageText = `Server responded with ${error.status}: ${error.statusText || 'Unknown error'}.`;\n        }\n        if (error.status === 0) {\n          errorMessageText = 'Could not connect to the server. Please ensure the backend is running.';\n        }\n        if (error.status === 403) {\n          errorMessageText = errorMessageText || 'You have reached your daily limit or exceeded file count for the free plan.';\n        }\n      }\n      this.setErrorMessage(toolType, errorMessageText);\n    }\n    unsubscribeUpload(toolType) {\n      switch (toolType) {\n        case 'jpg-to-pdf':\n          if (this.uploadSubscriptionJpgToPdf) {\n            this.uploadSubscriptionJpgToPdf.unsubscribe();\n            this.uploadSubscriptionJpgToPdf = null;\n          }\n          break;\n        case 'pdf-to-word':\n          if (this.uploadSubscriptionPdfToWord) {\n            this.uploadSubscriptionPdfToWord.unsubscribe();\n            this.uploadSubscriptionPdfToWord = null;\n          }\n          break;\n        case 'word-to-pdf':\n          if (this.uploadSubscriptionWordToPdf) {\n            this.uploadSubscriptionWordToPdf.unsubscribe();\n            this.uploadSubscriptionWordToPdf = null;\n          }\n          break;\n        case 'merge-images-to-pdf':\n          if (this.uploadSubscriptionMergeImagesToPdf) {\n            this.uploadSubscriptionMergeImagesToPdf.unsubscribe();\n            this.uploadSubscriptionMergeImagesToPdf = null;\n          }\n          break;\n      }\n    }\n    // Helper for more robust file type checking (can be expanded)\n    getFileAcceptTypes(toolType) {\n      switch (toolType) {\n        case 'jpg-to-pdf':\n          return 'image/jpeg, image/png';\n        // More specific for JPG/PNG\n        case 'pdf-to-word':\n          return 'application/pdf';\n        case 'word-to-pdf':\n          return 'application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/msword';\n        // .docx and .doc\n        case 'merge-images-to-pdf':\n          return 'image/jpeg, image/png, image/gif, image/bmp, image/webp';\n        // Common image types\n        default:\n          return '*/*';\n        // Fallback, though should be avoided with specific tools\n      }\n    }\n    checkFileType(file, acceptedTypes) {\n      const acceptedTypesArray = acceptedTypes.split(',').map(type => type.trim());\n      const fileType = file.type;\n      const fileNameLower = file.name.toLowerCase();\n      // Check for direct MIME type match or wildcard (e.g., 'image/*')\n      if (acceptedTypesArray.some(acceptedType => {\n        if (acceptedType.endsWith('/*')) {\n          return fileType.startsWith(acceptedType.slice(0, -1)); // e.g., 'image/' matches 'image/*'\n        }\n        return fileType === acceptedType;\n      })) {\n        return true;\n      }\n      // Fallback to extension check for common cases or when MIME types might be inconsistent\n      if (acceptedTypes.includes('.pdf') && fileNameLower.endsWith('.pdf')) return true;\n      if (acceptedTypes.includes('.docx') && (fileNameLower.endsWith('.docx') || fileNameLower.endsWith('.doc'))) return true; // Include .doc for Word\n      if (acceptedTypes.includes('image/') && (fileNameLower.endsWith('.jpg') || fileNameLower.endsWith('.jpeg') || fileNameLower.endsWith('.png') || fileNameLower.endsWith('.gif') || fileNameLower.endsWith('.bmp') || fileNameLower.endsWith('.webp'))) return true;\n      return false;\n    }\n    static ɵfac = function PdfToolsComponent_Factory(t) {\n      return new (t || PdfToolsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PdfToolsComponent,\n      selectors: [[\"app-pdf-tools\"]],\n      viewQuery: function PdfToolsComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(_c1, 5);\n          i0.ɵɵviewQuery(_c2, 5);\n          i0.ɵɵviewQuery(_c3, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInputJpgToPdf = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInputPdfToWord = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInputWordToPdf = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInputMergeImagesToPdf = _t.first);\n        }\n      },\n      decls: 53,\n      vars: 14,\n      consts: [[\"fileInputJpgToPdf\", \"\"], [1, \"tool-page-container\"], [1, \"page-header\", \"animate__animated\", \"animate__fadeInDown\"], [1, \"page-sub-heading\"], [1, \"aurora-canvas\"], [1, \"tool-orb-wrapper\", \"animate__animated\", \"animate__zoomIn\", \"delayed-1\", 3, \"click\"], [\"data-tool-id\", \"jpg-to-pdf\", 1, \"tool-orb\"], [1, \"fas\", \"fa-image\", \"orb-icon\"], [1, \"orb-name\"], [1, \"tool-description\"], [1, \"tool-orb-wrapper\", \"animate__animated\", \"animate__zoomIn\", \"delayed-2\", 3, \"click\"], [\"data-tool-id\", \"pdf-to-word\", 1, \"tool-orb\"], [1, \"fas\", \"fa-file-word\", \"orb-icon\"], [1, \"tool-orb-wrapper\", \"animate__animated\", \"animate__zoomIn\", \"delayed-3\", 3, \"click\"], [\"data-tool-id\", \"word-to-pdf\", 1, \"tool-orb\"], [1, \"fas\", \"fa-file-pdf\", \"orb-icon\"], [1, \"tool-orb-wrapper\", \"animate__animated\", \"animate__zoomIn\", \"delayed-4\", 3, \"click\"], [\"data-tool-id\", \"merge-images-to-pdf\", 1, \"tool-orb\"], [1, \"fas\", \"fa-images\", \"orb-icon\"], [1, \"tool-orb-wrapper\", \"animate__animated\", \"animate__zoomIn\", \"delayed-5\", \"ad-orb-wrapper\"], [1, \"tool-orb\", \"ad-orb\"], [1, \"fas\", \"fa-bullhorn\", \"orb-icon\"], [1, \"ad-orb-content\"], [1, \"ad-label\"], [1, \"placeholder-ad\"], [1, \"dynamic-content-area\"], [\"class\", \"conversion-section active-tool-content animate__animated animate__fadeInUp\", 4, \"ngIf\"], [1, \"conversion-section\", \"active-tool-content\", \"animate__animated\", \"animate__fadeInUp\"], [1, \"card-header\"], [1, \"section-description\"], [1, \"upload-box\", \"single-file-upload\", \"animate__animated\", \"animate__fadeInUp\", 3, \"dragover\", \"dragleave\", \"drop\"], [\"type\", \"file\", \"accept\", \"image/jpeg, image/png\", \"hidden\", \"\", 3, \"change\"], [1, \"upload-text\", 3, \"click\"], [4, \"ngIf\"], [1, \"convert-btn\", \"animate__animated\", 3, \"click\", \"ngClass\", \"disabled\"], [\"class\", \"progress-container animate__animated animate__fadeIn\", 4, \"ngIf\"], [\"class\", \"download-section animate__animated animate__zoomIn\", 4, \"ngIf\"], [\"class\", \"error-section animate__animated animate__shakeX\", 4, \"ngIf\"], [1, \"fas\", \"fa-cloud-upload-alt\", \"upload-icon\", \"animate__animated\", \"animate__bounceIn\"], [1, \"upload-prompt\"], [1, \"file-selected\", \"animate__animated\", \"animate__fadeIn\"], [1, \"fas\", \"fa-check-circle\", \"success-icon\"], [1, \"file-name\"], [1, \"fas\", \"fa-magic\", \"launch-icon\"], [1, \"fas\", \"fa-spinner\", \"fa-spin\"], [1, \"progress-container\", \"animate__animated\", \"animate__fadeIn\"], [1, \"progress-bar\"], [1, \"progress-text\"], [1, \"download-section\", \"animate__animated\", \"animate__zoomIn\"], [1, \"success-message\"], [\"download\", \"image_to_pdf.pdf\", 1, \"download-link\", \"animate__animated\", \"animate__heartBeat\", 3, \"href\"], [\"type\", \"button\", 1, \"reset-btn\", \"animate__animated\", \"animate__fadeIn\", 3, \"click\"], [1, \"error-section\", \"animate__animated\", \"animate__shakeX\"], [1, \"error-message\"], [1, \"upload-box\", \"single-file-upload\"], [\"type\", \"file\", \"accept\", \"application/pdf\", \"hidden\", \"\"], [1, \"upload-text\"], [1, \"fas\", \"fa-file-pdf\", \"upload-icon\"], [1, \"convert-btn\"], [1, \"fas\", \"fa-spell-check\", \"launch-icon\"], [\"type\", \"file\", \"accept\", \".doc,.docx\", \"hidden\", \"\"], [1, \"fas\", \"fa-file-word\", \"upload-icon\"], [1, \"fas\", \"fa-hat-wizard\", \"launch-icon\"], [1, \"upload-box\", \"merge-images-upload-area\"], [\"type\", \"file\", \"accept\", \"image/*\", \"multiple\", \"\", \"hidden\", \"\"], [1, \"fas\", \"fa-layer-group\", \"upload-icon\"], [1, \"fas\", \"fa-gem\", \"launch-icon\"]],\n      template: function PdfToolsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"header\", 2)(2, \"h1\");\n          i0.ɵɵtext(3, \"\\u2728 The PDF & Image Alchemy Lab \\u2728\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"p\", 3);\n          i0.ɵɵtext(5, \"Transforming documents with a touch of magic.\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"div\", 4)(7, \"div\", 5);\n          i0.ɵɵlistener(\"click\", function PdfToolsComponent_Template_div_click_7_listener() {\n            return ctx.selectTool(\"jpg-to-pdf\");\n          });\n          i0.ɵɵelementStart(8, \"div\", 6);\n          i0.ɵɵelement(9, \"i\", 7);\n          i0.ɵɵelementStart(10, \"span\", 8);\n          i0.ɵɵtext(11, \"JPG/PNG to PDF\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"div\", 9);\n          i0.ɵɵtext(13, \"Convert your images into a single, high-quality PDF document.\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"div\", 10);\n          i0.ɵɵlistener(\"click\", function PdfToolsComponent_Template_div_click_14_listener() {\n            return ctx.selectTool(\"pdf-to-word\");\n          });\n          i0.ɵɵelementStart(15, \"div\", 11);\n          i0.ɵɵelement(16, \"i\", 12);\n          i0.ɵɵelementStart(17, \"span\", 8);\n          i0.ɵɵtext(18, \"PDF to Word\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"div\", 9);\n          i0.ɵɵtext(20, \"Transform your PDF documents into editable Word files.\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(21, \"div\", 13);\n          i0.ɵɵlistener(\"click\", function PdfToolsComponent_Template_div_click_21_listener() {\n            return ctx.selectTool(\"word-to-pdf\");\n          });\n          i0.ɵɵelementStart(22, \"div\", 14);\n          i0.ɵɵelement(23, \"i\", 15);\n          i0.ɵɵelementStart(24, \"span\", 8);\n          i0.ɵɵtext(25, \"Word to PDF\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(26, \"div\", 9);\n          i0.ɵɵtext(27, \"Easily convert your Word documents into universally compatible PDF files.\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(28, \"div\", 16);\n          i0.ɵɵlistener(\"click\", function PdfToolsComponent_Template_div_click_28_listener() {\n            return ctx.selectTool(\"merge-images-to-pdf\");\n          });\n          i0.ɵɵelementStart(29, \"div\", 17);\n          i0.ɵɵelement(30, \"i\", 18);\n          i0.ɵɵelementStart(31, \"span\", 8);\n          i0.ɵɵtext(32, \"Merge Images to PDF\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(33, \"div\", 9);\n          i0.ɵɵtext(34, \"Combine multiple images into a single PDF document.\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(35, \"div\", 19)(36, \"div\", 20);\n          i0.ɵɵelement(37, \"i\", 21);\n          i0.ɵɵelementStart(38, \"span\", 8);\n          i0.ɵɵtext(39, \"Advertisements\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(40, \"div\", 22)(41, \"p\", 23);\n          i0.ɵɵtext(42, \"Support Our Tools\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(43, \"div\", 24)(44, \"p\");\n          i0.ɵɵtext(45, \"Your Dynamic Ad Here\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(46, \"small\");\n          i0.ɵɵtext(47, \"Ad content can be animated upon hover/click\");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(48, \"div\", 25);\n          i0.ɵɵtemplate(49, PdfToolsComponent_section_49_Template, 18, 14, \"section\", 26)(50, PdfToolsComponent_section_50_Template, 17, 0, \"section\", 26)(51, PdfToolsComponent_section_51_Template, 17, 0, \"section\", 26)(52, PdfToolsComponent_section_52_Template, 17, 0, \"section\", 26);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵclassProp(\"active\", ctx.selectedTool === \"jpg-to-pdf\");\n          i0.ɵɵadvance(7);\n          i0.ɵɵclassProp(\"active\", ctx.selectedTool === \"pdf-to-word\");\n          i0.ɵɵadvance(7);\n          i0.ɵɵclassProp(\"active\", ctx.selectedTool === \"word-to-pdf\");\n          i0.ɵɵadvance(7);\n          i0.ɵɵclassProp(\"active\", ctx.selectedTool === \"merge-images-to-pdf\");\n          i0.ɵɵadvance(20);\n          i0.ɵɵclassProp(\"active\", ctx.selectedTool !== null);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedTool === \"jpg-to-pdf\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedTool === \"pdf-to-word\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedTool === \"word-to-pdf\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedTool === \"merge-images-to-pdf\");\n        }\n      },\n      dependencies: [i3.NgClass, i3.NgIf],\n      styles: [\"body[_ngcontent-%COMP%]{background:linear-gradient(135deg,#0f0f30,#2a0050);overflow-x:hidden;min-height:100vh;display:flex;flex-direction:column;font-family:Poppins,sans-serif;color:#e0e0e0}.tool-page-container[_ngcontent-%COMP%]{max-width:1400px;margin:0 auto;padding:60px 20px;display:flex;flex-direction:column;align-items:center;position:relative;z-index:1}.page-header[_ngcontent-%COMP%]{text-align:center;margin-bottom:80px;padding:20px 0;position:relative;z-index:2}.page-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:4.8rem;font-weight:900;letter-spacing:-3px;margin-bottom:15px;background:linear-gradient(45deg,#00c6ff,#0072ff);-webkit-background-clip:text;-webkit-text-fill-color:transparent;background-clip:text;color:transparent;text-shadow:0 5px 15px rgba(0,198,255,.4);animation:_ngcontent-%COMP%_textGlow 4s infinite alternate ease-in-out}.page-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]:after{content:\\\"\\\";position:absolute;left:50%;bottom:-20px;transform:translate(-50%) scaleX(0);width:180px;height:8px;background:linear-gradient(90deg,#8effa7,#2cff7b);border-radius:5px;animation:_ngcontent-%COMP%_underlineExpand 1.5s ease-out forwards;animation-delay:.5s}.page-sub-heading[_ngcontent-%COMP%]{font-size:1.8rem;color:#aed581;font-weight:500;margin-top:30px;text-shadow:0 2px 8px rgba(0,255,150,.2);opacity:0;animation:fadeIn 1s ease-out forwards;animation-delay:1s}.aurora-canvas[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100%;overflow:hidden;pointer-events:none;z-index:0;background:radial-gradient(circle at 10% 20%,#1a0a33 0%,transparent 50%),radial-gradient(circle at 90% 80%,#0a331a 0%,transparent 50%);animation:_ngcontent-%COMP%_backgroundPulse 10s infinite alternate}.aurora-canvas[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;justify-content:center;align-items:flex-start;gap:80px 100px;padding:50px 0;min-height:400px;width:100%;position:relative;pointer-events:all}.tool-orb-wrapper[_ngcontent-%COMP%]{position:relative;width:250px;height:250px;perspective:1000px;cursor:pointer;display:flex;flex-direction:column;align-items:center;justify-content:center;transition:transform .6s cubic-bezier(.2,.8,.2,1),opacity .6s ease;z-index:5}.animate__zoomIn[_ngcontent-%COMP%]{opacity:0;transform:scale(0)}.tool-orb-wrapper.active[_ngcontent-%COMP%]{opacity:.4;transform:scale(.9);pointer-events:none}.tool-orb-wrapper[_ngcontent-%COMP%]:hover:not(.active){transform:translateY(-15px) scale(1.05);z-index:10}.tool-orb[_ngcontent-%COMP%]{width:100%;height:100%;background:radial-gradient(circle at center,#3f51b5,#283593);border-radius:50%;display:flex;flex-direction:column;justify-content:center;align-items:center;color:#e3f2fd;box-shadow:0 0 30px #0096ff80,inset 0 0 15px #ffffff4d;transition:all .5s cubic-bezier(.2,.8,.2,1);position:relative;border:3px solid transparent}.tool-orb-wrapper[_ngcontent-%COMP%]:hover   .tool-orb[_ngcontent-%COMP%]:not(.ad-orb){background:radial-gradient(circle at center,#4caf50,#2e7d32);box-shadow:0 0 45px #4caf50cc,inset 0 0 20px #fff6;transform:rotateY(15deg)}.tool-orb-wrapper.active[_ngcontent-%COMP%]   .tool-orb[_ngcontent-%COMP%]{border-color:#ffeb3b;box-shadow:0 0 50px #ffeb3bcc,inset 0 0 25px #ffffff80;background:radial-gradient(circle at center,#ffeb3b,#fbc02d);animation:_ngcontent-%COMP%_orbPulse 1.5s infinite alternate}.orb-icon[_ngcontent-%COMP%]{font-size:6rem;margin-bottom:15px;text-shadow:0 0 15px rgba(255,255,255,.6)}.orb-name[_ngcontent-%COMP%]{font-size:1.8rem;font-weight:700;text-shadow:0 0 10px rgba(255,255,255,.5);color:#fff}.tool-description[_ngcontent-%COMP%]{position:absolute;bottom:-60px;left:50%;transform:translate(-50%);background:#000000b3;color:#e0e0e0;padding:10px 20px;border-radius:10px;font-size:.9rem;white-space:nowrap;opacity:0;pointer-events:none;transition:bottom .3s ease,opacity .3s ease;box-shadow:0 5px 15px #0000004d;z-index:1}.tool-orb-wrapper[_ngcontent-%COMP%]:hover   .tool-description[_ngcontent-%COMP%]{opacity:1;bottom:-40px}.ad-orb[_ngcontent-%COMP%]{background:radial-gradient(circle at center,#ff5722,#d84315);box-shadow:0 0 30px #ff572299,inset 0 0 15px #ffffff4d;animation:_ngcontent-%COMP%_adOrbFloat 6s infinite ease-in-out}.ad-orb[_ngcontent-%COMP%]:hover{background:radial-gradient(circle at center,#ff9800,#fb8c00);box-shadow:0 0 45px #ff9800cc,inset 0 0 20px #fff6}.ad-orb-wrapper[_ngcontent-%COMP%]{pointer-events:auto}.ad-orb-content[_ngcontent-%COMP%]{position:absolute;width:300px;height:250px;background:#ffffff0d;-webkit-backdrop-filter:blur(5px);backdrop-filter:blur(5px);border:1px solid rgba(255,255,255,.2);border-radius:20px;padding:20px;display:flex;flex-direction:column;justify-content:center;align-items:center;opacity:0;pointer-events:none;transition:all .5s ease;transform:scale(.8) translateY(20px);z-index:100;top:50%;left:50%;transform:translate(-50%,-50%) scale(.8) translateY(20px);box-shadow:0 15px 40px #00000080}.ad-orb-wrapper[_ngcontent-%COMP%]:hover   .ad-orb-content[_ngcontent-%COMP%]{opacity:1;pointer-events:auto;transform:translate(-50%,-50%) scale(1) translateY(0)}.ad-label[_ngcontent-%COMP%]{color:#ffcc80;font-size:1rem;margin-bottom:15px;text-transform:uppercase;letter-spacing:1px}.placeholder-ad[_ngcontent-%COMP%]{background-color:#0000004d;color:#ffeb3b;width:100%;height:100%;display:flex;flex-direction:column;justify-content:center;align-items:center;border-radius:10px;border:2px dashed #ffab40;font-size:1rem;padding:10px}.placeholder-ad[_ngcontent-%COMP%]   small[_ngcontent-%COMP%]{font-size:.75rem;margin-top:5px;color:#ffecb3}.dynamic-content-area[_ngcontent-%COMP%]{position:relative;width:100%;min-height:500px;background:#0006;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);border-radius:30px;margin-top:60px;padding:40px;box-shadow:0 0 60px #00c8ff4d;opacity:0;transform:translateY(50px);pointer-events:none;transition:opacity .8s ease,transform .8s cubic-bezier(.2,.8,.2,1);z-index:50;display:flex;justify-content:center;align-items:flex-start}.dynamic-content-area.active[_ngcontent-%COMP%]{opacity:1;transform:translateY(0);pointer-events:auto}.active-tool-content[_ngcontent-%COMP%]{width:100%;max-width:800px;background:#ffffff0d;border-radius:20px;padding:40px;box-shadow:0 0 40px #00ffc833;display:flex;flex-direction:column;align-items:center;color:#e0f2f7;border:1px solid rgba(255,255,255,.1)}.conversion-section[_ngcontent-%COMP%]   .card-header[_ngcontent-%COMP%]{margin-bottom:40px;text-align:center}.conversion-section[_ngcontent-%COMP%]   .card-header[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:2.5rem;color:#7affd4;margin-bottom:15px;font-weight:700;text-shadow:0 0 10px rgba(122,255,212,.6)}.conversion-section[_ngcontent-%COMP%]   .section-description[_ngcontent-%COMP%]{font-size:1.2rem;color:#b3e5fc;font-weight:400;line-height:1.5}.upload-box[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;align-items:center;min-height:180px;padding:30px;border-radius:15px;cursor:pointer;margin:30px auto;width:90%;background-color:#0003;border:2px dashed #80cbc4;transition:all .3s ease;box-shadow:0 0 20px #80cbc44d}.upload-box[_ngcontent-%COMP%]:hover{background-color:#0000004d;border-color:#26a69a;box-shadow:0 0 30px #26a69a80;transform:translateY(-5px)}.upload-box.drag-over[_ngcontent-%COMP%]{background-color:#0006;border-color:#00bcd4;box-shadow:0 0 0 5px #00bcd480}.upload-box[_ngcontent-%COMP%]   .upload-icon[_ngcontent-%COMP%]{font-size:4rem;color:#00bcd4;margin-bottom:10px;animation:bounceIn .8s ease-out forwards}.upload-box[_ngcontent-%COMP%]   .upload-prompt[_ngcontent-%COMP%]{font-size:1.1rem;color:#e0f7fa;font-weight:500}.upload-box[_ngcontent-%COMP%]   .file-selected[_ngcontent-%COMP%]{color:#a7ffeb;font-weight:600;font-size:1.1rem}.upload-box[_ngcontent-%COMP%]   .file-selected[_ngcontent-%COMP%]   .success-icon[_ngcontent-%COMP%]{color:#a7ffeb;font-size:1.5rem}.convert-btn[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;gap:10px;padding:15px 35px;font-size:1.2rem;font-weight:700;color:#fff;border:none;border-radius:10px;cursor:pointer;transition:all .3s ease-in-out;margin-top:30px;box-shadow:0 8px 25px #00c8ff66;background:linear-gradient(45deg,#00c6ff,#0072ff)}.convert-btn[_ngcontent-%COMP%]:hover:not(:disabled){transform:translateY(-5px) scale(1.02);box-shadow:0 12px 30px #00c8ff99;background:linear-gradient(45deg,#0072ff,#0056e6)}.convert-btn[_ngcontent-%COMP%]:disabled{background:#96969680;color:#aaa;box-shadow:none;cursor:not-allowed;opacity:.6;transform:none;animation:none}.convert-btn[_ngcontent-%COMP%]   .launch-icon[_ngcontent-%COMP%], .convert-btn[_ngcontent-%COMP%]   .fa-spinner[_ngcontent-%COMP%]{font-size:1.3rem}.progress-container[_ngcontent-%COMP%]{width:85%;max-width:500px;height:12px;background-color:#ffffff1a;border-radius:8px;margin:30px auto 15px;overflow:hidden;box-shadow:inset 0 0 5px #0003}.progress-bar[_ngcontent-%COMP%]{height:100%;width:0%;background:linear-gradient(90deg,#ff9800,#ff5722);border-radius:8px;transition:width .4s ease-out;box-shadow:0 0 10px #ff980099}.progress-text[_ngcontent-%COMP%]{font-size:1rem;color:#ffe0b2;font-weight:500;margin-top:8px}.download-section[_ngcontent-%COMP%]{background:#4caf5033;border:1px solid rgba(76,175,80,.4);border-radius:15px;padding:20px;margin-top:30px;box-shadow:0 0 30px #4caf5066;display:flex;flex-direction:column;align-items:center;gap:15px;width:90%;max-width:500px}.download-section[_ngcontent-%COMP%]   .success-message[_ngcontent-%COMP%]{color:#a7ffeb;font-weight:600;font-size:1.1rem}.download-link[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:8px;background:linear-gradient(45deg,#00e676,#00c853);color:#fff;padding:12px 25px;border-radius:10px;text-decoration:none;font-size:1.1rem;font-weight:600;box-shadow:0 5px 20px #00e67666;transition:all .3s ease}.download-link[_ngcontent-%COMP%]:hover{transform:translateY(-3px) scale(1.01);box-shadow:0 8px 25px #00e67699;background:linear-gradient(45deg,#00c853,#00a845)}.error-section[_ngcontent-%COMP%]{background:#f4433633;border:1px solid rgba(244,67,54,.4);border-radius:15px;padding:20px;margin-top:30px;box-shadow:0 0 30px #f4433666;display:flex;flex-direction:column;align-items:center;gap:15px;width:90%;max-width:500px}.error-section[_ngcontent-%COMP%]   .error-message[_ngcontent-%COMP%]{color:#ff8a80;font-weight:600;font-size:1.1rem}.reset-btn[_ngcontent-%COMP%]{background-color:#607d8b99;color:#fff;padding:10px 20px;border:none;border-radius:8px;cursor:pointer;font-size:.95rem;font-weight:500;transition:background-color .3s ease,transform .2s ease;margin-top:15px}.reset-btn[_ngcontent-%COMP%]:hover{background-color:#455a64cc;transform:translateY(-2px)}.merge-section[_ngcontent-%COMP%]   .upload-prompt[_ngcontent-%COMP%]{font-size:1rem}.merge-section[_ngcontent-%COMP%]   .file-types[_ngcontent-%COMP%]{font-size:.85rem;color:#b0bec5}.merge-images-upload-area[_ngcontent-%COMP%]{background-color:#00000040;border:2px dashed #90a4ae;box-shadow:0 0 20px #90a4ae4d}.merge-images-upload-area[_ngcontent-%COMP%]:hover{background-color:#00000059;border-color:#607d8b;box-shadow:0 0 30px #607d8b80}.selected-files-summary[_ngcontent-%COMP%]{background-color:#00e6761a;border:1px solid rgba(0,230,118,.3);color:#a7ffeb;box-shadow:0 0 15px #00e67633}.clear-selection-btn[_ngcontent-%COMP%]{background-color:#f4433699;color:#fff}.clear-selection-btn[_ngcontent-%COMP%]:hover{background-color:#d32f2fcc}.selected-file-list[_ngcontent-%COMP%]{background-color:#ffffff0d;border:1px solid rgba(255,255,255,.1);box-shadow:inset 0 0 5px #0000001a}.selected-file-list[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#b3e5fc}.selected-file-list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{border-bottom:1px solid rgba(255,255,255,.05);color:#e0f7fa}.selected-file-list[_ngcontent-%COMP%]   .file-icon[_ngcontent-%COMP%]{color:#80deea}.image-preview-section[_ngcontent-%COMP%]{background-color:#ffffff14;border:1px solid rgba(255,255,255,.15);box-shadow:0 0 25px #00bcd433}.image-preview-section[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{color:#80deea}.image-preview-wrapper[_ngcontent-%COMP%]{border:3px solid #00bcd4}.preview-caption[_ngcontent-%COMP%]{color:#b2ebf2}.usage-limit-info[_ngcontent-%COMP%]{background-color:#ffeb3b1a;border:1px solid rgba(255,235,59,.3);color:#fffde7;box-shadow:0 0 20px #ffeb3b33}.usage-limit-info[_ngcontent-%COMP%]   .highlight-count[_ngcontent-%COMP%]{color:#ffeb3b}.usage-limit-info[_ngcontent-%COMP%]   .limit-reached-message[_ngcontent-%COMP%]{color:#ff8a80}.usage-limit-info[_ngcontent-%COMP%]   .file-count-warning[_ngcontent-%COMP%]{color:#ffcc80}@keyframes _ngcontent-%COMP%_textGlow{0%{text-shadow:0 5px 15px rgba(0,198,255,.4)}50%{text-shadow:0 5px 25px rgba(0,198,255,.8),0 0 30px rgba(0,198,255,.5)}to{text-shadow:0 5px 15px rgba(0,198,255,.4)}}@keyframes _ngcontent-%COMP%_underlineExpand{0%{transform:translate(-50%) scaleX(0);opacity:0}to{transform:translate(-50%) scaleX(1);opacity:1}}@keyframes _ngcontent-%COMP%_backgroundPulse{0%{background-color:#0f0f30}50%{background-color:#1a0a3a}to{background-color:#0f0f30}}@keyframes _ngcontent-%COMP%_orbPulse{0%{transform:scale(1);box-shadow:0 0 50px #ffeb3bcc,inset 0 0 25px #ffffff80}50%{transform:scale(1.02);box-shadow:0 0 65px #ffeb3b,inset 0 0 30px #ffffffb3}to{transform:scale(1);box-shadow:0 0 50px #ffeb3bcc,inset 0 0 25px #ffffff80}}@keyframes _ngcontent-%COMP%_adOrbFloat{0%{transform:translateY(0) rotate(0)}25%{transform:translateY(-5px) rotate(2deg)}50%{transform:translateY(0) rotate(0)}75%{transform:translateY(5px) rotate(-2deg)}to{transform:translateY(0) rotate(0)}}@media (max-width: 1200px){.aurora-canvas[_ngcontent-%COMP%]{gap:60px 80px}.tool-orb-wrapper[_ngcontent-%COMP%]{width:200px;height:200px}.orb-icon[_ngcontent-%COMP%]{font-size:5rem}.orb-name[_ngcontent-%COMP%]{font-size:1.5rem}.page-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:4rem}.page-sub-heading[_ngcontent-%COMP%]{font-size:1.6rem}.active-tool-content[_ngcontent-%COMP%]{padding:30px}}@media (max-width: 992px){.tool-page-container[_ngcontent-%COMP%]{padding:40px 15px}.aurora-canvas[_ngcontent-%COMP%]{flex-direction:column;align-items:center;gap:40px;padding:30px 0}.tool-orb-wrapper[_ngcontent-%COMP%]{width:220px;height:220px}.tool-orb-wrapper[_ngcontent-%COMP%]:hover:not(.active){transform:translateY(-10px) scale(1.03)}.page-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:3.5rem}.page-sub-heading[_ngcontent-%COMP%]{font-size:1.4rem}.dynamic-content-area[_ngcontent-%COMP%]{padding:30px 15px;margin-top:40px}.conversion-section[_ngcontent-%COMP%]   .card-header[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:2rem}.conversion-section[_ngcontent-%COMP%]   .section-description[_ngcontent-%COMP%]{font-size:1rem}.convert-btn[_ngcontent-%COMP%]{font-size:1.1rem;padding:12px 25px}.ad-orb-content[_ngcontent-%COMP%]{width:280px;height:230px;padding:15px}}@media (max-width: 768px){.page-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:2.8rem;letter-spacing:-2px}.page-sub-heading[_ngcontent-%COMP%]{font-size:1.2rem}.tool-orb-wrapper[_ngcontent-%COMP%]{width:180px;height:180px}.orb-icon[_ngcontent-%COMP%]{font-size:4rem}.orb-name[_ngcontent-%COMP%]{font-size:1.3rem}.tool-description[_ngcontent-%COMP%]{font-size:.8rem;bottom:-50px;padding:8px 15px}.tool-orb-wrapper[_ngcontent-%COMP%]:hover   .tool-description[_ngcontent-%COMP%]{bottom:-30px}.dynamic-content-area[_ngcontent-%COMP%]{margin-top:30px;padding:20px 10px}.active-tool-content[_ngcontent-%COMP%]{padding:25px}.conversion-section[_ngcontent-%COMP%]   .card-header[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:1.8rem}.upload-box[_ngcontent-%COMP%]{min-height:150px;padding:20px}.upload-icon[_ngcontent-%COMP%]{font-size:3.5rem}.upload-prompt[_ngcontent-%COMP%]{font-size:.95rem}.convert-btn[_ngcontent-%COMP%], .download-link[_ngcontent-%COMP%], .reset-btn[_ngcontent-%COMP%]{font-size:1rem;padding:10px 20px}.ad-orb-content[_ngcontent-%COMP%]{width:250px;height:200px;padding:10px}.placeholder-ad[_ngcontent-%COMP%]{font-size:.9rem}}@media (max-width: 480px){.page-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:2.2rem}.page-sub-heading[_ngcontent-%COMP%]{font-size:1rem}.tool-orb-wrapper[_ngcontent-%COMP%]{width:150px;height:150px}.orb-icon[_ngcontent-%COMP%]{font-size:3rem}.orb-name[_ngcontent-%COMP%]{font-size:1.1rem}.tool-description[_ngcontent-%COMP%]{font-size:.7rem;bottom:-40px}.tool-orb-wrapper[_ngcontent-%COMP%]:hover   .tool-description[_ngcontent-%COMP%]{bottom:-25px}.conversion-section[_ngcontent-%COMP%]   .card-header[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:1.5rem}.upload-box[_ngcontent-%COMP%]{min-height:120px;padding:15px}.upload-icon[_ngcontent-%COMP%]{font-size:2.5rem}.upload-prompt[_ngcontent-%COMP%]{font-size:.85rem}.convert-btn[_ngcontent-%COMP%], .download-link[_ngcontent-%COMP%], .reset-btn[_ngcontent-%COMP%]{font-size:.9rem;padding:8px 18px}.ad-orb-content[_ngcontent-%COMP%]{width:200px;height:160px}}\"]\n    });\n  }\n  return PdfToolsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}