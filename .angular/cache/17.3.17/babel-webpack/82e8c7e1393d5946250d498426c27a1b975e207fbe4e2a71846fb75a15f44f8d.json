{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/platform-browser\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = [\"fileInputSingle\"];\nfunction CompressImageComponent_main_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"main\", 4)(1, \"div\", 5);\n    i0.ɵɵlistener(\"click\", function CompressImageComponent_main_1_Template_div_click_1_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.setActiveTool(\"image-optimizer\"));\n    });\n    i0.ɵɵelementStart(2, \"div\", 6);\n    i0.ɵɵelement(3, \"i\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h3\", 8);\n    i0.ɵɵtext(5, \"Image AI Optimizer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 9);\n    i0.ɵɵtext(7, \"Smartly compress, resize, convert, or crop your images with AI precision.\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction CompressImageComponent_div_2_ng_container_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 46);\n    i0.ɵɵtext(2, \" Select Image File \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 47)(4, \"button\", 48);\n    i0.ɵɵelement(5, \"i\", 49);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 48);\n    i0.ɵɵelement(7, \"i\", 25);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"span\", 50);\n    i0.ɵɵtext(9, \"or drop image here\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction CompressImageComponent_div_2_ng_container_36_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 51)(2, \"div\", 52);\n    i0.ɵɵelement(3, \"i\", 53);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 54);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 55);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"button\", 56);\n    i0.ɵɵlistener(\"click\", function CompressImageComponent_div_2_ng_container_36_Template_button_click_8_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      $event.stopPropagation();\n      return i0.ɵɵresetView(ctx_r1.resetSingleFile());\n    });\n    i0.ɵɵelement(9, \"i\", 57);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r1.selectedFile.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"(\", (ctx_r1.selectedFile.size / 1024).toFixed(1), \" KB)\");\n  }\n}\nfunction CompressImageComponent_div_2_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 58)(1, \"div\", 59)(2, \"label\");\n    i0.ɵɵtext(3, \"Width (px)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 60);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_div_2_div_38_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      i0.ɵɵtwoWayBindingSet(ctx_r1.resizeWidth, $event) || (ctx_r1.resizeWidth = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 59)(6, \"label\");\n    i0.ɵɵtext(7, \"Height (px)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 61);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_div_2_div_38_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      i0.ɵɵtwoWayBindingSet(ctx_r1.resizeHeight, $event) || (ctx_r1.resizeHeight = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.resizeWidth);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.resizeHeight);\n  }\n}\nfunction CompressImageComponent_div_2_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"label\", 62);\n    i0.ɵɵelement(2, \"i\", 63);\n    i0.ɵɵtext(3, \" Target Format\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"select\", 64);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_div_2_div_39_Template_select_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      i0.ɵɵtwoWayBindingSet(ctx_r1.convertFormat, $event) || (ctx_r1.convertFormat = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementStart(5, \"option\", 65);\n    i0.ɵɵtext(6, \"Choose Format\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"option\", 66);\n    i0.ɵɵtext(8, \"JPEG (.jpg)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"option\", 67);\n    i0.ɵɵtext(10, \"PNG (.png)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"option\", 68);\n    i0.ɵɵtext(12, \"WebP (.webp)\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.convertFormat);\n  }\n}\nfunction CompressImageComponent_div_2_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 69)(1, \"div\", 59)(2, \"label\");\n    i0.ɵɵtext(3, \"X Start (px)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 70);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_div_2_div_40_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      i0.ɵɵtwoWayBindingSet(ctx_r1.cropX, $event) || (ctx_r1.cropX = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 59)(6, \"label\");\n    i0.ɵɵtext(7, \"Y Start (px)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 70);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_div_2_div_40_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      i0.ɵɵtwoWayBindingSet(ctx_r1.cropY, $event) || (ctx_r1.cropY = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 59)(10, \"label\");\n    i0.ɵɵtext(11, \"Crop Width (px)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 71);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_div_2_div_40_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      i0.ɵɵtwoWayBindingSet(ctx_r1.cropWidth, $event) || (ctx_r1.cropWidth = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 59)(14, \"label\");\n    i0.ɵɵtext(15, \"Crop Height (px)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"input\", 72);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CompressImageComponent_div_2_div_40_Template_input_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      i0.ɵɵtwoWayBindingSet(ctx_r1.cropHeight, $event) || (ctx_r1.cropHeight = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.cropX);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.cropY);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.cropWidth);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.cropHeight);\n  }\n}\nfunction CompressImageComponent_div_2_ng_container_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 73);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.getButtonLabel(), \" \");\n  }\n}\nfunction CompressImageComponent_div_2_ng_container_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 74);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Processing... \", ctx_r1.progress, \"% \");\n  }\n}\nfunction CompressImageComponent_div_2_div_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 75);\n    i0.ɵɵelement(1, \"img\", 76);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"src\", ctx_r1.previewUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction CompressImageComponent_div_2_div_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 77);\n    i0.ɵɵelement(1, \"i\", 78);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3, \"Your uploaded image will appear here.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CompressImageComponent_div_2_div_50_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 79)(1, \"h3\", 39);\n    i0.ɵɵelement(2, \"i\", 80);\n    i0.ɵɵtext(3, \" Result\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 81)(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementStart(7, \"span\", 82);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"p\", 83);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"a\", 84);\n    i0.ɵɵelement(12, \"i\", 85);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 86);\n    i0.ɵɵlistener(\"click\", function CompressImageComponent_div_2_div_50_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.resetSingleFile());\n    });\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.getResultLabel(), \": \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", (ctx_r1.compressedSize / 1024).toFixed(1), \" KB\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Original Size: \", (ctx_r1.originalSize / 1024).toFixed(1), \" KB\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"href\", ctx_r1.blobUrl, i0.ɵɵsanitizeUrl)(\"download\", ctx_r1.downloadedFileName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Download \", ctx_r1.getResultLabel().replace(\" Size\", \"\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.getResultLabel().replace(\" Size\", \"\"), \" Another\");\n  }\n}\nfunction CompressImageComponent_div_2_div_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 87)(1, \"div\", 88)(2, \"p\", 89);\n    i0.ɵɵtext(3, \"Uploading file 1 of 1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 90);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 91);\n    i0.ɵɵtext(7, \"Time left 0 SECONDS - Upload speed 519 KB/S\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 92);\n    i0.ɵɵelement(9, \"div\", 93);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\", 94);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"p\", 95);\n    i0.ɵɵtext(13, \"UPLOADED\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r1.selectedFile == null ? null : ctx_r1.selectedFile.name, \" (\", ((ctx_r1.selectedFile == null ? null : ctx_r1.selectedFile.size) / 1024).toFixed(1), \" KB)\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵstyleProp(\"width\", ctx_r1.progress, \"%\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.progress, \"%\");\n  }\n}\nfunction CompressImageComponent_div_2_div_52_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 96)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 86);\n    i0.ɵɵlistener(\"click\", function CompressImageComponent_div_2_div_52_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.resetSingleFile());\n    });\n    i0.ɵɵtext(4, \"Try Again\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\u274C Error: \", ctx_r1.errorMessage, \"\");\n  }\n}\nfunction CompressImageComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function CompressImageComponent_div_2_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.setActiveTool(null));\n    });\n    i0.ɵɵelement(2, \"i\", 12);\n    i0.ɵɵtext(3, \" All Tools \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"section\", 13)(5, \"h2\", 14);\n    i0.ɵɵelement(6, \"i\", 7);\n    i0.ɵɵtext(7, \" Image AI Optimizer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\", 15);\n    i0.ɵɵtext(9, \"Smartly compress, resize, convert, or crop your images with AI precision.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 16)(11, \"div\", 17)(12, \"div\", 18)(13, \"label\", 19);\n    i0.ɵɵelement(14, \"i\", 20);\n    i0.ɵɵtext(15, \" Choose Mode\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 21)(17, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function CompressImageComponent_div_2_Template_button_click_17_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.mode = \"compress\");\n    });\n    i0.ɵɵelement(18, \"i\", 23);\n    i0.ɵɵtext(19, \" Compress \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function CompressImageComponent_div_2_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.mode = \"resize\");\n    });\n    i0.ɵɵelement(21, \"i\", 24);\n    i0.ɵɵtext(22, \" Resize \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function CompressImageComponent_div_2_Template_button_click_23_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.mode = \"convert\");\n    });\n    i0.ɵɵelement(24, \"i\", 25);\n    i0.ɵɵtext(25, \" Convert \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function CompressImageComponent_div_2_Template_button_click_26_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.mode = \"crop\");\n    });\n    i0.ɵɵelement(27, \"i\", 26);\n    i0.ɵɵtext(28, \" Crop \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(29, \"div\", 27)(30, \"div\", 28)(31, \"label\", 29);\n    i0.ɵɵlistener(\"dragover\", function CompressImageComponent_div_2_Template_label_dragover_31_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDragOverSingle($event));\n    })(\"dragleave\", function CompressImageComponent_div_2_Template_label_dragleave_31_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDragLeaveSingle($event));\n    })(\"drop\", function CompressImageComponent_div_2_Template_label_drop_31_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDropSingle($event));\n    });\n    i0.ɵɵelementStart(32, \"input\", 30, 0);\n    i0.ɵɵlistener(\"change\", function CompressImageComponent_div_2_Template_input_change_32_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onFileSelectedSingle($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"div\", 31);\n    i0.ɵɵlistener(\"click\", function CompressImageComponent_div_2_Template_div_click_34_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const fileInputSingle_r4 = i0.ɵɵreference(33);\n      return i0.ɵɵresetView(fileInputSingle_r4.click());\n    });\n    i0.ɵɵtemplate(35, CompressImageComponent_div_2_ng_container_35_Template, 10, 0, \"ng-container\", 32)(36, CompressImageComponent_div_2_ng_container_36_Template, 10, 2, \"ng-container\", 32);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(37, \"div\", 33);\n    i0.ɵɵtemplate(38, CompressImageComponent_div_2_div_38_Template, 9, 2, \"div\", 34)(39, CompressImageComponent_div_2_div_39_Template, 13, 1, \"div\", 35)(40, CompressImageComponent_div_2_div_40_Template, 17, 4, \"div\", 36);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(41, \"button\", 37);\n    i0.ɵɵlistener(\"click\", function CompressImageComponent_div_2_Template_button_click_41_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.uploadSingleFile());\n    });\n    i0.ɵɵtemplate(42, CompressImageComponent_div_2_ng_container_42_Template, 3, 1, \"ng-container\", 32)(43, CompressImageComponent_div_2_ng_container_43_Template, 3, 1, \"ng-container\", 32);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(44, \"div\", 38)(45, \"h3\", 39);\n    i0.ɵɵelement(46, \"i\", 40);\n    i0.ɵɵtext(47, \" Image Preview\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(48, CompressImageComponent_div_2_div_48_Template, 2, 1, \"div\", 41)(49, CompressImageComponent_div_2_div_49_Template, 4, 0, \"div\", 42)(50, CompressImageComponent_div_2_div_50_Template, 16, 7, \"div\", 43)(51, CompressImageComponent_div_2_div_51_Template, 14, 5, \"div\", 44)(52, CompressImageComponent_div_2_div_52_Template, 5, 1, \"div\", 45);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(17);\n    i0.ɵɵclassProp(\"active\", ctx_r1.mode === \"compress\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵclassProp(\"active\", ctx_r1.mode === \"resize\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵclassProp(\"active\", ctx_r1.mode === \"convert\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵclassProp(\"active\", ctx_r1.mode === \"crop\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵclassProp(\"drag-over\", ctx_r1.isDragging);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.selectedFile);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.selectedFile);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.mode === \"resize\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.mode === \"convert\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.mode === \"crop\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.selectedFile || ctx_r1.mode === \"resize\" && (!ctx_r1.resizeWidth || !ctx_r1.resizeHeight) || ctx_r1.mode === \"convert\" && !ctx_r1.convertFormat || ctx_r1.mode === \"crop\" && (ctx_r1.cropX === null || ctx_r1.cropY === null || !ctx_r1.cropWidth || !ctx_r1.cropHeight) || ctx_r1.progress > 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.progress === 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.progress > 0);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.previewUrl);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.previewUrl);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.downloadUrl && !ctx_r1.errorMessage);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.progress > 0 && ctx_r1.progress < 100 && !ctx_r1.errorMessage && !ctx_r1.downloadUrl);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.errorMessage && !ctx_r1.downloadUrl);\n  }\n}\nexport let CompressImageComponent = /*#__PURE__*/(() => {\n  class CompressImageComponent {\n    http;\n    sanitizer;\n    // Changed ViewChild target to match the HTML's #fileInputSingle\n    fileInput;\n    // Properties for file handling and status\n    selectedFile = null; // This is the main selected file\n    previewUrl = ''; // URL for the initial image preview\n    blobUrl = ''; // Holds the raw blob URL for the processed image download\n    compressedUrl = ''; // This will hold the URL for the processed image preview (if different from blobUrl)\n    downloadUrl = ''; // Added: This property will hold the URL for the successful download link,\n    // and its presence will control the visibility of the result area.\n    originalSize = 0;\n    compressedSize = 0;\n    progress = 0;\n    errorMessage = null;\n    // Property to control drag-over visual feedback\n    isDragging = false;\n    // Mode selection for image optimization\n    mode = 'compress';\n    // Mode-specific settings\n    resizeWidth = null;\n    resizeHeight = null;\n    convertFormat = '';\n    cropX = null;\n    cropY = null;\n    cropWidth = null;\n    cropHeight = null;\n    downloadedFileName = '';\n    constructor(http, sanitizer) {\n      this.http = http;\n      this.sanitizer = sanitizer;\n    }\n    /**\n     * Triggers the hidden file input element click.\n     * This method is called by the upload-zone in the HTML.\n     */\n    triggerFileInput() {\n      this.fileInput.nativeElement.click();\n    }\n    /**\n     * Prevents default browser behaviors for drag events.\n     * This method is used by dragover and dragleave events.\n     * @param event The DOM event.\n     */\n    preventDefaults(event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    /**\n     * Handles the 'dragover' event for the single file upload area.\n     * Sets isDragging to true to apply visual feedback.\n     * @param event The DragEvent.\n     */\n    onDragOverSingle(event) {\n      this.preventDefaults(event);\n      this.isDragging = true;\n    }\n    /**\n     * Handles the 'dragleave' event for the single file upload area.\n     * Sets isDragging to false to remove visual feedback.\n     * @param event The DragEvent.\n     */\n    onDragLeaveSingle(event) {\n      this.preventDefaults(event);\n      this.isDragging = false;\n    }\n    /**\n     * Handles files dropped onto the single file drag-and-drop area.\n     * @param event The DragEvent.\n     */\n    onDropSingle(event) {\n      this.preventDefaults(event);\n      this.isDragging = false; // Reset drag state\n      const file = event.dataTransfer?.files?.[0];\n      if (file) {\n        if (file.type.startsWith('image/')) {\n          this.setFile(file);\n        } else {\n          this.errorMessage = 'Please drop an image file (JPG, PNG, WebP, GIF, BMP).';\n          this.resetSingleFile(); // Use resetSingleFile for consistency\n        }\n      }\n    }\n    /**\n     * Handles file selection from the single file input element.\n     * @param event The change event from the file input.\n     */\n    onFileSelectedSingle(event) {\n      const input = event.target;\n      const file = input.files?.[0];\n      if (file) this.setFile(file);\n    }\n    /**\n     * Sets the selected file and prepares for upload, resetting other states.\n     * This is the core logic for setting a file, used by both direct selection and drag/drop.\n     * @param file The File object to set.\n     */\n    setFile(file) {\n      this.revokeObjectUrls(); // Revoke previous object URLs to free up memory\n      this.selectedFile = file;\n      this.previewUrl = this.sanitizer.bypassSecurityTrustUrl(URL.createObjectURL(file));\n      this.originalSize = file.size;\n      // Reset all processed/downloaded states and error messages\n      this.compressedUrl = '';\n      this.blobUrl = '';\n      this.downloadUrl = ''; // Clear downloadUrl on new file selection\n      this.compressedSize = 0;\n      this.progress = 0;\n      this.downloadedFileName = '';\n      this.errorMessage = null;\n      // Reset all mode-specific input fields\n      this.resizeWidth = null;\n      this.resizeHeight = null;\n      this.convertFormat = '';\n      this.cropX = null;\n      this.cropY = null;\n      this.cropWidth = null;\n      this.cropHeight = null;\n    }\n    /**\n     * Gets the appropriate label for the action button based on the current mode.\n     * @returns The button label string.\n     */\n    getButtonLabel() {\n      switch (this.mode) {\n        case 'resize':\n          return '📐 Resize Image';\n        case 'convert':\n          return '🔄 Convert Image';\n        case 'crop':\n          return '✂️ Crop Image';\n        default:\n          return '⚡ Compress Image';\n      }\n    }\n    /**\n     * Gets the appropriate label for the result size display based on the current mode.\n     * @returns The result label string.\n     */\n    getResultLabel() {\n      switch (this.mode) {\n        case 'compress':\n          return 'Optimized Size';\n        case 'resize':\n          return 'Resized Size';\n        case 'convert':\n          return 'Converted Size';\n        case 'crop':\n          return 'Cropped Size';\n        default:\n          return 'Processed Size';\n      }\n    }\n    /**\n     * Initiates the upload and processing of the selected image based on the current mode.\n     * This method is called by the main action button (e.g., \"Convert to WORD\" or \"Compress Image\").\n     */\n    uploadSingleFile() {\n      if (!this.selectedFile) {\n        this.errorMessage = 'Please select an image first.';\n        return;\n      }\n      this.errorMessage = null; // Clear previous error messages\n      this.compressedUrl = '';\n      this.compressedSize = 0;\n      this.blobUrl = '';\n      this.downloadUrl = ''; // Clear downloadUrl before new upload\n      this.downloadedFileName = '';\n      this.progress = 0;\n      const formData = new FormData();\n      formData.append('file', this.selectedFile);\n      let endpoint = '';\n      if (this.mode === 'resize') {\n        if (this.resizeWidth === null || this.resizeHeight === null || this.resizeWidth <= 0 || this.resizeHeight <= 0) {\n          this.errorMessage = 'Resize Error: Please enter valid positive width and height.';\n          return;\n        }\n        formData.append('width', this.resizeWidth.toString());\n        formData.append('height', this.resizeHeight.toString());\n        endpoint = `${environment.apiUrl}/resize-image`;\n      } else if (this.mode === 'convert') {\n        if (!this.convertFormat) {\n          this.errorMessage = 'Convert Error: Please select a target format.';\n          return;\n        }\n        formData.append('target_format', this.convertFormat);\n        endpoint = `${environment.apiUrl}/convert-image`;\n      } else if (this.mode === 'crop') {\n        if (this.cropX === null || this.cropY === null || this.cropWidth === null || this.cropHeight === null || this.cropWidth <= 0 || this.cropHeight <= 0) {\n          this.errorMessage = 'Crop Error: Please enter valid positive crop dimensions (width, height) and coordinates (x, y).';\n          return;\n        }\n        formData.append('x', this.cropX.toString());\n        formData.append('y', this.cropY.toString());\n        formData.append('width', this.cropWidth.toString());\n        formData.append('height', this.cropHeight.toString());\n        endpoint = `${environment.apiUrl}/crop-image`;\n      } else {\n        endpoint = `${environment.apiUrl}/compress-image`;\n      }\n      this.http.post(endpoint, formData, {\n        reportProgress: true,\n        observe: 'events',\n        responseType: 'blob'\n      }).subscribe(event => {\n        if (event.type === HttpEventType.UploadProgress && event.total) {\n          this.progress = Math.round(event.loaded / event.total * 100);\n        }\n        if (event.type === HttpEventType.Response) {\n          const blob = new Blob([event.body], {\n            type: event.body?.type || 'image/jpeg'\n          });\n          this.compressedSize = blob.size;\n          this.revokeObjectUrls(true); // Revoke only compressedUrl/blobUrl\n          this.blobUrl = URL.createObjectURL(blob);\n          this.compressedUrl = this.sanitizer.bypassSecurityTrustUrl(this.blobUrl);\n          this.downloadUrl = this.blobUrl; // Set downloadUrl on success\n          // Pass the actual blob type to getDownloadName for accurate extension\n          this.downloadedFileName = this.getDownloadName(blob.type);\n          this.progress = 100;\n          // Auto download\n          const a = document.createElement('a');\n          a.href = this.blobUrl;\n          a.download = this.downloadedFileName;\n          document.body.appendChild(a);\n          a.click();\n          document.body.removeChild(a);\n        }\n      }, error => {\n        console.error('Image processing failed:', error);\n        this.progress = 0;\n        this.errorMessage = `Processing failed: ${error.message || 'An unknown error occurred.'}`;\n      });\n    }\n    /**\n     * Generates a suitable download file name based on the mode and actual output MIME type.\n     * @param outputMimeType The actual MIME type of the processed image blob from the backend.\n     * @returns The download file name.\n     */\n    getDownloadName(outputMimeType) {\n      const originalName = this.selectedFile?.name || 'image';\n      const lastDotIndex = originalName.lastIndexOf('.');\n      let baseName = originalName.substring(0, lastDotIndex > -1 ? lastDotIndex : originalName.length);\n      let suffix = '';\n      let outputExtension = '';\n      // Determine suffix based on mode\n      switch (this.mode) {\n        case 'compress':\n          suffix = 'compressed';\n          break;\n        case 'resize':\n          suffix = 'resized';\n          break;\n        case 'convert':\n          suffix = 'converted';\n          break;\n        case 'crop':\n          suffix = 'cropped';\n          break;\n        default:\n          suffix = 'processed';\n      }\n      // Determine output extension based on MIME type first\n      if (outputMimeType.includes('jpeg') || outputMimeType.includes('jpg')) {\n        outputExtension = 'jpeg';\n      } else if (outputMimeType.includes('png')) {\n        outputExtension = 'png';\n      } else if (outputMimeType.includes('webp')) {\n        outputExtension = 'webp';\n      } else if (outputMimeType.includes('gif')) {\n        outputExtension = 'gif';\n      } else if (outputMimeType.includes('bmp')) {\n        outputExtension = 'bmp';\n      } else {\n        // Fallback: If MIME type is not specific, try to use the original extension\n        outputExtension = originalName.substring(lastDotIndex + 1).toLowerCase() || 'jpeg';\n      }\n      // Special handling for 'convert' mode: prioritize the user's selected format for the filename\n      // This ensures that if a user explicitly chose to convert to PNG, the downloaded file\n      // is named with a .png extension, even if the backend's MIME type might be generic or\n      // if there's a slight mismatch. This prioritizes user intent for the filename.\n      if (this.mode === 'convert' && this.convertFormat) {\n        outputExtension = this.convertFormat.toLowerCase();\n      }\n      return `${baseName}_${suffix}.${outputExtension}`;\n    }\n    /**\n     * Clears the current file selection and resets all related states.\n     * This method is called by the \"Clear\" button and \"Start New\" / \"Try Again\" buttons.\n     */\n    resetSingleFile() {\n      this.revokeObjectUrls();\n      this.selectedFile = null;\n      this.previewUrl = '';\n      this.blobUrl = '';\n      this.compressedUrl = '';\n      this.downloadUrl = ''; // Clear downloadUrl on reset\n      this.progress = 0;\n      this.compressedSize = 0;\n      this.originalSize = 0;\n      this.downloadedFileName = '';\n      this.errorMessage = null;\n      this.resizeWidth = null;\n      this.resizeHeight = null;\n      this.convertFormat = '';\n      this.cropX = null;\n      this.cropY = null;\n      this.cropWidth = null;\n      this.cropHeight = null;\n      if (this.fileInput && this.fileInput.nativeElement) {\n        this.fileInput.nativeElement.value = '';\n      }\n    }\n    /**\n     * Helper to revoke Object URLs to prevent memory leaks.\n     * @param onlyCompressed If true, only revokes compressedUrl/blobUrl. Otherwise, revokes all.\n     */\n    revokeObjectUrls(onlyCompressed = false) {\n      if (!onlyCompressed && this.previewUrl) {\n        const urlString = this.previewUrl.changingThisBreaksApplicationSecurity;\n        if (urlString && urlString.startsWith('blob:')) {\n          URL.revokeObjectURL(urlString);\n        }\n      }\n      if (this.blobUrl && this.blobUrl.startsWith('blob:')) {\n        URL.revokeObjectURL(this.blobUrl);\n      }\n    }\n    // Lifecycle hook to clean up object URLs when component is destroyed\n    ngOnDestroy() {\n      this.revokeObjectUrls();\n    }\n    static ɵfac = function CompressImageComponent_Factory(t) {\n      return new (t || CompressImageComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.DomSanitizer));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CompressImageComponent,\n      selectors: [[\"app-compress-image\"]],\n      viewQuery: function CompressImageComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInput = _t.first);\n        }\n      },\n      decls: 3,\n      vars: 2,\n      consts: [[\"fileInputSingle\", \"\"], [1, \"docuflow-container\"], [\"class\", \"tool-grid-container\", 4, \"ngIf\"], [\"class\", \"tool-workspace-wrapper\", 4, \"ngIf\"], [1, \"tool-grid-container\"], [1, \"tool-card\", 3, \"click\"], [1, \"tool-icon-wrapper\", \"bg-purple\"], [1, \"fas\", \"fa-magic\"], [1, \"tool-title\"], [1, \"tool-description\"], [1, \"tool-workspace-wrapper\"], [1, \"back-to-grid-btn\", 3, \"click\"], [1, \"fas\", \"fa-arrow-left\"], [\"id\", \"image-optimizer-section\", 1, \"tool-section\"], [1, \"tool-section-title\"], [1, \"tool-description-section\"], [1, \"image-optimizer-layout\"], [1, \"left-panel\"], [1, \"setting-group\"], [1, \"setting-label\"], [1, \"fas\", \"fa-tools\"], [1, \"mode-selector-tabs\"], [1, \"mode-tab-btn\", 3, \"click\"], [1, \"fas\", \"fa-bolt\"], [1, \"fas\", \"fa-expand-alt\"], [1, \"fas\", \"fa-exchange-alt\"], [1, \"fas\", \"fa-crop\"], [1, \"main-upload-content\"], [1, \"upload-area-container\"], [1, \"upload-box\", \"main-select-button\", 3, \"dragover\", \"dragleave\", \"drop\"], [\"type\", \"file\", \"accept\", \"image/*\", \"hidden\", \"\", 3, \"change\"], [1, \"upload-content\", 3, \"click\"], [4, \"ngIf\"], [1, \"dynamic-settings\"], [\"class\", \"setting-group-grid\", 4, \"ngIf\"], [\"class\", \"setting-group\", 4, \"ngIf\"], [\"class\", \"setting-group-grid two-columns\", 4, \"ngIf\"], [1, \"convert-action-btn\", 3, \"click\", \"disabled\"], [1, \"right-panel\"], [1, \"panel-title\"], [1, \"fas\", \"fa-eye\"], [\"class\", \"image-display-area\", 4, \"ngIf\"], [\"class\", \"placeholder-text\", 4, \"ngIf\"], [\"class\", \"result-area\", 4, \"ngIf\"], [\"class\", \"global-status-area\", 4, \"ngIf\"], [\"class\", \"result-message-box error\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"select-pdf-file-btn\"], [1, \"select-pdf-file-btn-alt-icons\"], [1, \"small-icon-btn\"], [1, \"fas\", \"fa-cloud-upload-alt\"], [1, \"or-drop-text\"], [1, \"file-preview-area\"], [1, \"file-thumbnail\"], [1, \"fas\", \"fa-file-image\", \"file-image-icon\"], [1, \"file-name-display\"], [1, \"file-size-display\"], [\"type\", \"button\", 1, \"remove-file-preview-btn\", 3, \"click\"], [1, \"fas\", \"fa-times-circle\"], [1, \"setting-group-grid\"], [1, \"input-field\"], [\"type\", \"number\", \"placeholder\", \"e.g. 1280\", 1, \"app-input\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"number\", \"placeholder\", \"e.g. 720\", 1, \"app-input\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"convertFormat\", 1, \"setting-label\"], [1, \"fas\", \"fa-file-image\"], [\"id\", \"convertFormat\", 1, \"app-select\", 3, \"ngModelChange\", \"ngModel\"], [\"value\", \"\"], [\"value\", \"jpeg\"], [\"value\", \"png\"], [\"value\", \"webp\"], [1, \"setting-group-grid\", \"two-columns\"], [\"type\", \"number\", \"placeholder\", \"0\", 1, \"app-input\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"number\", \"placeholder\", \"e.g. 300\", 1, \"app-input\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"number\", \"placeholder\", \"e.g. 200\", 1, \"app-input\", 3, \"ngModelChange\", \"ngModel\"], [1, \"fas\", \"fa-play-circle\"], [1, \"fas\", \"fa-spinner\", \"fa-spin\"], [1, \"image-display-area\"], [\"alt\", \"Image Preview\", 1, \"preview-image\", 3, \"src\"], [1, \"placeholder-text\"], [1, \"fas\", \"fa-images\"], [1, \"result-area\"], [1, \"fas\", \"fa-check-circle\"], [1, \"result-summary\"], [1, \"highlight-text\"], [1, \"original-size-info\"], [1, \"download-btn\", 3, \"href\", \"download\"], [1, \"fas\", \"fa-download\"], [\"type\", \"button\", 1, \"reset-conversion-btn\", 3, \"click\"], [1, \"global-status-area\"], [1, \"progress-info-block\"], [1, \"upload-progress-text\"], [1, \"upload-file-details\"], [1, \"upload-speed-time-left\"], [1, \"progress-indicator\", \"upload-progress-bar\"], [1, \"progress-bar-fill\"], [1, \"upload-percentage-text\"], [1, \"upload-status-text\"], [1, \"result-message-box\", \"error\"]],\n      template: function CompressImageComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 1);\n          i0.ɵɵtemplate(1, CompressImageComponent_main_1_Template, 8, 0, \"main\", 2)(2, CompressImageComponent_div_2_Template, 53, 23, \"div\", 3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.activeTool);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.activeTool);\n        }\n      },\n      dependencies: [i3.NgIf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgModel],\n      styles: [\".docuflow-container[_ngcontent-%COMP%]{max-width:1200px;margin:40px auto;padding:35px;font-family:Inter,sans-serif;color:#333;background:linear-gradient(135deg,#f8f9fa,#eef3f7);background-size:400% 400%;animation:_ngcontent-%COMP%_gradientShift 20s ease infinite alternate;border-radius:20px;box-shadow:0 15px 45px #00000017;position:relative;overflow:hidden;transition:background .3s ease;border:1px solid #e3eaf1}@keyframes _ngcontent-%COMP%_gradientShift{0%{background-position:0% 50%}50%{background-position:100% 50%}to{background-position:0% 50%}}.tool-section[_ngcontent-%COMP%]{padding:40px;background-color:#fff;border-radius:20px;box-shadow:0 10px 30px #0000000f;border:1px solid #e9eff5;margin-top:30px}.tool-section-title[_ngcontent-%COMP%]{font-size:2.2rem;font-weight:700;color:#2c3e50;margin-bottom:20px;display:flex;align-items:center;gap:15px}.tool-section-title[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:2.5rem;color:#4a69bd}.tool-description-section[_ngcontent-%COMP%]{font-size:1.1rem;color:#7f8c8d;margin-bottom:40px;line-height:1.6}.image-optimizer-layout[_ngcontent-%COMP%]{display:flex;gap:40px;align-items:flex-start}.left-panel[_ngcontent-%COMP%]{flex:1;min-width:480px;background:#fff;padding:40px;border-radius:18px;box-shadow:0 10px 30px #0000000f;border:1px solid #e9eff5}.setting-group[_ngcontent-%COMP%]{margin-bottom:30px}.setting-group[_ngcontent-%COMP%]:last-of-type{margin-bottom:0}.setting-group-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fit,minmax(190px,1fr));gap:25px;margin-bottom:30px}.setting-group-grid.two-columns[_ngcontent-%COMP%]{grid-template-columns:1fr 1fr}.setting-label[_ngcontent-%COMP%]{display:block;font-size:1.05rem;font-weight:600;color:#4a69bd;margin-bottom:10px}.setting-label[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{margin-right:8px;color:#8c9bbd}.app-select[_ngcontent-%COMP%], .app-input[_ngcontent-%COMP%]{width:100%;padding:14px 18px;font-size:1.02rem;border:1px solid #d8e2ed;border-radius:10px;background-color:#fcfdff;transition:border-color .2s ease,box-shadow .2s ease;appearance:none}.app-select[_ngcontent-%COMP%]{background-image:url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='none' stroke='%238697a8' stroke-width='2' d='M7 10l5 5 5-5z'/%3E%3C/svg%3E\\\");background-repeat:no-repeat;background-position:right 15px center;background-size:16px}.app-input[_ngcontent-%COMP%]:focus, .app-select[_ngcontent-%COMP%]:focus{border-color:#4a69bd;box-shadow:0 0 0 4px #4a69bd40;outline:none}.main-upload-content[_ngcontent-%COMP%]{margin-bottom:35px}.upload-area-container[_ngcontent-%COMP%]{width:100%}.upload-box.main-select-button[_ngcontent-%COMP%]{background:#eef4ff;border:2px dashed #a0b2ff;padding:40px;text-align:center;cursor:pointer;border-radius:16px;transition:background .3s ease,border-color .3s ease,transform .2s ease,box-shadow .3s ease;display:flex;flex-direction:column;align-items:center;justify-content:center;min-height:200px;position:relative;box-shadow:0 5px 15px #0000000a}.upload-box.main-select-button[_ngcontent-%COMP%]:hover{background:#e2ecff;border-color:#89a0ff;transform:translateY(-2px);box-shadow:0 8px 20px #00000014}.upload-box.main-select-button.drag-over[_ngcontent-%COMP%]{background:#d8e2ff;border-color:#4a69bd;transform:translateY(-2px)}.upload-box.main-select-button[_ngcontent-%COMP%]   .upload-content[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;gap:15px;width:100%}.upload-box.main-select-button[_ngcontent-%COMP%]   .select-pdf-file-btn[_ngcontent-%COMP%]{background-color:#4a69bd;color:#fff;border:none;padding:14px 28px;border-radius:10px;font-size:1.1rem;font-weight:600;cursor:pointer;transition:background-color .2s ease,transform .2s ease,box-shadow .2s ease;box-shadow:0 6px 15px #4a69bd4d;margin-bottom:10px}.upload-box.main-select-button[_ngcontent-%COMP%]   .select-pdf-file-btn[_ngcontent-%COMP%]:hover{background-color:#3e5ab5;transform:translateY(-1px);box-shadow:0 8px 18px #4a69bd66}.upload-box.main-select-button[_ngcontent-%COMP%]   .select-pdf-file-btn-alt-icons[_ngcontent-%COMP%]{display:flex;gap:15px;margin-bottom:10px}.upload-box.main-select-button[_ngcontent-%COMP%]   .small-icon-btn[_ngcontent-%COMP%]{background:#e0e9f6;color:#4a69bd;border:none;width:48px;height:48px;border-radius:50%;display:flex;align-items:center;justify-content:center;font-size:1.2rem;cursor:pointer;transition:background-color .2s ease,color .2s ease,transform .2s ease;box-shadow:0 2px 8px #0000000d}.upload-box.main-select-button[_ngcontent-%COMP%]   .small-icon-btn[_ngcontent-%COMP%]:hover{background-color:#d1dbec;color:#3a5aa8;transform:translateY(-2px)}.upload-box.main-select-button[_ngcontent-%COMP%]   .or-drop-text[_ngcontent-%COMP%]{font-size:1rem;color:#8fa1b4;font-weight:500}.upload-box.main-select-button[_ngcontent-%COMP%]   .file-preview-area[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;gap:8px;padding:20px 0;width:100%}.upload-box.main-select-button[_ngcontent-%COMP%]   .file-thumbnail[_ngcontent-%COMP%]{font-size:4.5rem;color:#4a69bd;margin-bottom:10px}.upload-box.main-select-button[_ngcontent-%COMP%]   .file-pdf-icon[_ngcontent-%COMP%]{color:#e74c3c}.upload-box.main-select-button[_ngcontent-%COMP%]   .file-image-icon[_ngcontent-%COMP%]{color:#3498db}.upload-box.main-select-button[_ngcontent-%COMP%]   .file-word-icon[_ngcontent-%COMP%]{color:#2980b9}.upload-box.main-select-button[_ngcontent-%COMP%]   .file-name-display[_ngcontent-%COMP%]{font-size:1.15rem;font-weight:600;color:#34495e;word-break:break-all;max-width:90%}.upload-box.main-select-button[_ngcontent-%COMP%]   .file-size-display[_ngcontent-%COMP%]{font-size:.95rem;color:#7f8c8d;margin-top:2px}.upload-box.main-select-button[_ngcontent-%COMP%]   .remove-file-preview-btn[_ngcontent-%COMP%]{position:absolute;top:15px;right:15px;background:#f0f4f8;color:#6c7a8d;border:none;width:38px;height:38px;border-radius:50%;font-size:1.1rem;cursor:pointer;display:flex;align-items:center;justify-content:center;transition:background .2s ease,color .2s ease,transform .2s ease;box-shadow:0 2px 5px #0000000d}.upload-box.main-select-button[_ngcontent-%COMP%]   .remove-file-preview-btn[_ngcontent-%COMP%]:hover{background:#e2e8ef;color:#34495e;transform:rotate(90deg)}.convert-action-btn[_ngcontent-%COMP%]{width:100%;background-color:#4a69bd;color:#fff;border:none;padding:16px 30px;font-size:1.15rem;font-weight:600;border-radius:12px;cursor:pointer;transition:background-color .3s ease,transform .2s ease,box-shadow .3s ease;display:flex;align-items:center;justify-content:center;gap:12px;margin-top:35px;box-shadow:0 8px 20px #4a69bd59}.convert-action-btn[_ngcontent-%COMP%]:hover:not(:disabled){background-color:#3e5ab5;transform:translateY(-3px);box-shadow:0 12px 28px #4a69bd73}.convert-action-btn[_ngcontent-%COMP%]:disabled{background-color:#e0e6ec;color:#aebacd;cursor:not-allowed;opacity:.9;box-shadow:none;transform:none}.global-status-area[_ngcontent-%COMP%]{margin-top:35px;text-align:center;background:#f8fbfd;border-radius:12px;padding:25px;box-shadow:inset 0 0 8px #00000008;border:1px solid #e3eaf1}.loading-animation-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;gap:15px}.loading-text[_ngcontent-%COMP%]{font-size:1.1rem;color:#4a69bd;font-weight:500}.spinner[_ngcontent-%COMP%]{border:4px solid rgba(74,105,189,.2);border-top:4px solid #4a69bd;border-radius:50%;width:40px;height:40px;animation:_ngcontent-%COMP%_spin 1s linear infinite}@keyframes _ngcontent-%COMP%_spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.progress-info-block[_ngcontent-%COMP%]{text-align:left;padding:15px 0}.upload-progress-text[_ngcontent-%COMP%], .upload-file-details[_ngcontent-%COMP%], .upload-speed-time-left[_ngcontent-%COMP%]{font-size:.95rem;color:#6c7a8d;margin-bottom:5px}.upload-progress-text[_ngcontent-%COMP%]{font-weight:600;color:#4a69bd}.upload-file-details[_ngcontent-%COMP%]{font-weight:500}.upload-speed-time-left[_ngcontent-%COMP%]{font-style:italic;font-size:.85rem}.progress-indicator.upload-progress-bar[_ngcontent-%COMP%]{width:100%;background:#e0e9f6;border-radius:8px;height:12px;overflow:hidden;margin:15px 0}.progress-bar-fill[_ngcontent-%COMP%]{height:100%;background-color:#28a745;width:0%;border-radius:8px;transition:width .3s ease-out}.upload-percentage-text[_ngcontent-%COMP%]{font-size:1.1rem;font-weight:700;color:#28a745;margin-top:10px;display:block}.upload-status-text[_ngcontent-%COMP%]{font-size:.9rem;color:#6c7a8d;text-transform:uppercase;margin-top:5px}.right-panel[_ngcontent-%COMP%]{flex:1;min-width:450px;background:#fff;padding:40px;border-radius:18px;box-shadow:0 10px 30px #0000000f;border:1px solid #e9eff5;display:flex;flex-direction:column;align-items:center;text-align:center}.panel-title[_ngcontent-%COMP%]{font-size:1.7rem;font-weight:600;color:#2c3e50;margin-bottom:35px;display:flex;align-items:center;gap:12px}.panel-title[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{color:#4a69bd;font-size:1.8rem}.image-display-area[_ngcontent-%COMP%]{width:100%;height:380px;display:flex;justify-content:center;align-items:center;background:#fbfdff;border-radius:15px;overflow:hidden;margin-bottom:30px;border:2px dashed #ddeaf6}.preview-image[_ngcontent-%COMP%]{max-width:100%;max-height:100%;object-fit:contain;border-radius:10px;box-shadow:0 5px 15px #00000014}.placeholder-text[_ngcontent-%COMP%]{color:#aabcef;font-size:1.1rem;padding:30px}.placeholder-text[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:5rem;margin-bottom:20px;display:block}.result-area[_ngcontent-%COMP%], .result-message-box.error[_ngcontent-%COMP%]{margin-top:40px;width:100%;padding:30px;border-radius:12px;box-shadow:0 5px 15px #0000000d;text-align:center;border:1px solid}.result-area[_ngcontent-%COMP%]{background-color:#e6f7ed;border-color:#28a745}.result-summary[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;gap:12px}.result-summary[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:1.15rem;color:#34495e;font-weight:500}.highlight-text[_ngcontent-%COMP%]{color:#28a745;font-weight:700;font-size:1.35rem}.original-size-info[_ngcontent-%COMP%]{font-size:.95rem;color:#8fa1b4;margin-top:-5px}.download-btn[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:10px;margin-top:25px;background:#28a745;color:#fff;padding:14px 28px;border-radius:10px;text-decoration:none;font-weight:600;font-size:1.05rem;transition:background-color .3s ease,transform .2s ease,box-shadow .3s ease;box-shadow:0 5px 15px #28a7454d}.download-btn[_ngcontent-%COMP%]:hover{background-color:#218838;transform:translateY(-2px);box-shadow:0 8px 20px #28a74566}.reset-conversion-btn[_ngcontent-%COMP%]{background:#6c757d;color:#fff;border:none;padding:12px 24px;border-radius:10px;font-size:.95rem;cursor:pointer;margin-top:15px;transition:background-color .3s ease,transform .2s ease;box-shadow:0 3px 10px #6c757d33}.reset-conversion-btn[_ngcontent-%COMP%]:hover{background-color:#5a6268;transform:translateY(-1px)}.result-message-box.error[_ngcontent-%COMP%]{background-color:#ffebe9;border-color:#dc3545}.error-title[_ngcontent-%COMP%], .error-title[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{color:#dc3545}.error-message[_ngcontent-%COMP%]{color:#dc3545;font-weight:500;font-size:1.1rem;margin-top:15px;line-height:1.6}@media (max-width: 992px){.image-optimizer-layout[_ngcontent-%COMP%]{flex-direction:column;align-items:center;gap:30px}.left-panel[_ngcontent-%COMP%], .right-panel[_ngcontent-%COMP%]{width:100%;min-width:unset}}@media (max-width: 768px){.docuflow-container[_ngcontent-%COMP%]{padding:25px;margin:25px auto}.tool-section-title[_ngcontent-%COMP%]{font-size:1.8rem;gap:10px}.tool-section-title[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:2rem}.tool-description-section[_ngcontent-%COMP%]{font-size:1rem}.left-panel[_ngcontent-%COMP%], .right-panel[_ngcontent-%COMP%]{padding:30px}.upload-box.main-select-button[_ngcontent-%COMP%]{padding:35px;min-height:180px}.upload-box.main-select-button[_ngcontent-%COMP%]   .select-pdf-file-btn[_ngcontent-%COMP%]{padding:12px 25px;font-size:1rem}.upload-box.main-select-button[_ngcontent-%COMP%]   .small-icon-btn[_ngcontent-%COMP%]{width:44px;height:44px;font-size:1.1rem}.upload-box.main-select-button[_ngcontent-%COMP%]   .file-thumbnail[_ngcontent-%COMP%]{font-size:4rem}.upload-box.main-select-button[_ngcontent-%COMP%]   .file-name-display[_ngcontent-%COMP%]{font-size:1.05rem}.convert-action-btn[_ngcontent-%COMP%]{padding:15px 28px;font-size:1.05rem}.panel-title[_ngcontent-%COMP%]{font-size:1.5rem}.image-display-area[_ngcontent-%COMP%]{height:320px}.download-btn[_ngcontent-%COMP%]{padding:13px 25px;font-size:1rem}.reset-conversion-btn[_ngcontent-%COMP%]{padding:10px 20px;font-size:.9rem}}@media (max-width: 576px){.setting-group-grid[_ngcontent-%COMP%]{grid-template-columns:1fr;gap:18px}.upload-box.main-select-button[_ngcontent-%COMP%]{padding:30px}.upload-box.main-select-button[_ngcontent-%COMP%]   .file-thumbnail[_ngcontent-%COMP%]{font-size:3.5rem}.upload-box.main-select-button[_ngcontent-%COMP%]   .remove-file-preview-btn[_ngcontent-%COMP%]{width:34px;height:34px;font-size:1rem}}\"]\n    });\n  }\n  return CompressImageComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}