{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = [\"fileInputSingle\"];\nconst _c1 = [\"fileInputMultiple\"];\nfunction PdfToolsComponent_section_21_p_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Click or drag & drop JPG/PNG file\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PdfToolsComponent_section_21_p_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"span\", 29);\n    i0.ɵɵelement(2, \"i\", 30);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.files[\"jpg-to-pdf\"] == null ? null : ctx_r1.files[\"jpg-to-pdf\"].name, \" selected\");\n  }\n}\nfunction PdfToolsComponent_section_21_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"Convert JPG/PNG to PDF\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction PdfToolsComponent_section_21_ng_container_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 31);\n    i0.ɵɵtext(2, \" Processing...\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction PdfToolsComponent_section_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"section\", 21)(1, \"h2\");\n    i0.ɵɵelement(2, \"i\", 22);\n    i0.ɵɵtext(3, \" JPG/PNG to PDF\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 23);\n    i0.ɵɵlistener(\"dragover\", function PdfToolsComponent_section_21_Template_div_dragover_4_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDragOver($event, \"jpg-to-pdf\"));\n    })(\"dragleave\", function PdfToolsComponent_section_21_Template_div_dragleave_4_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDragLeave($event, \"jpg-to-pdf\"));\n    })(\"drop\", function PdfToolsComponent_section_21_Template_div_drop_4_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDrop($event, \"jpg-to-pdf\"));\n    });\n    i0.ɵɵelementStart(5, \"input\", 24, 0);\n    i0.ɵɵlistener(\"change\", function PdfToolsComponent_section_21_Template_input_change_5_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onFileChange($event, \"jpg-to-pdf\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 25);\n    i0.ɵɵlistener(\"click\", function PdfToolsComponent_section_21_Template_div_click_7_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const jpgToPdfInput_r3 = i0.ɵɵreference(6);\n      return i0.ɵɵresetView(jpgToPdfInput_r3.click());\n    });\n    i0.ɵɵelement(8, \"i\", 26);\n    i0.ɵɵtemplate(9, PdfToolsComponent_section_21_p_9_Template, 2, 0, \"p\", 27)(10, PdfToolsComponent_section_21_p_10_Template, 4, 1, \"p\", 27);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function PdfToolsComponent_section_21_Template_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.convert(\"jpg-to-pdf\"));\n    });\n    i0.ɵɵtemplate(12, PdfToolsComponent_section_21_ng_container_12_Template, 2, 0, \"ng-container\", 27)(13, PdfToolsComponent_section_21_ng_container_13_Template, 3, 0, \"ng-container\", 27);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵclassProp(\"dragging\", ctx_r1.isDragging[\"jpg-to-pdf\"]);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.files[\"jpg-to-pdf\"]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.files[\"jpg-to-pdf\"]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.files[\"jpg-to-pdf\"] || ctx_r1.progress > 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.progress === 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.progress > 0);\n  }\n}\nfunction PdfToolsComponent_section_22_p_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Click or drag & drop PDF file\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PdfToolsComponent_section_22_p_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"span\", 29);\n    i0.ɵɵelement(2, \"i\", 30);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.files[\"pdf-to-word\"] == null ? null : ctx_r1.files[\"pdf-to-word\"].name, \" selected\");\n  }\n}\nfunction PdfToolsComponent_section_22_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"Convert PDF to Word\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction PdfToolsComponent_section_22_ng_container_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 31);\n    i0.ɵɵtext(2, \" Processing...\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction PdfToolsComponent_section_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"section\", 21)(1, \"h2\");\n    i0.ɵɵelement(2, \"i\", 32);\n    i0.ɵɵtext(3, \" PDF to Word\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 23);\n    i0.ɵɵlistener(\"dragover\", function PdfToolsComponent_section_22_Template_div_dragover_4_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDragOver($event, \"pdf-to-word\"));\n    })(\"dragleave\", function PdfToolsComponent_section_22_Template_div_dragleave_4_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDragLeave($event, \"pdf-to-word\"));\n    })(\"drop\", function PdfToolsComponent_section_22_Template_div_drop_4_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDrop($event, \"pdf-to-word\"));\n    });\n    i0.ɵɵelementStart(5, \"input\", 33, 1);\n    i0.ɵɵlistener(\"change\", function PdfToolsComponent_section_22_Template_input_change_5_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onFileChange($event, \"pdf-to-word\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 25);\n    i0.ɵɵlistener(\"click\", function PdfToolsComponent_section_22_Template_div_click_7_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const pdfToWordInput_r5 = i0.ɵɵreference(6);\n      return i0.ɵɵresetView(pdfToWordInput_r5.click());\n    });\n    i0.ɵɵelement(8, \"i\", 26);\n    i0.ɵɵtemplate(9, PdfToolsComponent_section_22_p_9_Template, 2, 0, \"p\", 27)(10, PdfToolsComponent_section_22_p_10_Template, 4, 1, \"p\", 27);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function PdfToolsComponent_section_22_Template_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.convert(\"pdf-to-word\"));\n    });\n    i0.ɵɵtemplate(12, PdfToolsComponent_section_22_ng_container_12_Template, 2, 0, \"ng-container\", 27)(13, PdfToolsComponent_section_22_ng_container_13_Template, 3, 0, \"ng-container\", 27);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵclassProp(\"dragging\", ctx_r1.isDragging[\"pdf-to-word\"]);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.files[\"pdf-to-word\"]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.files[\"pdf-to-word\"]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.files[\"pdf-to-word\"] || ctx_r1.progress > 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.progress === 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.progress > 0);\n  }\n}\nfunction PdfToolsComponent_section_23_p_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Click or drag & drop Word file\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PdfToolsComponent_section_23_p_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"span\", 29);\n    i0.ɵɵelement(2, \"i\", 30);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.files[\"word-to-pdf\"] == null ? null : ctx_r1.files[\"word-to-pdf\"].name, \" selected\");\n  }\n}\nfunction PdfToolsComponent_section_23_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"Convert Word to PDF\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction PdfToolsComponent_section_23_ng_container_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 31);\n    i0.ɵɵtext(2, \" Processing...\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction PdfToolsComponent_section_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"section\", 21)(1, \"h2\");\n    i0.ɵɵelement(2, \"i\", 34);\n    i0.ɵɵtext(3, \" Word to PDF\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 23);\n    i0.ɵɵlistener(\"dragover\", function PdfToolsComponent_section_23_Template_div_dragover_4_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDragOver($event, \"word-to-pdf\"));\n    })(\"dragleave\", function PdfToolsComponent_section_23_Template_div_dragleave_4_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDragLeave($event, \"word-to-pdf\"));\n    })(\"drop\", function PdfToolsComponent_section_23_Template_div_drop_4_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDrop($event, \"word-to-pdf\"));\n    });\n    i0.ɵɵelementStart(5, \"input\", 35, 2);\n    i0.ɵɵlistener(\"change\", function PdfToolsComponent_section_23_Template_input_change_5_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onFileChange($event, \"word-to-pdf\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 25);\n    i0.ɵɵlistener(\"click\", function PdfToolsComponent_section_23_Template_div_click_7_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const wordToPdfInput_r7 = i0.ɵɵreference(6);\n      return i0.ɵɵresetView(wordToPdfInput_r7.click());\n    });\n    i0.ɵɵelement(8, \"i\", 26);\n    i0.ɵɵtemplate(9, PdfToolsComponent_section_23_p_9_Template, 2, 0, \"p\", 27)(10, PdfToolsComponent_section_23_p_10_Template, 4, 1, \"p\", 27);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function PdfToolsComponent_section_23_Template_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.convert(\"word-to-pdf\"));\n    });\n    i0.ɵɵtemplate(12, PdfToolsComponent_section_23_ng_container_12_Template, 2, 0, \"ng-container\", 27)(13, PdfToolsComponent_section_23_ng_container_13_Template, 3, 0, \"ng-container\", 27);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵclassProp(\"dragging\", ctx_r1.isDragging[\"word-to-pdf\"]);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.files[\"word-to-pdf\"]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.files[\"word-to-pdf\"]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.files[\"word-to-pdf\"] || ctx_r1.progress > 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.progress === 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.progress > 0);\n  }\n}\nfunction PdfToolsComponent_section_24_p_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \" Click or drag & drop multiple images \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PdfToolsComponent_section_24_p_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p\")(1, \"span\", 29);\n    i0.ɵɵelement(2, \"i\", 30);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 41);\n    i0.ɵɵlistener(\"click\", function PdfToolsComponent_section_24_p_10_Template_button_click_4_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      $event.stopPropagation();\n      return i0.ɵɵresetView(ctx_r1.reset(\"merge-images-to-pdf\"));\n    });\n    i0.ɵɵtext(5, \" Clear \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.getFilesArrayLength(\"merge-images-to-pdf\"), \" image(s) selected\");\n  }\n}\nfunction PdfToolsComponent_section_24_ul_11_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵelement(1, \"i\", 44);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const file_r11 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", file_r11.name, \" \");\n  }\n}\nfunction PdfToolsComponent_section_24_ul_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 42);\n    i0.ɵɵtemplate(1, PdfToolsComponent_section_24_ul_11_li_1_Template, 3, 1, \"li\", 43);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.files[\"merge-images-to-pdf\"]);\n  }\n}\nfunction PdfToolsComponent_section_24_ng_container_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"Merge Images to PDF\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction PdfToolsComponent_section_24_ng_container_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 31);\n    i0.ɵɵtext(2, \" Processing...\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction PdfToolsComponent_section_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"section\", 21)(1, \"h2\");\n    i0.ɵɵelement(2, \"i\", 36);\n    i0.ɵɵtext(3, \" Merge Images to PDF\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 37);\n    i0.ɵɵlistener(\"dragover\", function PdfToolsComponent_section_24_Template_div_dragover_4_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDragOver($event, \"merge-images-to-pdf\"));\n    })(\"dragleave\", function PdfToolsComponent_section_24_Template_div_dragleave_4_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDragLeave($event, \"merge-images-to-pdf\"));\n    })(\"drop\", function PdfToolsComponent_section_24_Template_div_drop_4_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDrop($event, \"merge-images-to-pdf\"));\n    });\n    i0.ɵɵelementStart(5, \"input\", 38, 3);\n    i0.ɵɵlistener(\"change\", function PdfToolsComponent_section_24_Template_input_change_5_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onFileChange($event, \"merge-images-to-pdf\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 25);\n    i0.ɵɵlistener(\"click\", function PdfToolsComponent_section_24_Template_div_click_7_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const mergeInput_r9 = i0.ɵɵreference(6);\n      return i0.ɵɵresetView(mergeInput_r9.click());\n    });\n    i0.ɵɵelement(8, \"i\", 39);\n    i0.ɵɵtemplate(9, PdfToolsComponent_section_24_p_9_Template, 2, 0, \"p\", 27)(10, PdfToolsComponent_section_24_p_10_Template, 6, 1, \"p\", 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, PdfToolsComponent_section_24_ul_11_Template, 2, 1, \"ul\", 40);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function PdfToolsComponent_section_24_Template_button_click_12_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.convert(\"merge-images-to-pdf\"));\n    });\n    i0.ɵɵtemplate(13, PdfToolsComponent_section_24_ng_container_13_Template, 2, 0, \"ng-container\", 27)(14, PdfToolsComponent_section_24_ng_container_14_Template, 3, 0, \"ng-container\", 27);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵclassProp(\"dragging\", ctx_r1.isDragging[\"merge-images-to-pdf\"]);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.getFilesArrayLength(\"merge-images-to-pdf\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.getFilesArrayLength(\"merge-images-to-pdf\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.getFilesArrayLength(\"merge-images-to-pdf\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.getFilesArrayLength(\"merge-images-to-pdf\") || ctx_r1.errorMessageMergeLimit || ctx_r1.progress > 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.progress === 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.progress > 0);\n  }\n}\nfunction PdfToolsComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 45);\n    i0.ɵɵelement(1, \"div\", 46);\n    i0.ɵɵelementStart(2, \"span\", 47);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"width\", ctx_r1.progress, \"%\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.progress, \"%\");\n  }\n}\nfunction PdfToolsComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 48)(1, \"p\", 49);\n    i0.ɵɵelement(2, \"i\", 50);\n    i0.ɵɵtext(3, \" Conversion complete! \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"a\", 51);\n    i0.ɵɵlistener(\"click\", function PdfToolsComponent_div_27_Template_a_click_4_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDownloadClick());\n    });\n    i0.ɵɵelement(5, \"i\", 52);\n    i0.ɵɵtext(6, \" Download \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 53);\n    i0.ɵɵtext(8, \" Convert Another \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"href\", ctx_r1.downloadUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction PdfToolsComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 54)(1, \"p\", 55);\n    i0.ɵɵelement(2, \"i\", 56);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 53);\n    i0.ɵɵtext(5, \"Try Again\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.errorMessage, \" \");\n  }\n}\nexport let PdfToolsComponent = /*#__PURE__*/(() => {\n  class PdfToolsComponent {\n    http;\n    route;\n    // Common properties for both functionalities\n    mode = 'jpg-to-pdf'; // Default mode\n    progress = 0;\n    downloadUrl = '';\n    errorMessage = '';\n    uploadSubscription = null;\n    // Properties for Single File Conversions (JPG/PNG to PDF, PDF to Word, Word to PDF)\n    selectedFileSingle = null;\n    isDragging = false; // For single file drag-over effect\n    fileInputSingle;\n    // Properties for Merge Images to PDF\n    selectedFilesMultiple = [];\n    previewUrlMultiple = ''; // Preview for the first image\n    // Usage Control for Merge Images to PDF (as provided in your code)\n    isPremiumUserMerge = false; // Can be true if user logs in as premium\n    freeUsesLimitMerge = 999999; // Set to a very high number for effectively unlimited daily merges\n    freeUsesRemainingMerge = this.freeUsesLimitMerge;\n    freeFileLimitMerge = 20; // Max files for free users per merge\n    fileInputMultiple;\n    constructor(http, route) {\n      this.http = http;\n      this.route = route;\n    }\n    ngOnInit() {\n      // Initialize usage limits for merge images tool\n      // We can still call checkUserStatus if you intend to use `isPremiumUserMerge` for other features\n      this.checkUserStatusMerge();\n      // No need to load daily usage from localStorage if there's effectively no daily limit\n      this.freeUsesRemainingMerge = this.freeUsesLimitMerge; // Ensure it's always set to the high limit on init\n    }\n    ngOnDestroy() {\n      if (this.uploadSubscription) {\n        this.uploadSubscription.unsubscribe();\n        this.uploadSubscription = null;\n      }\n    }\n    // --- Helper for file input accept attribute ---\n    getFileAcceptTypes(mode) {\n      switch (mode) {\n        case 'jpg-to-pdf':\n          return 'image/*';\n        // Accepts all image types\n        case 'pdf-to-word':\n          return '.pdf';\n        case 'word-to-pdf':\n          return '.docx';\n        // Accepts only .docx files\n        case 'merge-images-to-pdf':\n          return 'image/*';\n        // Accepts all image types for merge\n        default:\n          return '*/*';\n        // Fallback\n      }\n    }\n    // --- Common Reset Logic ---\n    reset() {\n      if (this.uploadSubscription) {\n        this.uploadSubscription.unsubscribe();\n        this.uploadSubscription = null;\n      }\n      // Reset single file properties\n      this.selectedFileSingle = null;\n      this.isDragging = false;\n      if (this.fileInputSingle) {\n        this.fileInputSingle.nativeElement.value = ''; // Clear single file input\n      }\n      // Reset multiple files properties\n      this.selectedFilesMultiple = [];\n      this.previewUrlMultiple = '';\n      if (this.fileInputMultiple) {\n        this.fileInputMultiple.nativeElement.value = ''; // Clear multiple file input\n      }\n      // Reset common properties\n      this.progress = 0;\n      this.downloadUrl = '';\n      this.errorMessage = '';\n      this.freeUsesRemainingMerge = this.freeUsesLimitMerge; // Reset merge usage to high limit\n    }\n    // --- Single File Conversion Methods ---\n    onFileSelectedSingle(event) {\n      const input = event.target;\n      this.selectedFileSingle = input.files?.[0] || null;\n      this.resetCommonStatesForNewUpload(); // Reset states common to all uploads\n      this.selectedFilesMultiple = []; // Ensure multiple is cleared\n      this.previewUrlMultiple = ''; // Ensure multiple preview is cleared\n    }\n    onDragOverSingle(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.isDragging = true;\n    }\n    onDragLeaveSingle(event) {\n      event.stopPropagation();\n      this.isDragging = false;\n    }\n    onDropSingle(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.isDragging = false;\n      const files = event.dataTransfer?.files;\n      if (files && files.length > 0) {\n        const file = files[0];\n        const acceptedTypes = this.getFileAcceptTypes(this.mode);\n        const isFileTypeAccepted = this.checkFileType(file, acceptedTypes);\n        if (isFileTypeAccepted) {\n          this.selectedFileSingle = file;\n          this.resetCommonStatesForNewUpload();\n          this.selectedFilesMultiple = []; // Ensure multiple is cleared\n          this.previewUrlMultiple = ''; // Ensure multiple preview is cleared\n        } else {\n          this.errorMessage = `Unsupported file type for ${this.mode} mode. Please select a valid file.`;\n          this.reset();\n        }\n      }\n    }\n    uploadSingleFile() {\n      if (!this.selectedFileSingle) {\n        this.errorMessage = 'Please select a file to convert.';\n        return;\n      }\n      this.resetCommonStatesForNewUpload(); // Reset before starting new upload\n      this.progress = 1; // Start progress bar immediately\n      const formData = new FormData();\n      formData.append('file', this.selectedFileSingle);\n      let apiUrl = '';\n      let mimeType = '';\n      let fileName = '';\n      switch (this.mode) {\n        case 'jpg-to-pdf':\n          apiUrl = 'http://127.0.0.1:8000/api/jpg-to-pdf';\n          mimeType = 'application/pdf';\n          fileName = 'converted.pdf';\n          break;\n        case 'pdf-to-word':\n          apiUrl = 'http://127.0.0.1:8000/api/pdf-to-word';\n          mimeType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';\n          fileName = 'converted.docx';\n          break;\n        case 'word-to-pdf':\n          apiUrl = 'http://127.0.0.1:8000/api/word-to-pdf';\n          mimeType = 'application/pdf';\n          fileName = 'converted.pdf';\n          break;\n        default:\n          this.errorMessage = 'Invalid conversion mode selected.';\n          this.reset();\n          return;\n      }\n      this.uploadSubscription = this.http.post(apiUrl, formData, {\n        responseType: 'blob',\n        reportProgress: true,\n        observe: 'events'\n      }).subscribe({\n        next: event => {\n          if (event.type === HttpEventType.UploadProgress && event.total) {\n            this.progress = Math.round(event.loaded / event.total * 100);\n          }\n          if (event.type === HttpEventType.Response) {\n            this.progress = 100; // Ensure 100% on completion\n            const blob = new Blob([event.body], {\n              type: mimeType\n            });\n            const url = URL.createObjectURL(blob);\n            this.downloadUrl = url; // Set download URL for success message\n            // No need to set downloadTriggered for auto-download, but it can be used for UI visibility\n            setTimeout(() => {\n              const anchor = document.createElement('a');\n              anchor.href = url;\n              anchor.download = fileName;\n              document.body.appendChild(anchor);\n              anchor.click();\n              document.body.removeChild(anchor);\n              URL.revokeObjectURL(url);\n              this.reset(); // Auto-clear after download\n            }, 500);\n          }\n        },\n        error: error => {\n          this.handleUploadError(error);\n          this.reset();\n        },\n        complete: () => {\n          this.unsubscribeUpload();\n        }\n      });\n    }\n    // --- Merge Images to PDF Methods ---\n    onFilesSelectedMultiple(event) {\n      const input = event.target;\n      if (input.files) {\n        this.selectedFilesMultiple = Array.from(input.files).filter(file => file.type.startsWith('image/'));\n        this.resetCommonStatesForNewUpload(); // Reset common states\n        this.selectedFileSingle = null; // Ensure single file is cleared\n        if (this.selectedFilesMultiple.length > 0) {\n          const firstFile = this.selectedFilesMultiple[0];\n          const reader = new FileReader();\n          reader.onload = e => {\n            this.previewUrlMultiple = e.target.result;\n          };\n          reader.readAsDataURL(firstFile);\n        } else {\n          this.previewUrlMultiple = '';\n        }\n        // Check file count limit for free users\n        if (!this.isPremiumUserMerge && this.selectedFilesMultiple.length > this.freeFileLimitMerge) {\n          this.errorMessage = `Free users can merge up to ${this.freeFileLimitMerge} images at once.`;\n        } else {\n          this.errorMessage = '';\n        }\n      }\n    }\n    onFilesDroppedMultiple(event) {\n      this.preventDefaults(event);\n      const files = event.dataTransfer?.files;\n      if (files && files.length > 0) {\n        this.selectedFilesMultiple = Array.from(files).filter(file => file.type.startsWith('image/'));\n        this.resetCommonStatesForNewUpload();\n        this.selectedFileSingle = null; // Ensure single file is cleared\n        if (this.selectedFilesMultiple.length > 0) {\n          const firstFile = this.selectedFilesMultiple[0];\n          const reader = new FileReader();\n          reader.onload = e => {\n            this.previewUrlMultiple = e.target.result;\n          };\n          reader.readAsDataURL(firstFile);\n        } else {\n          this.previewUrlMultiple = '';\n        }\n        // Check file count limit for free users\n        if (!this.isPremiumUserMerge && this.selectedFilesMultiple.length > this.freeFileLimitMerge) {\n          this.errorMessage = `Free users can merge up to ${this.freeFileLimitMerge} images at once.`;\n        } else {\n          this.errorMessage = '';\n        }\n      }\n    }\n    preventDefaults(event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    checkUserStatusMerge() {\n      // This is where you'd typically check user's premium status from an auth service\n      // For now, it's hardcoded to false as per your original request to essentially remove daily limits for free users.\n      this.isPremiumUserMerge = false;\n    }\n    incrementDailyUsageMerge() {\n      // This method will still decrement `freeUsesRemainingMerge` but from a very large number,\n      // so it will effectively never hit zero for free users.\n      if (!this.isPremiumUserMerge) {\n        this.freeUsesRemainingMerge--;\n      }\n    }\n    uploadMultipleFiles() {\n      if (!this.selectedFilesMultiple.length) {\n        this.errorMessage = 'Please select images to merge.';\n        return;\n      }\n      if (!this.isPremiumUserMerge && this.freeUsesRemainingMerge <= 0) {\n        this.errorMessage = 'Daily free merge limit reached! Please upgrade to Premium for unlimited use.';\n        return;\n      }\n      if (!this.isPremiumUserMerge && this.selectedFilesMultiple.length > this.freeFileLimitMerge) {\n        this.errorMessage = `Free users can merge up to ${this.freeFileLimitMerge} images at once.`;\n        return;\n      }\n      this.resetCommonStatesForNewUpload(); // Reset before starting new upload\n      this.progress = 1; // Start progress bar immediately\n      const formData = new FormData();\n      this.selectedFilesMultiple.forEach(file => formData.append('files', file)); // Note: 'files' is the backend expected field name\n      this.uploadSubscription = this.http.post('http://127.0.0.1:8000/api/merge-images-to-pdf', formData, {\n        responseType: 'blob',\n        reportProgress: true,\n        observe: 'events'\n      }).subscribe({\n        next: event => {\n          if (event.type === HttpEventType.UploadProgress && event.total) {\n            this.progress = Math.round(event.loaded / event.total * 100);\n          }\n          if (event.type === HttpEventType.Response) {\n            this.progress = 100; // Ensure 100% on completion\n            if (event.body) {\n              const blob = new Blob([event.body], {\n                type: 'application/pdf'\n              });\n              const url = URL.createObjectURL(blob);\n              this.downloadUrl = url; // Set download URL for success message\n              // Programmatically trigger download (optional, but good for multi-file tools)\n              const link = document.createElement('a');\n              link.href = url;\n              link.download = 'merged_images.pdf'; // Specific name for merged PDF\n              document.body.appendChild(link);\n              link.click();\n              document.body.removeChild(link);\n              URL.revokeObjectURL(url);\n              this.incrementDailyUsageMerge(); // Increment usage upon successful merge\n              // DO NOT reset immediately here. Let the user see the download link and click \"Merge Another\".\n              // The download URL is set, which shows the download section.\n            } else {\n              this.errorMessage = 'PDF creation failed: Empty response from server.';\n              this.progress = 0;\n            }\n          }\n        },\n        error: error => {\n          this.handleUploadError(error);\n        },\n        complete: () => {\n          this.unsubscribeUpload();\n        }\n      });\n    }\n    // --- Utility methods ---\n    resetCommonStatesForNewUpload() {\n      this.progress = 0;\n      this.downloadUrl = '';\n      this.errorMessage = '';\n      // Ensure both file inputs are cleared visually if new files are selected in either mode\n      if (this.fileInputSingle && this.fileInputSingle.nativeElement.value) {\n        this.fileInputSingle.nativeElement.value = '';\n      }\n      if (this.fileInputMultiple && this.fileInputMultiple.nativeElement.value) {\n        this.fileInputMultiple.nativeElement.value = '';\n      }\n    }\n    handleUploadError(error) {\n      console.error('Upload error:', error);\n      this.progress = 0;\n      if (error.error instanceof ErrorEvent) {\n        this.errorMessage = `An error occurred: ${error.error.message}`;\n      } else {\n        if (error.error instanceof Blob && error.error.type === 'application/json') {\n          const reader = new FileReader();\n          reader.onload = () => {\n            try {\n              const errorBody = JSON.parse(reader.result);\n              this.errorMessage = errorBody.detail || `Server responded with ${error.status}: ${error.statusText || 'Unknown error'}.`;\n            } catch (e) {\n              this.errorMessage = `Server responded with ${error.status}: ${error.statusText || 'Unknown error'}.`;\n            }\n          };\n          reader.readAsText(error.error);\n        } else {\n          this.errorMessage = `Server responded with ${error.status}: ${error.statusText || 'Unknown error'}.`;\n        }\n        if (error.status === 0) {\n          this.errorMessage = 'Could not connect to the server. Please ensure the backend is running.';\n        }\n        if (error.status === 403) {\n          this.errorMessage = this.errorMessage || 'You have reached your daily limit or exceeded file count for the free plan.';\n        }\n      }\n    }\n    unsubscribeUpload() {\n      if (this.uploadSubscription) {\n        this.uploadSubscription.unsubscribe();\n        this.uploadSubscription = null;\n      }\n    }\n    // Helper for more robust file type checking (can be expanded)\n    checkFileType(file, acceptedTypes) {\n      if (acceptedTypes === '*/*') return true;\n      if (acceptedTypes.includes(file.type)) return true; // Direct MIME type match\n      // Check by extension for common types where MIME might be tricky\n      const fileNameLower = file.name.toLowerCase();\n      if (acceptedTypes === '.pdf' && fileNameLower.endsWith('.pdf')) return true;\n      if (acceptedTypes === '.docx' && fileNameLower.endsWith('.docx')) return true;\n      if (acceptedTypes === 'image/*' && (fileNameLower.endsWith('.jpg') || fileNameLower.endsWith('.jpeg') || fileNameLower.endsWith('.png') || fileNameLower.endsWith('.gif') || fileNameLower.endsWith('.bmp'))) return true;\n      return false;\n    }\n    static ɵfac = function PdfToolsComponent_Factory(t) {\n      return new (t || PdfToolsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PdfToolsComponent,\n      selectors: [[\"app-pdf-tools\"]],\n      viewQuery: function PdfToolsComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(_c1, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInputSingle = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInputMultiple = _t.first);\n        }\n      },\n      decls: 29,\n      vars: 9,\n      consts: [[\"jpgToPdfInput\", \"\"], [\"pdfToWordInput\", \"\"], [\"wordToPdfInput\", \"\"], [\"mergeInput\", \"\"], [1, \"pdf-toolkit-container\"], [1, \"toolkit-header\"], [1, \"fas\", \"fa-file-pdf\"], [1, \"tool-selector\"], [\"for\", \"mode\"], [\"id\", \"mode\", 3, \"ngModelChange\", \"ngModel\"], [\"value\", \"jpg-to-pdf\"], [\"value\", \"pdf-to-word\"], [\"value\", \"word-to-pdf\"], [\"value\", \"merge-images-to-pdf\"], [1, \"tool-sections\"], [3, \"ngSwitch\"], [\"class\", \"tool-card\", 4, \"ngSwitchCase\"], [1, \"status-section\"], [\"class\", \"progress-container\", 4, \"ngIf\"], [\"class\", \"result-display\", 4, \"ngIf\"], [\"class\", \"error-display\", 4, \"ngIf\"], [1, \"tool-card\"], [1, \"fas\", \"fa-image\"], [1, \"upload-area\", 3, \"dragover\", \"dragleave\", \"drop\"], [\"type\", \"file\", \"accept\", \"image/png, image/jpeg\", \"hidden\", \"\", 3, \"change\"], [1, \"upload-prompt\", 3, \"click\"], [1, \"fas\", \"fa-upload\", \"upload-icon\"], [4, \"ngIf\"], [1, \"action-button\", \"convert-button\", 3, \"click\", \"disabled\"], [1, \"file-selected\"], [1, \"fas\", \"fa-check-circle\", \"success-icon\"], [1, \"fas\", \"fa-sync\", \"fa-spin\"], [1, \"fas\", \"fa-file-word\"], [\"type\", \"file\", \"accept\", \"application/pdf\", \"hidden\", \"\", 3, \"change\"], [1, \"fas\", \"fa-file-alt\"], [\"type\", \"file\", \"accept\", \".doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document\", \"hidden\", \"\", 3, \"change\"], [1, \"fas\", \"fa-images\"], [1, \"upload-area\", \"merge-upload-area\", 3, \"dragover\", \"dragleave\", \"drop\"], [\"type\", \"file\", \"accept\", \"image/*\", \"multiple\", \"\", \"hidden\", \"\", 3, \"change\"], [1, \"fas\", \"fa-folder-open\", \"upload-icon\"], [\"class\", \"selected-file-list\", 4, \"ngIf\"], [1, \"clear-selection-button\", 3, \"click\"], [1, \"selected-file-list\"], [4, \"ngFor\", \"ngForOf\"], [1, \"fas\", \"fa-file-image\", \"file-icon\"], [1, \"progress-container\"], [1, \"progress-bar-fill\"], [1, \"progress-text\"], [1, \"result-display\"], [1, \"success-message\"], [1, \"fas\", \"fa-check-circle\", \"success-icon-large\"], [\"download\", \"\", 1, \"download-button\", 3, \"click\", \"href\"], [1, \"fas\", \"fa-download\"], [1, \"reset-button\"], [1, \"error-display\"], [1, \"error-message\"], [1, \"fas\", \"fa-exclamation-triangle\", \"error-icon-large\"]],\n      template: function PdfToolsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 4)(1, \"header\", 5)(2, \"h1\");\n          i0.ɵɵelement(3, \"i\", 6);\n          i0.ɵɵtext(4, \" PDF Toolkit\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"p\");\n          i0.ɵɵtext(6, \"Your Smart & Smooth File Converter\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 7)(8, \"label\", 8);\n          i0.ɵɵtext(9, \"Choose a Conversion Tool:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"select\", 9);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function PdfToolsComponent_Template_select_ngModelChange_10_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.mode, $event) || (ctx.mode = $event);\n            return $event;\n          });\n          i0.ɵɵelementStart(11, \"option\", 10);\n          i0.ɵɵtext(12, \"\\uD83D\\uDDBC\\uFE0F JPG/PNG to PDF\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"option\", 11);\n          i0.ɵɵtext(14, \"\\uD83D\\uDCC4 PDF to Word\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"option\", 12);\n          i0.ɵɵtext(16, \"\\uD83D\\uDCDD Word to PDF\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"option\", 13);\n          i0.ɵɵtext(18, \"\\uD83C\\uDFB4 Merge Images to PDF\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(19, \"div\", 14);\n          i0.ɵɵelementContainerStart(20, 15);\n          i0.ɵɵtemplate(21, PdfToolsComponent_section_21_Template, 14, 7, \"section\", 16)(22, PdfToolsComponent_section_22_Template, 14, 7, \"section\", 16)(23, PdfToolsComponent_section_23_Template, 14, 7, \"section\", 16)(24, PdfToolsComponent_section_24_Template, 15, 8, \"section\", 16);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"div\", 17);\n          i0.ɵɵtemplate(26, PdfToolsComponent_div_26_Template, 4, 3, \"div\", 18)(27, PdfToolsComponent_div_27_Template, 9, 1, \"div\", 19)(28, PdfToolsComponent_div_28_Template, 6, 1, \"div\", 20);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(10);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.mode);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngSwitch\", ctx.mode);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngSwitchCase\", \"jpg-to-pdf\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngSwitchCase\", \"pdf-to-word\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngSwitchCase\", \"word-to-pdf\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngSwitchCase\", \"merge-images-to-pdf\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.progress > 0 && ctx.progress < 100);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.downloadUrl);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        }\n      },\n      dependencies: [i3.NgForOf, i3.NgIf, i3.NgSwitch, i3.NgSwitchCase, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgModel],\n      styles: [\"@import\\\"https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap\\\";body[_ngcontent-%COMP%]{margin:0;font-family:Poppins,sans-serif;background:linear-gradient(135deg,#f0f8ff,#e6f7ff);display:flex;justify-content:center;align-items:center;min-height:100vh;color:#333;overflow-x:hidden}.pdf-toolkit-container[_ngcontent-%COMP%]{max-width:1000px;width:90%;margin:40px auto;background:#fff;border-radius:25px;box-shadow:0 25px 50px #00000026;padding:40px;text-align:center;animation:_ngcontent-%COMP%_fadeInScale .8s ease-out forwards}@keyframes _ngcontent-%COMP%_fadeInScale{0%{opacity:0;transform:scale(.95) translateY(20px)}to{opacity:1;transform:scale(1) translateY(0)}}.toolkit-header[_ngcontent-%COMP%]{margin-bottom:40px}.toolkit-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:2.8rem;color:#1a5e9a;margin-bottom:10px;font-weight:700;letter-spacing:-.8px;display:flex;align-items:center;justify-content:center;gap:15px}.toolkit-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]   .fas[_ngcontent-%COMP%]{font-size:3.2rem;color:#007bff}.toolkit-header[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:1.2rem;color:#7f8c8d;font-weight:400}.tool-sections[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fit,minmax(300px,1fr));gap:30px;margin-bottom:40px}.tool-card[_ngcontent-%COMP%]{background:#f7faff;border:1px solid #e0e7ee;border-radius:20px;padding:30px;box-shadow:0 10px 30px #00000014;transition:transform .3s ease,box-shadow .3s ease;display:flex;flex-direction:column;justify-content:space-between;position:relative;overflow:hidden}.tool-card[_ngcontent-%COMP%]:before{content:\\\"\\\";position:absolute;top:-50%;left:-50%;width:200%;height:200%;background:radial-gradient(circle at top left,rgba(0,123,255,.05),transparent 70%);opacity:.5;z-index:0}.tool-card[_ngcontent-%COMP%]:hover{transform:translateY(-10px) scale(1.02);box-shadow:0 20px 45px #00000026}.tool-card[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:1.6rem;color:#1a5e9a;margin-bottom:25px;font-weight:600;display:flex;align-items:center;justify-content:center;gap:10px;z-index:1;position:relative}.tool-card[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]   .fas[_ngcontent-%COMP%]{color:#007bff;font-size:1.8rem}.upload-area[_ngcontent-%COMP%]{background-color:#fff;border:3px dashed #a8d5ff;padding:40px 20px;cursor:pointer;border-radius:18px;margin-bottom:30px;transition:all .4s ease-in-out;display:flex;flex-direction:column;align-items:center;justify-content:center;min-height:160px;position:relative;z-index:1}.upload-area[_ngcontent-%COMP%]:hover{background-color:#eaf7ff;border-color:#66b3ff;transform:translateY(-5px);box-shadow:0 12px 30px #0000001a}.upload-area.dragging[_ngcontent-%COMP%]{background-color:#d1e7fa;border-color:#007bff;box-shadow:0 0 25px #007bff66;animation:_ngcontent-%COMP%_pulseBorder 1.5s infinite alternate}@keyframes _ngcontent-%COMP%_pulseBorder{0%{border-color:#a8d5ff}to{border-color:#007bff}}.upload-prompt[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;gap:15px;color:#555;width:100%}.upload-icon[_ngcontent-%COMP%]{font-size:3.5rem;color:#007bff;transition:transform .3s ease-out}.upload-area[_ngcontent-%COMP%]:hover   .upload-icon[_ngcontent-%COMP%]{transform:translateY(-8px) scale(1.1)}.upload-prompt[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:1.1rem;font-weight:500;color:#444;margin:0}.file-selected[_ngcontent-%COMP%]{display:flex;align-items:center;gap:8px;color:#28a745;font-weight:600;animation:_ngcontent-%COMP%_fadeInDown .5s ease-out forwards}@keyframes _ngcontent-%COMP%_fadeInDown{0%{opacity:0;transform:translateY(-10px)}to{opacity:1;transform:translateY(0)}}.success-icon[_ngcontent-%COMP%]{color:#28a745;font-size:1.6rem}.merge-upload-area[_ngcontent-%COMP%]{min-height:200px;justify-content:flex-start}.merge-upload-area[_ngcontent-%COMP%]   .upload-prompt[_ngcontent-%COMP%]{margin-bottom:15px}.clear-selection-button[_ngcontent-%COMP%]{background-color:#ff6b6b;color:#fff;border:none;padding:8px 15px;border-radius:8px;cursor:pointer;font-size:.9rem;font-weight:500;transition:background-color .3s ease,transform .2s ease;margin-left:10px}.clear-selection-button[_ngcontent-%COMP%]:hover{background-color:#e63946;transform:scale(1.05)}.selected-file-list[_ngcontent-%COMP%]{list-style:none;padding:10px 0 0;margin:0;width:100%;max-height:120px;overflow-y:auto;border-top:1px dashed #e0e0e0;text-align:left}.selected-file-list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{font-size:.95rem;color:#666;padding:5px 0;border-bottom:1px dotted #f0f0f0;display:flex;align-items:center;gap:8px}.selected-file-list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:last-child{border-bottom:none}.file-icon[_ngcontent-%COMP%]{color:#007bff}.action-button[_ngcontent-%COMP%]{background:linear-gradient(45deg,#007bff,#0056d2);border:none;padding:15px 30px;border-radius:12px;color:#fff;font-size:1.15rem;font-weight:600;cursor:pointer;letter-spacing:.5px;box-shadow:0 8px 20px #005ad24d;transition:all .3s ease;width:100%;margin-top:auto;display:flex;align-items:center;justify-content:center;gap:10px}.action-button[_ngcontent-%COMP%]:hover{background:linear-gradient(45deg,#0056d2,#003f99);transform:translateY(-3px);box-shadow:0 12px 25px #005ad273}.action-button[_ngcontent-%COMP%]:disabled{background:#ccc;color:#888;cursor:not-allowed;box-shadow:none;transform:none}.status-section[_ngcontent-%COMP%]{margin-top:50px;padding:30px;background-color:#f0f8ff;border-radius:20px;box-shadow:inset 0 0 15px #0000000d}.progress-container[_ngcontent-%COMP%]{width:80%;margin:0 auto 30px;background-color:#e9ecef;border-radius:15px;height:25px;overflow:hidden;position:relative;box-shadow:inset 0 2px 5px #0000001a;animation:_ngcontent-%COMP%_fadeIn .6s ease forwards}.progress-bar-fill[_ngcontent-%COMP%]{height:100%;background:linear-gradient(90deg,#4caf50,#2e8b57);width:0%;border-radius:15px;transition:width .5s ease-in-out;display:flex;align-items:center;justify-content:flex-end;padding-right:10px}.progress-text[_ngcontent-%COMP%]{position:absolute;width:100%;text-align:center;line-height:25px;color:#333;font-weight:600;font-size:1rem;text-shadow:0 1px 2px rgba(255,255,255,.5)}.result-display[_ngcontent-%COMP%], .error-display[_ngcontent-%COMP%]{padding:25px;border-radius:15px;margin-top:30px;animation:_ngcontent-%COMP%_zoomIn .6s ease-out forwards}.result-display[_ngcontent-%COMP%]{background-color:#e6ffe6;border:2px solid #77dd77}.error-display[_ngcontent-%COMP%]{background-color:#ffe6e6;border:2px solid #ff6b6b}.success-message[_ngcontent-%COMP%], .error-message[_ngcontent-%COMP%]{font-size:1.3rem;font-weight:700;margin-bottom:20px;display:flex;align-items:center;justify-content:center;gap:12px}.success-message[_ngcontent-%COMP%]{color:#2e8b57}.error-message[_ngcontent-%COMP%]{color:#e63946}.success-icon-large[_ngcontent-%COMP%]{font-size:2.8rem;color:#4caf50;animation:_ngcontent-%COMP%_bounceIn .8s ease-out}.error-icon-large[_ngcontent-%COMP%]{font-size:2.8rem;color:#ff6b6b;animation:_ngcontent-%COMP%_shakeX .8s ease-out}.download-button[_ngcontent-%COMP%], .reset-button[_ngcontent-%COMP%]{padding:12px 25px;border-radius:10px;font-size:1rem;font-weight:600;cursor:pointer;transition:all .3s ease;display:inline-flex;align-items:center;gap:8px;margin:0 10px;text-decoration:none;color:#fff}.download-button[_ngcontent-%COMP%]{background:linear-gradient(45deg,#28a745,#218838);box-shadow:0 5px 15px #28a7454d}.download-button[_ngcontent-%COMP%]:hover{background:linear-gradient(45deg,#218838,#1e7e34);transform:translateY(-3px);box-shadow:0 8px 20px #28a74566}.reset-button[_ngcontent-%COMP%]{background:linear-gradient(45deg,#6c757d,#495057);box-shadow:0 4px 12px #00000026}.reset-button[_ngcontent-%COMP%]:hover{background:linear-gradient(45deg,#5a6268,#343a40);transform:translateY(-3px);box-shadow:0 6px 15px #00000040}@keyframes _ngcontent-%COMP%_fadeIn{0%{opacity:0}to{opacity:1}}@keyframes _ngcontent-%COMP%_zoomIn{0%{opacity:0;transform:scale(.8)}to{opacity:1;transform:scale(1)}}@keyframes _ngcontent-%COMP%_bounceIn{0%,20%,40%,60%,80%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:scale3d(.3,.3,.3)}20%{transform:scale3d(1.1,1.1,1.1)}40%{transform:scale3d(.9,.9,.9)}60%{opacity:1;transform:scale3d(1.03,1.03,1.03)}80%{transform:scale3d(.97,.97,.97)}to{opacity:1;transform:scaleZ(1)}}@keyframes _ngcontent-%COMP%_shakeX{0%,to{transform:translateZ(0)}10%,30%,50%,70%,90%{transform:translate3d(-10px,0,0)}20%,40%,60%,80%{transform:translate3d(10px,0,0)}}@media (max-width: 768px){.pdf-toolkit-container[_ngcontent-%COMP%]{padding:25px}.toolkit-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:2.2rem;flex-direction:column;gap:5px}.toolkit-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]   .fas[_ngcontent-%COMP%]{font-size:2.5rem}.tool-sections[_ngcontent-%COMP%]{grid-template-columns:1fr}.tool-card[_ngcontent-%COMP%]{padding:25px}.upload-area[_ngcontent-%COMP%]{padding:30px 15px}.action-button[_ngcontent-%COMP%]{font-size:1.05rem;padding:12px 20px}.progress-container[_ngcontent-%COMP%]{width:95%}.success-message[_ngcontent-%COMP%], .error-message[_ngcontent-%COMP%]{font-size:1.1rem;flex-direction:column;gap:8px}.download-button[_ngcontent-%COMP%], .reset-button[_ngcontent-%COMP%]{font-size:.95rem;padding:10px 20px;margin:5px}}\"]\n    });\n  }\n  return PdfToolsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}