{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { QuillModule } from 'ngx-quill';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"ngx-quill\";\nconst _c0 = () => ({\n  height: \"300px\"\n});\nfunction WordEditComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.…µ…µgetCurrentView();\n    i0.…µ…µelementStart(0, \"div\", 3)(1, \"h3\");\n    i0.…µ…µtext(2, \"\\uD83D\\uDCDD Editor\");\n    i0.…µ…µelementEnd();\n    i0.…µ…µelementStart(3, \"quill-editor\", 4);\n    i0.…µ…µtwoWayListener(\"ngModelChange\", function WordEditComponent_div_3_Template_quill_editor_ngModelChange_3_listener($event) {\n      i0.…µ…µrestoreView(_r1);\n      const ctx_r1 = i0.…µ…µnextContext();\n      i0.…µ…µtwoWayBindingSet(ctx_r1.editorContent, $event) || (ctx_r1.editorContent = $event);\n      return i0.…µ…µresetView($event);\n    });\n    i0.…µ…µelementEnd();\n    i0.…µ…µelementStart(4, \"div\", 5)(5, \"button\", 6);\n    i0.…µ…µlistener(\"click\", function WordEditComponent_div_3_Template_button_click_5_listener() {\n      i0.…µ…µrestoreView(_r1);\n      const ctx_r1 = i0.…µ…µnextContext();\n      return i0.…µ…µresetView(ctx_r1.saveEditedContent());\n    });\n    i0.…µ…µtext(6, \"\\uD83D\\uDCBE Save as .docx\");\n    i0.…µ…µelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.…µ…µnextContext();\n    i0.…µ…µadvance(3);\n    i0.…µ…µstyleMap(i0.…µ…µpureFunction0(4, _c0));\n    i0.…µ…µtwoWayProperty(\"ngModel\", ctx_r1.editorContent);\n    i0.…µ…µproperty(\"modules\", ctx_r1.editorModules);\n  }\n}\nfunction WordEditComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"div\", 7);\n    i0.…µ…µtext(1, \" \\u274C No editable content found in the Word file.\\n\");\n    i0.…µ…µelementEnd();\n  }\n}\nexport let WordEditComponent = /*#__PURE__*/(() => {\n  class WordEditComponent {\n    http;\n    editorContent = '';\n    fileName = '';\n    fileLoaded = false;\n    // üß∞ Rich toolbar settings for formatting\n    editorModules = {\n      toolbar: [[{\n        header: [1, 2, 3, false]\n      }], ['bold', 'italic', 'underline', 'strike'], [{\n        list: 'ordered'\n      }, {\n        list: 'bullet'\n      }], [{\n        align: []\n      }], ['link', 'clean']]\n    };\n    constructor(http) {\n      this.http = http;\n    }\n    // üì§ Upload .docx file ‚Üí convert to HTML\n    onFileSelected(event) {\n      const file = event.target.files[0];\n      this.fileLoaded = false;\n      if (!file || !file.name.endsWith('.docx')) {\n        alert('Please upload a valid .docx file.');\n        return;\n      }\n      this.fileName = file.name;\n      const formData = new FormData();\n      formData.append('file', file);\n      this.http.post('/api/word-to-html', formData, {\n        responseType: 'text'\n      }).subscribe({\n        next: htmlContent => {\n          this.editorContent = htmlContent.trim();\n          this.fileLoaded = true;\n        },\n        error: err => {\n          console.error('‚ùå Error converting Word to HTML:', err);\n          this.fileLoaded = true;\n        }\n      });\n    }\n    // üíæ Save the HTML content ‚Üí .docx download\n    saveEditedContent() {\n      if (!this.editorContent.trim()) {\n        alert('Editor is empty!');\n        return;\n      }\n      const payload = {\n        html: this.editorContent\n      };\n      this.http.post('/api/html-to-word', payload, {\n        responseType: 'blob'\n      }).subscribe({\n        next: blob => {\n          const url = window.URL.createObjectURL(blob);\n          const a = document.createElement('a');\n          a.href = url;\n          a.download = this.fileName || 'edited.docx';\n          a.click();\n          URL.revokeObjectURL(url);\n        },\n        error: err => {\n          console.error('‚ùå Error generating DOCX:', err);\n        }\n      });\n    }\n    static …µfac = function WordEditComponent_Factory(t) {\n      return new (t || WordEditComponent)(i0.…µ…µdirectiveInject(i1.HttpClient));\n    };\n    static …µcmp = /*@__PURE__*/i0.…µ…µdefineComponent({\n      type: WordEditComponent,\n      selectors: [[\"app-word-edit\"]],\n      standalone: true,\n      features: [i0.…µ…µStandaloneFeature],\n      decls: 5,\n      vars: 2,\n      consts: [[\"type\", \"file\", \"accept\", \".docx\", 3, \"change\"], [\"style\", \"margin-top: 20px;\", 4, \"ngIf\"], [\"style\", \"margin-top: 20px; color: red;\", 4, \"ngIf\"], [2, \"margin-top\", \"20px\"], [3, \"ngModelChange\", \"ngModel\", \"modules\"], [2, \"margin-top\", \"10px\"], [3, \"click\"], [2, \"margin-top\", \"20px\", \"color\", \"red\"]],\n      template: function WordEditComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.…µ…µelementStart(0, \"h2\");\n          i0.…µ…µtext(1, \"\\u270F\\uFE0F Edit Word Document\");\n          i0.…µ…µelementEnd();\n          i0.…µ…µelementStart(2, \"input\", 0);\n          i0.…µ…µlistener(\"change\", function WordEditComponent_Template_input_change_2_listener($event) {\n            return ctx.onFileSelected($event);\n          });\n          i0.…µ…µelementEnd();\n          i0.…µ…µtemplate(3, WordEditComponent_div_3_Template, 7, 5, \"div\", 1)(4, WordEditComponent_div_4_Template, 2, 0, \"div\", 2);\n        }\n        if (rf & 2) {\n          i0.…µ…µadvance(3);\n          i0.…µ…µproperty(\"ngIf\", ctx.editorContent);\n          i0.…µ…µadvance();\n          i0.…µ…µproperty(\"ngIf\", !ctx.editorContent && ctx.fileLoaded);\n        }\n      },\n      dependencies: [CommonModule, i2.NgIf, HttpClientModule, FormsModule, i3.NgControlStatus, i3.NgModel, QuillModule, i4.QuillEditorComponent]\n    });\n  }\n  return WordEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}