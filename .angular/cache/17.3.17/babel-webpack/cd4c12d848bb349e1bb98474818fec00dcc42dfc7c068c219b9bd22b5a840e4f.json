{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst _c0 = [\"fileInput\"];\nexport let CompressImageComponent = /*#__PURE__*/(() => {\n  class CompressImageComponent {\n    http;\n    fileInput;\n    selectedFile = null;\n    progress = 0;\n    originalSize = 0;\n    compressedSize = 0;\n    constructor(http) {\n      this.http = http;\n    }\n    onFileSelected(event) {\n      const input = event.target;\n      if (input.files?.length) {\n        this.selectedFile = input.files[0];\n        this.originalSize = this.selectedFile.size;\n      }\n    }\n    upload() {\n      if (!this.selectedFile) return;\n      const formData = new FormData();\n      formData.append('file', this.selectedFile);\n      this.http.post('http://127.0.0.1:8000/api/compress-image', formData, {\n        observe: 'events',\n        responseType: 'blob',\n        reportProgress: true\n      }).subscribe(event => {\n        if (event.type === HttpEventType.UploadProgress && event.total) {\n          this.progress = Math.round(event.loaded / event.total * 100);\n        }\n        if (event.type === HttpEventType.Response) {\n          const compressedBlob = new Blob([event.body], {\n            type: event.body?.type || 'image/jpeg'\n          });\n          this.compressedSize = compressedBlob.size;\n          const url = URL.createObjectURL(compressedBlob);\n          const a = document.createElement('a');\n          a.href = url;\n          a.download = 'compressed-image' + this.getExtension(this.selectedFile.name);\n          a.click();\n          URL.revokeObjectURL(url);\n          this.reset();\n        }\n      });\n    }\n    getExtension(filename) {\n      const ext = filename.slice(filename.lastIndexOf('.'));\n      return ext || '.jpg';\n    }\n    reset() {\n      this.progress = 0;\n      this.compressedSize = 0;\n      this.originalSize = 0;\n      this.selectedFile = null;\n      if (this.fileInput) this.fileInput.nativeElement.value = '';\n    }\n    static ɵfac = function CompressImageComponent_Factory(t) {\n      return new (t || CompressImageComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CompressImageComponent,\n      selectors: [[\"app-compress-image\"]],\n      viewQuery: function CompressImageComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInput = _t.first);\n        }\n      },\n      decls: 0,\n      vars: 0,\n      template: function CompressImageComponent_Template(rf, ctx) {},\n      styles: [\".tool-container[_ngcontent-%COMP%]{padding:20px;border:1px solid #ccc;border-radius:8px;max-width:500px;margin:30px auto;background-color:#f9f9f9;text-align:center}input[type=file][_ngcontent-%COMP%]{margin-bottom:10px}button[_ngcontent-%COMP%]{margin-top:10px;padding:8px 20px;font-weight:700;cursor:pointer}\"]\n    });\n  }\n  return CompressImageComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}