{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { EditPdfComponent } from './tools/edit-pdf/edit-pdf.component';\n// import { WordToPdfComponent } from './tools/word-to-pdf/word-to-pdf.component';\nimport { CompressImageComponent } from './tools/compress-image/compress-image.component';\nimport { MergeImagesToPdfComponent } from './tools/merge-images-to-pdf/merge-images-to-pdf.component';\nimport { PdfToolsComponent } from './tools/pdf-tools/pdf-tools.component';\nimport { ProtectPdfPasswordComponent } from './tools/protect-pdf-password/protect-pdf-password.component';\nimport { RemovePdfPasswordComponent } from './tools/remove-pdf-password/remove-pdf-password.component';\nimport { WordEditComponent } from './tools/word-edit/word-edit.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: 'pdf-tools',\n  component: PdfToolsComponent\n}, {\n  path: 'compress-image',\n  component: CompressImageComponent\n}, {\n  path: 'edit-pdf',\n  component: EditPdfComponent\n},\n// { path: 'word-to-pdf', component: WordToPdfComponent },\n{\n  path: 'merge-images-to-pdf',\n  component: MergeImagesToPdfComponent\n}, {\n  path: 'protect-pdf-password',\n  component: ProtectPdfPasswordComponent\n}, {\n  path: 'remove-pdf-password',\n  component: RemovePdfPasswordComponent\n}, {\n  path: 'edit-word',\n  component: WordEditComponent\n},\n// ✅ Add route for word editor\n{\n  path: '',\n  redirectTo: '/pdf-tools',\n  pathMatch: 'full'\n}, {\n  path: '**',\n  redirectTo: '/pdf-tools'\n} // optional: handle 404s\n];\nexport let AppRoutingModule = /*#__PURE__*/(() => {\n  class AppRoutingModule {\n    static ɵfac = function AppRoutingModule_Factory(t) {\n      return new (t || AppRoutingModule)();\n    };\n    static ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppRoutingModule\n    });\n    static ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [RouterModule.forRoot(routes), RouterModule]\n    });\n  }\n  return AppRoutingModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}