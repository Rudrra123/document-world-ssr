{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar _a;\nimport { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nlet AppComponent = class AppComponent {\n  translate;\n  selectedLang = 'en';\n  constructor(translate) {\n    this.translate = translate;\n    this.translate.setDefaultLang('en');\n    this.translate.use(this.selectedLang);\n  }\n  changeLang(event) {\n    this.translate.use(this.selectedLang);\n  }\n  toggleTheme() {\n    document.body.classList.toggle('dark-theme');\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n}), __metadata(\"design:paramtypes\", [typeof (_a = typeof TranslateService !== \"undefined\" && TranslateService) === \"function\" ? _a : Object])], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}