{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { environment } from 'src/environments/environment';\nimport { ActivatedRoute } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/platform-browser\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = [\"fileInputSingle\"];\nconst _c1 = () => [\"/pdf-tools\", \"jpg-to-pdf\"];\nconst _c2 = () => [\"/pdf-tools\"];\nfunction CompressImageComponent_header_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"header\", 4)(1, \"h1\");\n    i0.…µ…µtext(2, \"\\uD83D\\uDE80 Image\");\n    i0.…µ…µelementEnd();\n    i0.…µ…µelementStart(3, \"p\");\n    i0.…µ…µtext(4, \"Every tool you need to work with your files, all in one place.\");\n    i0.…µ…µelementEnd()();\n  }\n}\nfunction CompressImageComponent_main_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.…µ…µgetCurrentView();\n    i0.…µ…µelementStart(0, \"main\", 5)(1, \"div\", 6);\n    i0.…µ…µlistener(\"click\", function CompressImageComponent_main_2_Template_div_click_1_listener() {\n      i0.…µ…µrestoreView(_r1);\n      const ctx_r1 = i0.…µ…µnextContext();\n      return i0.…µ…µresetView(ctx_r1.setActiveTool(\"jpg-to-pdf\"));\n    });\n    i0.…µ…µelementStart(2, \"div\", 7);\n    i0.…µ…µelement(3, \"i\", 8);\n    i0.…µ…µelementEnd();\n    i0.…µ…µelementStart(4, \"h3\", 9);\n    i0.…µ…µtext(5, \"JPG/PNG to PDF\");\n    i0.…µ…µelementEnd();\n    i0.…µ…µelementStart(6, \"p\", 10);\n    i0.…µ…µtext(7, \"Convert JPG, PNG, and other images to a PDF file.\");\n    i0.…µ…µelementEnd()()();\n  }\n  if (rf & 2) {\n    i0.…µ…µadvance();\n    i0.…µ…µproperty(\"routerLink\", i0.…µ…µpureFunction0(1, _c1));\n  }\n}\nfunction CompressImageComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.…µ…µgetCurrentView();\n    i0.…µ…µelementStart(0, \"div\", 11)(1, \"button\", 12);\n    i0.…µ…µlistener(\"click\", function CompressImageComponent_div_3_Template_button_click_1_listener() {\n      i0.…µ…µrestoreView(_r3);\n      const ctx_r1 = i0.…µ…µnextContext();\n      return i0.…µ…µresetView(ctx_r1.setActiveTool(null));\n    });\n    i0.…µ…µelement(2, \"i\", 13);\n    i0.…µ…µtext(3, \" All Tools \");\n    i0.…µ…µelementEnd()();\n  }\n  if (rf & 2) {\n    i0.…µ…µadvance();\n    i0.…µ…µproperty(\"routerLink\", i0.…µ…µpureFunction0(2, _c2))(\"fragment\", null);\n  }\n}\nexport let CompressImageComponent = /*#__PURE__*/(() => {\n  class CompressImageComponent {\n    http;\n    sanitizer;\n    route;\n    fileInput;\n    selectedFile = null;\n    previewUrl = '';\n    blobUrl = '';\n    compressedUrl = '';\n    downloadUrl = '';\n    originalSize = 0;\n    compressedSize = 0;\n    progress = 0;\n    errorMessage = null;\n    isDragging = false;\n    activeTool = null;\n    mode = 'compress';\n    resizeWidth = null;\n    resizeHeight = null;\n    convertFormat = '';\n    cropX = null;\n    cropY = null;\n    cropWidth = null;\n    cropHeight = null;\n    downloadedFileName = '';\n    routeSubscription;\n    constructor(http, sanitizer, route) {\n      this.http = http;\n      this.sanitizer = sanitizer;\n      this.route = route;\n    }\n    ngOnInit() {\n      this.routeSubscription = this.route.queryParams.subscribe(params => {\n        const modeParam = params['mode'];\n        if (modeParam && ['compress', 'resize', 'convert', 'crop'].includes(modeParam)) {\n          this.mode = modeParam;\n        } else {\n          this.mode = 'compress';\n        }\n      });\n    }\n    ngOnDestroy() {\n      this.revokeObjectUrls();\n      if (this.routeSubscription) {\n        this.routeSubscription.unsubscribe();\n      }\n    }\n    triggerFileInput() {\n      this.fileInput.nativeElement.click();\n    }\n    preventDefaults(event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    onDragOverSingle(event) {\n      this.preventDefaults(event);\n      this.isDragging = true;\n    }\n    onDragLeaveSingle(event) {\n      this.preventDefaults(event);\n      this.isDragging = false;\n    }\n    onDropSingle(event) {\n      this.preventDefaults(event);\n      this.isDragging = false;\n      const file = event.dataTransfer?.files?.[0];\n      if (file) {\n        if (file.type.startsWith('image/')) {\n          this.setFile(file);\n        } else {\n          this.errorMessage = 'Please drop an image file (JPG, PNG, WebP, GIF, BMP).';\n          this.resetSingleFile();\n        }\n      }\n    }\n    onFileSelectedSingle(event) {\n      const input = event.target;\n      const file = input.files?.[0];\n      if (file) this.setFile(file);\n    }\n    setFile(file) {\n      this.revokeObjectUrls();\n      this.selectedFile = file;\n      this.previewUrl = this.sanitizer.bypassSecurityTrustUrl(URL.createObjectURL(file));\n      this.originalSize = file.size;\n      this.compressedUrl = '';\n      this.blobUrl = '';\n      this.downloadUrl = '';\n      this.compressedSize = 0;\n      this.progress = 0;\n      this.downloadedFileName = '';\n      this.errorMessage = null;\n      // Reset input fields\n      this.resizeWidth = null;\n      this.resizeHeight = null;\n      this.convertFormat = '';\n      this.cropX = null;\n      this.cropY = null;\n      this.cropWidth = null;\n      this.cropHeight = null;\n    }\n    getButtonLabel() {\n      switch (this.mode) {\n        case 'resize':\n          return 'üìê Resize Image';\n        case 'convert':\n          return 'üîÑ Convert Image';\n        case 'crop':\n          return '‚úÇÔ∏è Crop Image';\n        default:\n          return '‚ö° Compress Image';\n      }\n    }\n    getResultLabel() {\n      switch (this.mode) {\n        case 'compress':\n          return 'Optimized Size';\n        case 'resize':\n          return 'Resized Size';\n        case 'convert':\n          return 'Converted Size';\n        case 'crop':\n          return 'Cropped Size';\n        default:\n          return 'Processed Size';\n      }\n    }\n    uploadSingleFile() {\n      if (!this.selectedFile) {\n        this.errorMessage = 'Please select an image first.';\n        return;\n      }\n      this.errorMessage = null;\n      this.compressedUrl = '';\n      this.compressedSize = 0;\n      this.blobUrl = '';\n      this.downloadUrl = '';\n      this.downloadedFileName = '';\n      this.progress = 0;\n      const formData = new FormData();\n      formData.append('file', this.selectedFile);\n      let endpoint = '';\n      if (this.mode === 'resize') {\n        if (!this.resizeWidth || !this.resizeHeight) {\n          this.errorMessage = 'Resize Error: Please enter valid width and height.';\n          return;\n        }\n        formData.append('width', this.resizeWidth.toString());\n        formData.append('height', this.resizeHeight.toString());\n        endpoint = `${environment.apiUrl}/resize-image`;\n      } else if (this.mode === 'convert') {\n        if (!this.convertFormat) {\n          this.errorMessage = 'Convert Error: Please select a target format.';\n          return;\n        }\n        formData.append('target_format', this.convertFormat);\n        endpoint = `${environment.apiUrl}/convert-image`;\n      } else if (this.mode === 'crop') {\n        if (this.cropX === null || this.cropY === null || this.cropWidth === null || this.cropHeight === null || this.cropWidth <= 0 || this.cropHeight <= 0) {\n          this.errorMessage = 'Crop Error: Please enter valid crop values.';\n          return;\n        }\n        formData.append('x', this.cropX.toString());\n        formData.append('y', this.cropY.toString());\n        formData.append('width', this.cropWidth.toString());\n        formData.append('height', this.cropHeight.toString());\n        endpoint = `${environment.apiUrl}/crop-image`;\n      } else {\n        endpoint = `${environment.apiUrl}/compress-image`;\n      }\n      this.http.post(endpoint, formData, {\n        reportProgress: true,\n        observe: 'events',\n        responseType: 'blob'\n      }).subscribe(event => {\n        if (event.type === HttpEventType.UploadProgress && event.total) {\n          this.progress = Math.round(event.loaded / event.total * 100);\n        }\n        if (event.type === HttpEventType.Response) {\n          const blob = new Blob([event.body], {\n            type: event.body?.type || 'image/jpeg'\n          });\n          this.compressedSize = blob.size;\n          this.revokeObjectUrls(true);\n          this.blobUrl = URL.createObjectURL(blob);\n          this.compressedUrl = this.sanitizer.bypassSecurityTrustUrl(this.blobUrl);\n          this.downloadUrl = this.blobUrl;\n          this.downloadedFileName = this.getDownloadName(blob.type);\n          this.progress = 100;\n        }\n      }, error => {\n        console.error('Image processing failed:', error);\n        this.progress = 0;\n        this.errorMessage = `Processing failed: ${error.message || 'An unknown error occurred.'}`;\n      });\n    }\n    getDownloadName(outputMimeType) {\n      const originalName = this.selectedFile?.name || 'image';\n      const lastDotIndex = originalName.lastIndexOf('.');\n      let baseName = originalName.substring(0, lastDotIndex > -1 ? lastDotIndex : originalName.length);\n      let suffix = '';\n      let outputExtension = '';\n      switch (this.mode) {\n        case 'compress':\n          suffix = 'compressed';\n          break;\n        case 'resize':\n          suffix = 'resized';\n          break;\n        case 'convert':\n          suffix = 'converted';\n          break;\n        case 'crop':\n          suffix = 'cropped';\n          break;\n        default:\n          suffix = 'processed';\n      }\n      if (outputMimeType.includes('jpeg')) outputExtension = 'jpeg';else if (outputMimeType.includes('png')) outputExtension = 'png';else if (outputMimeType.includes('webp')) outputExtension = 'webp';else if (outputMimeType.includes('gif')) outputExtension = 'gif';else if (outputMimeType.includes('bmp')) outputExtension = 'bmp';else outputExtension = originalName.substring(lastDotIndex + 1).toLowerCase() || 'jpeg';\n      if (this.mode === 'convert' && this.convertFormat) {\n        outputExtension = this.convertFormat.toLowerCase();\n      }\n      return `${baseName}_${suffix}.${outputExtension}`;\n    }\n    resetSingleFile() {\n      this.revokeObjectUrls();\n      this.selectedFile = null;\n      this.previewUrl = '';\n      this.blobUrl = '';\n      this.compressedUrl = '';\n      this.downloadUrl = '';\n      this.progress = 0;\n      this.compressedSize = 0;\n      this.originalSize = 0;\n      this.downloadedFileName = '';\n      this.errorMessage = null;\n      this.resizeWidth = null;\n      this.resizeHeight = null;\n      this.convertFormat = '';\n      this.cropX = null;\n      this.cropY = null;\n      this.cropWidth = null;\n      this.cropHeight = null;\n      if (this.fileInput && this.fileInput.nativeElement) {\n        this.fileInput.nativeElement.value = '';\n      }\n    }\n    revokeObjectUrls(onlyCompressed = false) {\n      if (!onlyCompressed && this.previewUrl) {\n        const urlString = this.previewUrl.changingThisBreaksApplicationSecurity;\n        if (urlString && urlString.startsWith('blob:')) {\n          URL.revokeObjectURL(urlString);\n        }\n      }\n      if (this.blobUrl && this.blobUrl.startsWith('blob:')) {\n        URL.revokeObjectURL(this.blobUrl);\n      }\n    }\n    static …µfac = function CompressImageComponent_Factory(t) {\n      return new (t || CompressImageComponent)(i0.…µ…µdirectiveInject(i1.HttpClient), i0.…µ…µdirectiveInject(i2.DomSanitizer), i0.…µ…µdirectiveInject(i3.ActivatedRoute));\n    };\n    static …µcmp = /*@__PURE__*/i0.…µ…µdefineComponent({\n      type: CompressImageComponent,\n      selectors: [[\"app-compress-image\"]],\n      viewQuery: function CompressImageComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.…µ…µviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.…µ…µqueryRefresh(_t = i0.…µ…µloadQuery()) && (ctx.fileInput = _t.first);\n        }\n      },\n      decls: 4,\n      vars: 3,\n      consts: [[1, \"docuflow-container\"], [\"class\", \"main-header\", 4, \"ngIf\"], [\"class\", \"tool-grid-container\", 4, \"ngIf\"], [\"class\", \"tool-workspace-wrapper\", 4, \"ngIf\"], [1, \"main-header\"], [1, \"tool-grid-container\"], [1, \"tool-card\", 3, \"click\", \"routerLink\"], [1, \"tool-icon-wrapper\", \"bg-orange\"], [1, \"fas\", \"fa-image\"], [1, \"tool-title\"], [1, \"tool-description\"], [1, \"tool-workspace-wrapper\"], [1, \"back-to-grid-btn\", 3, \"click\", \"routerLink\", \"fragment\"], [1, \"fas\", \"fa-arrow-left\"]],\n      template: function CompressImageComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.…µ…µelementStart(0, \"div\", 0);\n          i0.…µ…µtemplate(1, CompressImageComponent_header_1_Template, 5, 0, \"header\", 1)(2, CompressImageComponent_main_2_Template, 8, 2, \"main\", 2)(3, CompressImageComponent_div_3_Template, 4, 3, \"div\", 3);\n          i0.…µ…µelementEnd();\n        }\n        if (rf & 2) {\n          i0.…µ…µadvance();\n          i0.…µ…µproperty(\"ngIf\", !ctx.activeTool);\n          i0.…µ…µadvance();\n          i0.…µ…µproperty(\"ngIf\", !ctx.activeTool);\n          i0.…µ…µadvance();\n          i0.…µ…µproperty(\"ngIf\", ctx.activeTool);\n        }\n      },\n      dependencies: [i4.NgIf, i3.RouterLink],\n      styles: [\".tool-section[_ngcontent-%COMP%]{padding:40px;background-color:#fff;border-radius:20px;box-shadow:0 10px 30px #0000000f;border:1px solid #e9eff5;margin-top:30px}.tool-section-title[_ngcontent-%COMP%]{font-size:2.2rem;font-weight:700;color:#2c3e50;margin-bottom:20px;display:flex;align-items:center;gap:15px}.tool-section-title[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:2.5rem;color:#4a69bd}.tool-description-section[_ngcontent-%COMP%]{font-size:1.1rem;color:#7f8c8d;margin-bottom:40px;line-height:1.6}.image-optimizer-layout[_ngcontent-%COMP%]{display:flex;gap:40px;align-items:flex-start}.left-panel[_ngcontent-%COMP%]{flex:1;min-width:480px;background:#fff;padding:40px;border-radius:18px;box-shadow:0 10px 30px #0000000f;border:1px solid #e9eff5}.setting-group[_ngcontent-%COMP%]{margin-bottom:30px}.setting-group[_ngcontent-%COMP%]:last-of-type{margin-bottom:0}.setting-group-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fit,minmax(190px,1fr));gap:25px;margin-bottom:30px}.setting-group-grid.two-columns[_ngcontent-%COMP%]{grid-template-columns:1fr 1fr}.setting-label[_ngcontent-%COMP%]{display:block;font-size:1.05rem;font-weight:600;color:#4a69bd;margin-bottom:10px}.setting-label[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{margin-right:8px;color:#8c9bbd}.app-select[_ngcontent-%COMP%], .app-input[_ngcontent-%COMP%]{width:100%;padding:14px 18px;font-size:1.02rem;border:1px solid #d8e2ed;border-radius:10px;background-color:#fcfdff;transition:border-color .2s ease,box-shadow .2s ease;appearance:none}.app-select[_ngcontent-%COMP%]{background-image:url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='none' stroke='%238697a8' stroke-width='2' d='M7 10l5 5 5-5z'/%3E%3C/svg%3E\\\");background-repeat:no-repeat;background-position:right 15px center;background-size:16px}.app-input[_ngcontent-%COMP%]:focus, .app-select[_ngcontent-%COMP%]:focus{border-color:#4a69bd;box-shadow:0 0 0 4px #4a69bd40;outline:none}.mode-selector-tabs[_ngcontent-%COMP%]{display:flex;justify-content:space-between;background-color:#eef4ff;border-radius:12px;padding:8px;box-shadow:inset 0 2px 5px #0000000d;gap:8px;flex-wrap:wrap}.mode-tab-btn[_ngcontent-%COMP%]{flex:1;min-width:100px;background-color:transparent;color:#4a69bd;border:none;padding:12px 15px;border-radius:8px;font-size:.95rem;font-weight:600;cursor:pointer;transition:background-color .3s ease,color .3s ease,transform .2s ease,box-shadow .2s ease;display:flex;align-items:center;justify-content:center;gap:8px}.mode-tab-btn[_ngcontent-%COMP%]:hover{background-color:#d8e2ff;color:#3e5ab5;transform:translateY(-1px)}.mode-tab-btn.active[_ngcontent-%COMP%]{background-color:#4a69bd;color:#fff;box-shadow:0 4px 10px #4a69bd4d;transform:translateY(-1px)}.mode-tab-btn.active[_ngcontent-%COMP%]:hover{background-color:#3e5ab5}.main-upload-content[_ngcontent-%COMP%]{margin-top:35px;margin-bottom:35px}.upload-area-container[_ngcontent-%COMP%]{width:100%}.upload-box.main-select-button[_ngcontent-%COMP%]{background:#eef4ff;border:2px dashed #a0b2ff;padding:40px;text-align:center;cursor:pointer;border-radius:16px;transition:background .3s ease,border-color .3s ease,transform .2s ease,box-shadow .3s ease;display:flex;flex-direction:column;align-items:center;justify-content:center;min-height:200px;position:relative;box-shadow:0 5px 15px #0000000a}.upload-box.main-select-button[_ngcontent-%COMP%]:hover{background:#e2ecff;border-color:#89a0ff;transform:translateY(-2px);box-shadow:0 8px 20px #00000014}.upload-box.main-select-button.drag-over[_ngcontent-%COMP%]{background:#d8e2ff;border-color:#4a69bd;transform:translateY(-2px)}.upload-box.main-select-button[_ngcontent-%COMP%]   .upload-content[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;gap:15px;width:100%}.upload-box.main-select-button[_ngcontent-%COMP%]   .select-pdf-file-btn[_ngcontent-%COMP%]{background-color:#4a69bd;color:#fff;border:none;padding:14px 28px;border-radius:10px;font-size:1.1rem;font-weight:600;cursor:pointer;transition:background-color .2s ease,transform .2s ease,box-shadow .2s ease;box-shadow:0 6px 15px #4a69bd4d;margin-bottom:10px}.upload-box.main-select-button[_ngcontent-%COMP%]   .select-pdf-file-btn[_ngcontent-%COMP%]:hover{background-color:#3e5ab5;transform:translateY(-1px);box-shadow:0 8px 18px #4a69bd66}.upload-box.main-select-button[_ngcontent-%COMP%]   .select-pdf-file-btn-alt-icons[_ngcontent-%COMP%]{display:flex;gap:15px;margin-bottom:10px}.upload-box.main-select-button[_ngcontent-%COMP%]   .small-icon-btn[_ngcontent-%COMP%]{background:#e0e9f6;color:#4a69bd;border:none;width:48px;height:48px;border-radius:50%;display:flex;align-items:center;justify-content:center;font-size:1.2rem;cursor:pointer;transition:background-color .2s ease,color .2s ease,transform .2s ease;box-shadow:0 2px 8px #0000000d}.upload-box.main-select-button[_ngcontent-%COMP%]   .small-icon-btn[_ngcontent-%COMP%]:hover{background-color:#d1dbec;color:#3a5aa8;transform:translateY(-2px)}.upload-box.main-select-button[_ngcontent-%COMP%]   .or-drop-text[_ngcontent-%COMP%]{font-size:1rem;color:#8fa1b4;font-weight:500}.upload-box.main-select-button[_ngcontent-%COMP%]   .file-preview-area[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;gap:8px;padding:20px 0;width:100%}.upload-box.main-select-button[_ngcontent-%COMP%]   .file-thumbnail[_ngcontent-%COMP%]{font-size:4.5rem;color:#4a69bd;margin-bottom:10px}.upload-box.main-select-button[_ngcontent-%COMP%]   .file-pdf-icon[_ngcontent-%COMP%]{color:#e74c3c}.upload-box.main-select-button[_ngcontent-%COMP%]   .file-image-icon[_ngcontent-%COMP%]{color:#3498db}.upload-box.main-select-button[_ngcontent-%COMP%]   .file-word-icon[_ngcontent-%COMP%]{color:#2980b9}.upload-box.main-select-button[_ngcontent-%COMP%]   .file-name-display[_ngcontent-%COMP%]{font-size:1.15rem;font-weight:600;color:#34495e;word-break:break-all;max-width:90%}.upload-box.main-select-button[_ngcontent-%COMP%]   .file-size-display[_ngcontent-%COMP%]{font-size:.95rem;color:#7f8c8d;margin-top:2px}.upload-box.main-select-button[_ngcontent-%COMP%]   .remove-file-preview-btn[_ngcontent-%COMP%]{position:absolute;top:15px;right:15px;background:#f0f4f8;color:#6c7a8d;border:none;width:38px;height:38px;border-radius:50%;font-size:1.1rem;cursor:pointer;display:flex;align-items:center;justify-content:center;transition:background .2s ease,color .2s ease,transform .2s ease;box-shadow:0 2px 5px #0000000d}.upload-box.main-select-button[_ngcontent-%COMP%]   .remove-file-preview-btn[_ngcontent-%COMP%]:hover{background:#e2e8ef;color:#34495e;transform:rotate(90deg)}.convert-action-btn[_ngcontent-%COMP%]{width:100%;background-color:#4a69bd;color:#fff;border:none;padding:16px 30px;font-size:1.15rem;font-weight:600;border-radius:12px;cursor:pointer;transition:background-color .3s ease,transform .2s ease,box-shadow .3s ease;display:flex;align-items:center;justify-content:center;gap:12px;margin-top:35px;box-shadow:0 8px 20px #4a69bd59}.convert-action-btn[_ngcontent-%COMP%]:hover:not(:disabled){background-color:#3e5ab5;transform:translateY(-3px);box-shadow:0 12px 28px #4a69bd73}.convert-action-btn[_ngcontent-%COMP%]:disabled{background-color:#e0e6ec;color:#aebacd;cursor:not-allowed;opacity:.9;box-shadow:none;transform:none}.global-status-area[_ngcontent-%COMP%]{margin-top:35px;text-align:center;background:#f8fbfd;border-radius:12px;padding:25px;box-shadow:inset 0 0 8px #00000008;border:1px solid #e3eaf1}.loading-animation-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;gap:15px}.loading-text[_ngcontent-%COMP%]{font-size:1.1rem;color:#4a69bd;font-weight:500}.spinner[_ngcontent-%COMP%]{border:4px solid rgba(74,105,189,.2);border-top:4px solid #4a69bd;border-radius:50%;width:40px;height:40px;animation:_ngcontent-%COMP%_spin 1s linear infinite}@keyframes _ngcontent-%COMP%_spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.progress-info-block[_ngcontent-%COMP%]{text-align:left;padding:15px 0}.upload-progress-text[_ngcontent-%COMP%], .upload-file-details[_ngcontent-%COMP%], .upload-speed-time-left[_ngcontent-%COMP%]{font-size:.95rem;color:#6c7a8d;margin-bottom:5px}.upload-progress-text[_ngcontent-%COMP%]{font-weight:600;color:#4a69bd}.upload-file-details[_ngcontent-%COMP%]{font-weight:500}.upload-speed-time-left[_ngcontent-%COMP%]{font-style:italic;font-size:.85rem}.progress-indicator.upload-progress-bar[_ngcontent-%COMP%]{width:100%;background:#e0e9f6;border-radius:8px;height:12px;overflow:hidden;margin:15px 0}.progress-bar-fill[_ngcontent-%COMP%]{height:100%;background-color:#28a745;width:0%;border-radius:8px;transition:width .3s ease-out}.upload-percentage-text[_ngcontent-%COMP%]{font-size:1.1rem;font-weight:700;color:#28a745;margin-top:10px;display:block}.upload-status-text[_ngcontent-%COMP%]{font-size:.9rem;color:#6c7a8d;text-transform:uppercase;margin-top:5px}.right-panel[_ngcontent-%COMP%]{flex:1;min-width:450px;background:#fff;padding:40px;border-radius:18px;box-shadow:0 10px 30px #0000000f;border:1px solid #e9eff5;display:flex;flex-direction:column;align-items:center;text-align:center}.panel-title[_ngcontent-%COMP%]{font-size:1.7rem;font-weight:600;color:#2c3e50;display:flex;align-items:center;gap:12px;padding:0!important;margin:0!important}.panel-title[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{color:#4a69bd;font-size:1.8rem}.image-display-area[_ngcontent-%COMP%]{width:100%;height:380px;display:flex;justify-content:center;align-items:center;background:#fbfdff;border-radius:15px;overflow:hidden;margin-bottom:30px;border:2px dashed #ddeaf6}.preview-image[_ngcontent-%COMP%]{max-width:100%;max-height:100%;object-fit:contain;border-radius:10px;box-shadow:0 5px 15px #00000014}.placeholder-text[_ngcontent-%COMP%]{color:#aabcef;font-size:1.1rem;padding:30px}.placeholder-text[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:5rem;margin-bottom:20px;display:block}.result-area[_ngcontent-%COMP%], .result-message-box.error[_ngcontent-%COMP%]{width:100%;padding:30px;border-radius:12px;box-shadow:0 5px 15px #0000000d;text-align:center;border:1px solid}.result-area[_ngcontent-%COMP%]{background-color:#e6f7ed;border-color:#28a745}.result-summary[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;gap:12px}.result-summary[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:1.15rem;color:#34495e;font-weight:500}.highlight-text[_ngcontent-%COMP%]{color:#28a745;font-weight:700;font-size:1.35rem}.original-size-info[_ngcontent-%COMP%]{font-size:.95rem;color:#8fa1b4;margin-top:-5px}.download-btn[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:10px;margin-top:25px;background:#28a745;color:#fff;padding:14px 28px;border-radius:10px;text-decoration:none;font-weight:600;font-size:1.05rem;transition:background-color .3s ease,transform .2s ease,box-shadow .3s ease;box-shadow:0 5px 15px #28a7454d}.download-btn[_ngcontent-%COMP%]:hover{background-color:#218838;transform:translateY(-2px);box-shadow:0 8px 20px #28a74566}.reset-conversion-btn[_ngcontent-%COMP%]{background:#6c757d;color:#fff;border:none;padding:12px 24px;border-radius:10px;font-size:.95rem;cursor:pointer;margin-top:15px;transition:background-color .3s ease,transform .2s ease;box-shadow:0 3px 10px #6c757d33}.reset-conversion-btn[_ngcontent-%COMP%]:hover{background-color:#5a6268;transform:translateY(-1px)}.result-message-box.error[_ngcontent-%COMP%]{background-color:#ffebe9;border-color:#dc3545}.error-title[_ngcontent-%COMP%], .error-title[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{color:#dc3545}.error-message[_ngcontent-%COMP%]{color:#dc3545;font-weight:500;font-size:1.1rem;margin-top:15px;line-height:1.6}@media (max-width: 992px){.image-optimizer-layout[_ngcontent-%COMP%]{flex-direction:column;align-items:center;gap:30px}.left-panel[_ngcontent-%COMP%], .right-panel[_ngcontent-%COMP%]{width:100%;min-width:unset}.mode-selector-tabs[_ngcontent-%COMP%]{flex-direction:column;gap:10px}.mode-tab-btn[_ngcontent-%COMP%]{width:100%}}@media (max-width: 768px){.tool-section-title[_ngcontent-%COMP%]{font-size:1.8rem;gap:10px}.tool-section-title[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:2rem}.tool-description-section[_ngcontent-%COMP%]{font-size:1rem}.left-panel[_ngcontent-%COMP%], .right-panel[_ngcontent-%COMP%]{padding:30px}.upload-box.main-select-button[_ngcontent-%COMP%]{padding:35px;min-height:180px}.upload-box.main-select-button[_ngcontent-%COMP%]   .select-pdf-file-btn[_ngcontent-%COMP%]{padding:12px 25px;font-size:1rem}.upload-box.main-select-button[_ngcontent-%COMP%]   .small-icon-btn[_ngcontent-%COMP%]{width:44px;height:44px;font-size:1.1rem}.upload-box.main-select-button[_ngcontent-%COMP%]   .file-thumbnail[_ngcontent-%COMP%]{font-size:4rem}.upload-box.main-select-button[_ngcontent-%COMP%]   .file-name-display[_ngcontent-%COMP%]{font-size:1.05rem}.convert-action-btn[_ngcontent-%COMP%]{padding:15px 28px;font-size:1.05rem}.panel-title[_ngcontent-%COMP%]{font-size:1.5rem}.image-display-area[_ngcontent-%COMP%]{height:320px}.download-btn[_ngcontent-%COMP%]{padding:13px 25px;font-size:1rem}.reset-conversion-btn[_ngcontent-%COMP%]{padding:10px 20px;font-size:.9rem}}@media (max-width: 576px){.setting-group-grid[_ngcontent-%COMP%]{grid-template-columns:1fr;gap:18px}.upload-box.main-select-button[_ngcontent-%COMP%]{padding:30px}.upload-box.main-select-button[_ngcontent-%COMP%]   .file-thumbnail[_ngcontent-%COMP%]{font-size:3.5rem}.upload-box.main-select-button[_ngcontent-%COMP%]   .remove-file-preview-btn[_ngcontent-%COMP%]{width:34px;height:34px;font-size:1rem}}.size-info-inline[_ngcontent-%COMP%]{display:flex;align-items:baseline;gap:5px;justify-content:center;font-size:1.05rem;color:#34495e;font-weight:500;margin-bottom:15px}.size-info-inline[_ngcontent-%COMP%]   .highlight-text[_ngcontent-%COMP%]{color:#28a745;font-weight:700;font-size:1.25rem}.size-info-inline[_ngcontent-%COMP%]   .original-size-label[_ngcontent-%COMP%], .size-info-inline[_ngcontent-%COMP%]   .original-size-value[_ngcontent-%COMP%]{font-size:.85rem;color:#8fa1b4;margin-left:5px}.result-actions-inline[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;justify-content:center;gap:15px;width:100%}.download-btn-compact[_ngcontent-%COMP%], .reset-conversion-btn-compact[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:8px;padding:12px 22px;border-radius:8px;text-decoration:none;font-weight:600;font-size:.95rem;transition:background-color .3s ease,transform .2s ease,box-shadow .3s ease}.download-btn-compact[_ngcontent-%COMP%]{background:#28a745;color:#fff;box-shadow:0 4px 12px #28a74540}.reset-conversion-btn-compact[_ngcontent-%COMP%]{background:#6c757d;color:#fff;border:none;box-shadow:0 2px 8px #6c757d26}@media (max-width: 768px){.size-info-inline[_ngcontent-%COMP%]{flex-direction:column;align-items:center;text-align:center;gap:2px}.size-info-inline[_ngcontent-%COMP%]   .original-size-label[_ngcontent-%COMP%]{margin-left:0}.result-actions-inline[_ngcontent-%COMP%]{flex-direction:column;gap:10px}.download-btn-compact[_ngcontent-%COMP%], .reset-conversion-btn-compact[_ngcontent-%COMP%]{width:100%}}\"]\n    });\n  }\n  return CompressImageComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}